{"version":3,"sources":["meteor://ðŸ’»app/imports/startup/server/graphql.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/api/User.resolver.js","meteor://ðŸ’»app/imports/api/load.js","meteor://ðŸ’»app/imports/api/pgAdaptor.js","meteor://ðŸ’»app/server/main.js"],"names":["module","link","initialize","v","knex","require","exportDefault","Query","users","_","args","ctx","select","load","UserType","default","UserResolver","typeDefs","resolvers","exports","client","connection"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,IAAP,CAAY,gBAAZ,E;;;;;;;;;;;ACAA,IAAIC,UAAJ;AAAeF,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,YAAU,CAACC,CAAD,EAAG;AAACD,cAAU,GAACC,CAAX;AAAa;;AAA5B,CAAzC,EAAuE,CAAvE;AAA0EH,MAAM,CAACC,IAAP,CAAY,WAAZ;AAKzFC,UAAU,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLV,MAAME,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAAAL,MAAM,CAACM,aAAP,CAEe;AACXC,OAAK,EAAC;AAEHC,SAAK,EAAE,CAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB,8BAAwB;AAC9B,YAAMH,KAAK,iBAASJ,IAAI,CAAC,OAAD,CAAJ,CAAcQ,MAAd,EAAT,CAAX;AACA,aAAOJ,KAAP;AACA,KAHM;AAFJ;AADK,CAFf,E;;;;;;;;;;;ACAA,IAAIK,IAAJ;AAASb,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACY,MAAI,CAACV,CAAD,EAAG;AAACU,QAAI,GAACV,CAAL;AAAO;;AAAhB,CAA3B,EAA6C,CAA7C;AAAgD,IAAIW,QAAJ;AAAad,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACc,SAAO,CAACZ,CAAD,EAAG;AAACW,YAAQ,GAACX,CAAT;AAAW;;AAAvB,CAArB,EAA8C,CAA9C;AAAiD,IAAIa,YAAJ;AAAiBhB,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACc,SAAO,CAACZ,CAAD,EAAG;AAACa,gBAAY,GAACb,CAAb;AAAe;;AAA3B,CAA9B,EAA2D,CAA3D;AAIxIU,IAAI,CAAC;AACDI,UAAQ,EAAE,CAACH,QAAD,CADT;AAEDI,WAAS,EAAE,CAACF,YAAD;AAFV,CAAD,CAAJ,C;;;;;;;;;;;ACJAhB,MAAM,CAACmB,OAAP,GAAkBd,OAAO,CAAC,MAAD,CAAP,CAAgB;AAC9Be,QAAM,EAAE,IADsB;AAE9BC,YAAU,EAAE;AAFkB,CAAhB,CAAlB,C;;;;;;;;;;;ACAArB,MAAM,CAACC,IAAP,CAAY,2BAAZ,E","file":"/app.js","sourcesContent":["import '../../api/load';","import { initialize } from 'meteor/cultofcoders:apollo';\n\nimport './graphql';\n\n\ninitialize();\n\n\n","const knex = require('./pgAdaptor');\n\nexport default {\n    Query:{\n       \n       users: async (_, args, ctx) => {\n        const users = await knex('userx').select()\n        return users\n       }\n      }\n}\n\n","import { load } from 'graphql-load';\nimport UserType from './User';\nimport UserResolver from './User.resolver';\n\nload({\n    typeDefs: [UserType],\n    resolvers: [UserResolver],\n\n});","module.exports =  require('knex')({\n    client: 'pg',\n    connection: 'postgres://postgres@localhost:5432/xfriend'\n  })","import '../imports/startup/server';"]}