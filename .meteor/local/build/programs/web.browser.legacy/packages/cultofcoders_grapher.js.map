{"version":3,"sources":["meteor://ðŸ’»app/packages/cultofcoders:grapher/main.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/compose.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/createQuery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/config.schema.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linker.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/store.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.server.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/collection.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/applyProps.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/createGraph.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/dotize.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","link","deepExtend","v","exportDefault","args","Query","NamedQuery","NamedQueryStore","name","body","options","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","Mongo","Collection","get","Meteor","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","extend","prototype","createQuery","export","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","Match","field","String","Object","bypassSchema","Maybe","Boolean","type","OneOf","Where","isObject","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","assign","addLinks","data","each","linkConfig","linkName","_name","linker","getLinks","getLinker","hasLink","getLink","objectOrId","linkData","object","isVirtual","findOne","fields","linkStorageField","_id","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","check","access","mainCollection","_validateAndClean","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","getLinkedCollection","isMany","isSingle","isMeta","relatedLinker","contains","oneTypes","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","strategy","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","accessor","fetchAsArray","linkedObj","unset","isServer","_ensureIndex","sparse","$in","getIds","ids","find","fetch","map","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","length","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","value","undefined","filters","key","pluck","$elemMatch","Link","SmartArgs","linkedCollection","config","$metaFilters","$meta","searchFilters","appliedFilters","default","others","result","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","isArray","validIds","join","_virtualAction","action","reversedLink","element","elementId","insert","set","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","push","extendMetadata","existingMetadata","subfield","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","deepClone","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","constructor","isResolver","cacher","exposeConfig","validator","call","CountSubscription","createGraph","recursiveFetch","prepareForProcess","callWithPromise","Base","LocalCollection","intersectDeep","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","allowSkip","$options","skip","scoped","NamedQueryClient","NamedQueryServer","MemoryResultCacher","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","count","$filters","cacheResults","resolve","fn","self","_callFirewall","storage","getAll","BaseResultCacher","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","QueryBase","isGlobalQuery","QueryClient","QueryServer","hypernova","node","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","arg","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","AggregateFilters","collectionNode","create","uniq","parentObjects","eligibleObjects","storages","arrayOfIds","isValid","parent","results","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","comparator","childLinkName","parentResults","forEach","Array","limit","resultsByKeyId","groupBy","filterAssembledData","slice","SAFE_DOTTED_FIELD_REPLACEMENT","containsDottedFields","pipeline","firewall","$match","sort","$sort","dataPush","indexOf","safeField","$group","$push","$slice","$project","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","collectionNodes","bypassFirewalls","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregate","aggregationResult","document","RegExp","restrictOptions","props","applyFields","method","myParameters","Promise","reject","reason","specialFields","createNodes","addFieldNode","getNodeNamespace","CollectionNode","FieldNode","ReducerNode","dotize","createReducers","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","fieldNodes","isProjectionOperatorExpression","dotted","convert","fieldNode","parts","n","reverse","snapCache","obj","prefix","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","prop","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","getResultsArray","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","isUndefined","sameLevelResults","removeStorageField","shouldCleanStorage","childResults","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","Function","applyPagination","_params","_body","parentObject","fetchOptions","scopeQuery","$exists","collectionNodeResults","runFieldSanityChecks","nodes","scheduledForDeletion","reducers","_shouldCleanStorage","_node","hasAddedAnyField","projectionOperator","has","split","hasField","checkNested","reduce","acc","last","getField","hasCollectionNode","hasReducerNode","reducerNodes","getReducerNode","getCollectionNode","getName","subLinkName","isProjectionOperator","reduceFunction","dependencies","compute","addFieldMap","addReducers","reducerConfig","reducerName","dbField","processedReducers","reducersQueue","shift","allDependenciesComputed","all","dep","includes","flatten","cleanNestedFields","snapCacheField","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","childReducerNode","dots","addFieldIfRequired","nestedFields","startsWith","every","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\n\nexport { default as createQuery } from './lib/createQuery.js';\n\nexport {\n    default as prepareForProcess,\n} from './lib/query/lib/prepareForProcess';\n\nexport { default as Query } from './lib/query/query.client';\n\nexport { default as NamedQuery } from './lib/namedQuery/namedQuery.client';\n\nexport { default as compose } from './lib/compose';\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    },\n});\n","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport { LINK_STORAGE } from './constants.js';\nimport Linker from './linker.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker,\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(\n                `There are no links defined for collection: ${this._name}`\n            );\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(\n                `There is no link ${name} for collection: ${this._name}`\n            );\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1,\n                    },\n                });\n            } else {\n                object = { _id: objectOrId };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(\n                    `We could not find any object with _id: \"${objectOrId}\" within the collection: ${\n                        this._name\n                    }`\n                );\n            }\n        }\n\n        return linkData[name].createLink(object);\n    },\n});\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport { LinkConfigSchema, LinkConfigDefaults } from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport { check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\nimport { access } from 'fs';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() &&\n                this.linkConfig.relatedLinker.linkConfig.unique) ||\n            (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error(\n                'invalid-config',\n                `For the link ${\n                    this.linkName\n                } you did not provide a collection.`\n            );\n        }\n\n        if (typeof this.linkConfig.collection === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error(\n                    'invalid-collection',\n                    `Could not find a collection with the name: ${collectionName}`\n                );\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error(\n                        'invalid-config',\n                        `For the link ${\n                            this.linkName\n                        } you must not use the same name for the field, otherwise it will cause conflicts when fetching data`\n                    );\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const { collection, inversedBy } = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(\n                        `You tried setting up an inversed link in \"${\n                            this.mainCollection._name\n                        }\" pointing to collection: \"${\n                            collection._name\n                        }\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`\n                    );\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            });\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(\n                `There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`\n            );\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker,\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error(\n            'invalid-strategy',\n            `${this.strategy} is not a valid strategy`\n        );\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(\n            /\\./g,\n            '_'\n        );\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(\n                    `There was an error finding the link for removal for collection: \"${\n                        this.mainCollection._name\n                    }\" with link: \"${\n                        this.linkName\n                    }\". This may occur when you do a .remove() before Meteor.startup()`\n                );\n                return;\n            }\n\n            const accessor = this.createLink(doc);\n\n            _.each(accessor.fetchAsArray(), linkedObj => {\n                const { relatedLinker } = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        });\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error(\n                        'You cannot set index on an inversed link.'\n                    );\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    options = { unique: true };\n                }\n\n                this.mainCollection._ensureIndex({ [field]: 1 }, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error(\n                            'You cannot set unique property on an inversed link.'\n                        );\n                    }\n\n                    this.mainCollection._ensureIndex(\n                        {\n                            [field]: 1,\n                        },\n                        { unique: true, sparse: true }\n                    );\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField]),\n                    },\n                });\n            });\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker\n                    .find({}, { fields: { _id: 1 } })\n                    .fetch()\n                    .map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: { $in: ids },\n                });\n            });\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error(\n                'missing-package',\n                `Please add the herteby:denormalize package to your Meteor application in order to make caching work`\n            );\n        }\n\n        const { field, body, bypassSchema } = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type =\n                inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            });\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}\n","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * This is just like fetch() but forces to get an array even if it's single result\n     * \n     * @param {*} filters \n     * @param {*} options \n     * @param  {...any} others \n     */\n    fetchAsArray(filters, options, ...others) {\n        return this.find(filters, options, ...others).fetch()\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    _id: {\n                        $in: _ids\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport {_} from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\nimport {LocalCollection} from 'meteor/minimongo';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            undefined, {\n                scoped: this.options.scoped,\n                subscriptionHandle: this.subscriptionHandle\n            });\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    const isMany = linker.isMany();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                linkStorageField,\n                metaFiltersTest\n            );\n        });\n    }\n\n    if (isMeta && isMany) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(\n                aggregateResults,\n                aggregateResult => {\n                    return _.contains(aggregateResult._id, parentResult._id);\n                }\n            );\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        let comparator;\n        if (isMany) {\n            comparator = (aggregateResult, result) =>\n                _.contains(aggregateResult._id, result._id);\n        } else {\n            comparator = (aggregateResult, result) =>\n                aggregateResult._id == result._id;\n        }\n\n        const childLinkName = childCollectionNode.linkName;\n        const parentResults = childCollectionNode.parent.results;\n\n        parentResults.forEach(parentResult => {\n            // We are now finding the data from the pipeline that is related to the _id of the parent\n            const eligibleAggregateResults = aggregateResults.filter(\n                aggregateResult => comparator(aggregateResult, parentResult)\n            );\n\n            eligibleAggregateResults.forEach(aggregateResult => {\n                if (Array.isArray(parentResult[childLinkName])) {\n                    parentResult[childLinkName].push(...aggregateResult.data);\n                } else {\n                    parentResult[childLinkName] = [...aggregateResult.data];\n                }\n            });\n        });\n\n        aggregateResults.forEach(aggregateResult => {\n            allResults.push(...aggregateResult.data);\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}\n","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\n    if (childCollectionNode.results.length === 0) {\n        return;\n    }\n\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                fieldStorage,\n                metaFiltersTest\n            );\n        });\n    }\n\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n    if (strategy === 'one') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[parentResult[fieldStorage]],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            let data = [];\n            parentResult[fieldStorage].forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'one-meta') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            const _id = parentResult[fieldStorage]._id;\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[_id],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many-meta') {\n        parent.results.forEach(parentResult => {\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\n            let data = [];\n            _ids.forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n};\n\nfunction filterAssembledData(data, { limit, skip }) {\n    if (limit && Array.isArray(data)) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n","import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return (childCollectionNode.results = []);\n    }\n\n    let { filters, options } = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(\n        childCollectionNode,\n        metaFilters\n    );\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection\n            .find(filters, filteredOptions, userId)\n            .fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters,\n        });\n    } else {\n        // virtuals arrive here\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\n            childCollectionNode,\n            filters,\n            options,\n            userId\n        );\n\n        let aggregateResults = collection.aggregate(pipeline);\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(\n            childCollectionNode,\n            aggregateResults,\n            metaFilters\n        );\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nexport const specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\nfunction isProjectionOperatorExpression(body) {\n    if (_.isObject(body)) {\n        const keys = _.keys(body);\n        return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\n    }\n    return false;\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        if (!isProjectionOperatorExpression(body)) {\n            let dotted = dotize.convert({[fieldName]: body});\n            _.each(dotted, (value, key) => {\n                root.add(new FieldNode(key, value));\n            });\n        }\n        else {\n            root.add(new FieldNode(fieldName, body, true));\n        }\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * Returns namespace for node when using query path scoping.\n *\n * @param node\n * @returns {String}\n */\nexport function getNodeNamespace(node) {\n    const parts = [];\n    let n = node;\n    while (n) {\n        const name = n.linker ? n.linker.linkName : n.collection._name;\n        parts.push(name);\n        // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\n        n = n.parent;\n    }\n    return parts.reverse().join('_');\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    storeOneResults(node, node.results);\n\n    applyReducers(node, params);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    cleanReducerLeftovers(node, node.results);\n\n    removeLinkStorages(node, node.results);\n\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\nexport function getResultsArray(results) {\n    if (_.isArray(results)) {\n        return results;\n    }\n    else if (_.isUndefined(results)) {\n        return [];\n    }\n    return [results];\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    sameLevelResults = getResultsArray(sameLevelResults);\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n     \n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                if (collectionNode.isVirtual) {\n                    const childResults = getResultsArray(result[collectionNode.linkName]);\n                    _.each(childResults, childResult => {\n                        delete childResult[collectionNode.linkStorageField];\n                    });\n                } else {\n                    delete result[collectionNode.linkStorageField];\n                }\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            // The reason we are doing this is that if the requested link does not exist\n            // It will fail when we try to get undefined[something] below\n            if (result === undefined) {\n                return;\n            }\n\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            _.each(sameLevelResults, result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    // parentResults might be an object (for type==one links)\n    parentResults = getResultsArray(parentResults);\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            if (node.isOneResult) {\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n            }\n            else {\n                parentResult[linkName] = parentResult[linkName].map(object => {\n                    return Object.assign({}, object);\n                });\n            }\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    parentResults = getResultsArray(parentResults);\n\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                if (node.isOneResult) {\n                    if (_.isObject(childResult)) {\n                        const storage = childResult[node.linkStorageField];\n                        storeMetadata(childResult, parentResult, storage, true);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        const storage = object[node.linkStorageField];\n                        storeMetadata(object, parentResult, storage, true);\n                    });\n                }\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                if (node.isOneResult) {\n                    if (childResult) {\n                        storeMetadata(childResult, parentResult, storage, false);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        storeMetadata(object, parentResult, storage, false);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\nimport {getNodeNamespace} from './createGraph';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @param fetchOptions\n * @returns {*}\n */\nfunction fetch(node, parentObject, fetchOptions = {}) {\n    let {filters, options} = applyProps(node);\n    // add subscription filter\n    if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\n        _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\n    }\n    // add query path filter\n    if (fetchOptions.scoped) {\n        _.extend(filters, {[`_query_path_${getNodeNamespace(node)}`]: {$exists: true}});\n    }\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            const collectionNodeResults = fetch(collectionNode, result);\n            result[collectionNode.linkName] = collectionNodeResults;\n            //delete result[node.linker.linkStorageField];\n\n            /**\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n             * the results?\n             *\n             * Other possible ways:\n             * - do something like assemble() in storeHypernovaResults\n             * - pass node.results to accessor above and find with sift\n             */\n\n            collectionNode.results.push(...collectionNodeResults);\n\n            // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \n            // found first\n            // const currentIds = _.pluck(collectionNode.results, '_id');\n            // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params, fetchOptions) => {\n    node.results = fetch(node, null, fetchOptions);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', `The field \"${linkName}\" is a collection link, and should have its body defined as an object.`);\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (node instanceof FieldNode) {\n            runFieldSanityChecks(node.name);\n        }\n        \n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            /**\n             * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\n             * Therefore, we do not count this as a field addition.\n             * \n             * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\n             * The $meta expression specifies the inclusion of the field to the result set \n             * and does not specify the exclusion of the other fields.\n             */\n            if (n.projectionOperator !== '$meta') {\n                hasAddedAnyField = true;\n            }\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter, conditional operators and text search\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {\n                _id: 1,\n                // fields might contain $meta expression, so it should be added here,\n                ...options.fields,\n            };\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName, checkNested = false) {\n        // for checkNested flag it expands profile.phone.verified into \n        // ['profile', 'profile.phone', 'profile.phone.verified']\n        // if any of these fields match it means that field exists\n        const options = checkNested ? fieldName.split('.').reduce((acc, key) => {\n            if (acc.length === 0) {\n                return [key];\n            }\n            const [last] = acc;\n            return [...acc, `${last}.${key}`];\n        }, []) : [fieldName];\n\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return _.contains(options, fieldNode.name);\n        });\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n\n/**\n * Make sure that the field is ok to be added\n * @param {*} fieldName \n */\nexport function runFieldSanityChecks(fieldName) {\n    // Run sanity checks on the field\n    if (fieldName[0] === '$') {\n        throw new Error(`You are not allowed to use fields that start with $ inside a reducer's body: ${fieldName}`);\n    }\n\n    return true;\n}\n","export default class FieldNode {\n    constructor(name, body, isProjectionOperator = false) {\n        this.name = name;\n        this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\n        this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n        this.dependencies = []; // This is a list of the reducer this reducer uses.\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n","/**\n * @param {[niceField: string]: dbField} map\n */\nexport default function addFieldMap(map) {\n    const collection = this;\n    let reducers = {};\n    for (let key in map) {\n        const dbField = map[key];\n        reducers[key] = {\n            body: {\n                [dbField]: 1,\n            },\n            reduce(obj) {\n                return obj[dbField];\n            },\n        };\n    }\n\n    collection.addReducers(reducers);\n}\n","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    const processedReducers = [];\n    let reducersQueue = [...root.reducerNodes];\n\n    // TODO: find out if there's an infinite reducer inter-deendency\n\n    while (reducersQueue.length) {\n        const reducerNode = reducersQueue.shift();\n\n        // If this reducer depends on other reducers\n        if (reducerNode.dependencies.length) {\n            // If there is an unprocessed reducer, move it at the end of the queue\n            const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n            if (allDependenciesComputed) {\n                root.results.forEach(result => {\n                    reducerNode.compute(result, params);\n                });\n                processedReducers.push(reducerNode.name);\n            } else {\n                // Move it at the end of the queue\n                reducersQueue.push(reducerNode);\n            }\n        } else {\n            root.results.forEach(result => {\n                reducerNode.compute(result, params);\n            });\n\n            processedReducers.push(reducerNode.name);\n        }\n    }\n}\n","import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root, results) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        let childResults;\n        if (node.isOneResult) {\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n        } else {\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n        }\n\n        cleanReducerLeftovers(node, childResults);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(\n        parts, \n        results\n            .filter(result => !!result[fieldName])\n            .map(result => result[fieldName]),\n        root\n    );\n    \n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\nimport { specialFields } from '../../lib/createGraph';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(reducer, root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(reducerNode, root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(reducerNode, fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        reducerNode.dependencies.push(fieldName);\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, {body, reduce}, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let childReducerNode = new ReducerNode(fieldName, {body, reduce});\n        root.add(childReducerNode);\n        childReducerNode.scheduledForDeletion = true;\n\n        _.each(childReducerNode.body, (body, fieldName) => {\n            handleAddElement(childReducerNode, root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(reducerNode, fieldName, body, parent, linker) {\n    if (parent.hasCollectionNode(fieldName)) {\n        const collectionNode = parent.getCollectionNode(fieldName);\n\n        embedReducerWithLink(reducerNode, body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        parent.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.contains(specialFields, fieldName)) {\n        root.addProp(fieldName, body);\n\n        return;\n    }\n\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        // if it's a prop\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            addFieldIfRequired(root, key, value);\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        addFieldIfRequired(root, fieldName, body);\n    }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n    if (!root.hasField(fieldName, true)) {\n        /**\n         * Check if there are any nested fields for this field.\n         * Adding root field here and scheduling for deletion would not work if there is already nested field, \n         * for example:\n         * when trying to add meta: 1, it should be checked that there are no meta.* fields\n         * */\n\n        const nestedFields = root.fieldNodes.filter(({name}) => name.startsWith(`${fieldName}.`));\n        // remove nested fields - important for minimongo which complains for these situations\n        // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n        // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n        // and removing anything else\n        nestedFields.forEach(node => root.remove(node));\n \n        let fieldNode = new FieldNode(fieldName, body);\n        // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n        fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n\n        root.add(fieldNode);\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    if (linker.isDenormalized()) {\n                        if (linker.isSubBodyDenormalized(value)) {\n                            const cacheField = linker.linkConfig.denormalize.field;\n                            handleAddField(cacheField, value, collectionNode);\n                            return;\n                        }\n                    }\n\n                    embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(reducerNode, collectionNode, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}