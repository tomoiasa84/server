[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"server\":{\"graphql.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/graphql.js                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"../../api/load\");\n///////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/index.js                                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet initialize;\nmodule.link(\"meteor/cultofcoders:apollo\", {\n  initialize(v) {\n    initialize = v;\n  }\n\n}, 0);\nmodule.link(\"./graphql\");\ninitialize();\n///////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"User.gql\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.gql                                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"./User.gql.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////\n\n},\"User.gql.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.gql.js                                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":79}};\n    doc.loc.source = {\"body\":\"type User {\\n    id: ID\\n    name: String\\n}\\n\\ntype Query {\\n    users: [User]    \\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n///////////////////////////////////////////////////////////////////////\n\n},\"User.resolver.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.resolver.js                                      //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nconst knex = require('./pgAdaptor');\n\nmodule.exportDefault({\n  Query: {\n    users: (_, args, ctx) => Promise.asyncApply(() => {\n      const users = Promise.await(knex('userx').select());\n      return users;\n    })\n  }\n});\n///////////////////////////////////////////////////////////////////////\n\n},\"load.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/load.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet load;\nmodule.link(\"graphql-load\", {\n  load(v) {\n    load = v;\n  }\n\n}, 0);\nlet UserType;\nmodule.link(\"./User\", {\n  default(v) {\n    UserType = v;\n  }\n\n}, 1);\nlet UserResolver;\nmodule.link(\"./User.resolver\", {\n  default(v) {\n    UserResolver = v;\n  }\n\n}, 2);\nload({\n  typeDefs: [UserType],\n  resolvers: [UserResolver]\n});\n///////////////////////////////////////////////////////////////////////\n\n},\"pgAdaptor.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/pgAdaptor.js                                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.exports = require('knex')({\n  client: 'pg',\n  connection: 'postgres://postgres@localhost:5432/xfriend'\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"../imports/startup/server\");\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".gql\"\n  ]\n});\n\nrequire(\"/server/main.js\");","hash":"ec8e45c8825a0fbeb0ebcc864d250614c7d2d2f2","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/server/graphql.js","imports/startup/server/index.js","imports/api/User.resolver.js","imports/api/load.js","imports/api/pgAdaptor.js","server/main.js"],"names":["module","link","initialize","v","knex","require","exportDefault","Query","users","_","args","ctx","select","load","UserType","default","UserResolver","typeDefs","resolvers","exports","client","connection"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,IAAP,CAAY,gBAAZ,E;;;;;;;;;;;ACAA,IAAIC,UAAJ;AAAeF,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,YAAU,CAACC,CAAD,EAAG;AAACD,cAAU,GAACC,CAAX;AAAa;;AAA5B,CAAzC,EAAuE,CAAvE;AAA0EH,MAAM,CAACC,IAAP,CAAY,WAAZ;AAKzFC,UAAU,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLV,MAAME,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAAAL,MAAM,CAACM,aAAP,CAEe;AACXC,OAAK,EAAC;AAEHC,SAAK,EAAE,CAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB,8BAAwB;AAC9B,YAAMH,KAAK,iBAASJ,IAAI,CAAC,OAAD,CAAJ,CAAcQ,MAAd,EAAT,CAAX;AACA,aAAOJ,KAAP;AACA,KAHM;AAFJ;AADK,CAFf,E;;;;;;;;;;;ACAA,IAAIK,IAAJ;AAASb,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACY,MAAI,CAACV,CAAD,EAAG;AAACU,QAAI,GAACV,CAAL;AAAO;;AAAhB,CAA3B,EAA6C,CAA7C;AAAgD,IAAIW,QAAJ;AAAad,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACc,SAAO,CAACZ,CAAD,EAAG;AAACW,YAAQ,GAACX,CAAT;AAAW;;AAAvB,CAArB,EAA8C,CAA9C;AAAiD,IAAIa,YAAJ;AAAiBhB,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACc,SAAO,CAACZ,CAAD,EAAG;AAACa,gBAAY,GAACb,CAAb;AAAe;;AAA3B,CAA9B,EAA2D,CAA3D;AAIxIU,IAAI,CAAC;AACDI,UAAQ,EAAE,CAACH,QAAD,CADT;AAEDI,WAAS,EAAE,CAACF,YAAD;AAFV,CAAD,CAAJ,C;;;;;;;;;;;ACJAhB,MAAM,CAACmB,OAAP,GAAkBd,OAAO,CAAC,MAAD,CAAP,CAAgB;AAC9Be,QAAM,EAAE,IADsB;AAE9BC,YAAU,EAAE;AAFkB,CAAhB,CAAlB,C;;;;;;;;;;;ACAArB,MAAM,CAACC,IAAP,CAAY,2BAAZ,E","file":"/app.js","sourcesContent":["import '../../api/load';","import { initialize } from 'meteor/cultofcoders:apollo';\n\nimport './graphql';\n\n\ninitialize();\n\n\n","const knex = require('./pgAdaptor');\n\nexport default {\n    Query:{\n       \n       users: async (_, args, ctx) => {\n        const users = await knex('userx').select()\n        return users\n       }\n      }\n}\n\n","import { load } from 'graphql-load';\nimport UserType from './User';\nimport UserResolver from './User.resolver';\n\nload({\n    typeDefs: [UserType],\n    resolvers: [UserResolver],\n\n});","module.exports =  require('knex')({\n    client: 'pg',\n    connection: 'postgres://postgres@localhost:5432/xfriend'\n  })","import '../imports/startup/server';"]}}]