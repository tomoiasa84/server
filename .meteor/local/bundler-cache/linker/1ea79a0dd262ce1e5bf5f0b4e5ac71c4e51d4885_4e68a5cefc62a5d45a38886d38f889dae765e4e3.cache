[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar _ = Package.underscore._;\nvar Promise = Package.promise.Promise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar enableDebugLogging = Package['reywood:publish-composite'].enableDebugLogging;\nvar publishComposite = Package['reywood:publish-composite'].publishComposite;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\n\n/* Package-scope variables */\nvar key, ids, what, params, body, cacher, dotize;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:grapher\":{\"main.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/main.server.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  NamedQueryStore: () => NamedQueryStore,\n  LinkConstants: () => LinkConstants\n});\nmodule.watch(require(\"./lib/extension.js\"));\nmodule.watch(require(\"./lib/aggregate\"));\nmodule.watch(require(\"./lib/exposure/extension.js\"));\nmodule.watch(require(\"./lib/links/extension.js\"));\nmodule.watch(require(\"./lib/query/reducers/extension.js\"));\nmodule.watch(require(\"./lib/namedQuery/expose/extension.js\"));\nlet NamedQueryStore;\nmodule.watch(require(\"./lib/namedQuery/store\"), {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 0);\nlet LinkConstants;\nmodule.watch(require(\"./lib/links/constants\"), {\n  default(v) {\n    LinkConstants = v;\n  }\n\n}, 1);\nmodule.watch(require(\"./lib/createQuery.js\"), {\n  default(v) {\n    exports.createQuery = v;\n  }\n\n}, 2);\nmodule.watch(require(\"./lib/exposure/exposure.js\"), {\n  default(v) {\n    exports.Exposure = v;\n  }\n\n}, 3);\nmodule.watch(require(\"./lib/namedQuery/cache/MemoryResultCacher\"), {\n  default(v) {\n    exports.MemoryResultCacher = v;\n  }\n\n}, 4);\nmodule.watch(require(\"./lib/namedQuery/cache/BaseResultCacher\"), {\n  default(v) {\n    exports.BaseResultCacher = v;\n  }\n\n}, 5);\nmodule.watch(require(\"./lib/compose\"), {\n  default(v) {\n    exports.compose = v;\n  }\n\n}, 6);\nmodule.watch(require(\"./lib/graphql\"), {\n  \"*\": module.makeNsSetter()\n}, 7);\nmodule.watch(require(\"./lib/db\"), {\n  default(v) {\n    exports.db = v;\n  }\n\n}, 8);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"aggregate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/aggregate.js                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Promise;\nmodule.watch(require(\"meteor/promise\"), {\n  Promise(v) {\n    Promise = v;\n  }\n\n}, 0);\n\nMongo.Collection.prototype.aggregate = function (pipelines, options = {}) {\n  const coll = this.rawCollection();\n  let result = Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options); // We need to check If it's an AggregationCursor\n  // The reason we do this was because of the upgrade to 1.7 which involved a mongodb driver update\n\n  if (Array.isArray(result)) {\n    return result;\n  } else {\n    return Promise.await(result.toArray());\n  }\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"compose.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/compose.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet deepExtend;\nmodule.watch(require(\"deep-extend\"), {\n  default(v) {\n    deepExtend = v;\n  }\n\n}, 0);\nmodule.exportDefault(function (...args) {\n  return deepExtend({}, ...args);\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/createQuery.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\nmodule.exportDefault((...args) => {\n  if (typeof args[0] === 'string') {\n    let [name, body, options] = args;\n    options = options || {}; // It's a resolver query\n\n    if (_.isFunction(body)) {\n      return createNamedQuery(name, null, body, options);\n    }\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`);\n    }\n\n    return createNamedQuery(name, collection, body[entryPointName], options);\n  } else {\n    // Query Creation, it can have an endpoint as collection or as a NamedQuery\n    let [body, options] = args;\n    options = options || {};\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n        console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`);\n      }\n\n      return createNamedQuery(entryPointName, null, {}, {\n        params: body[entryPointName]\n      });\n    } else {\n      return createNormalQuery(collection, body[entryPointName], options);\n    }\n  }\n});\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n  // if it exists already, we re-use it\n  const namedQuery = NamedQueryStore.get(name);\n  let query;\n\n  if (!namedQuery) {\n    query = new NamedQuery(name, collection, body, options);\n    NamedQueryStore.add(name, query);\n  } else {\n    query = namedQuery.clone(options.params);\n  }\n\n  return query;\n}\n\nfunction createNormalQuery(collection, body, options) {\n  return new Query(collection, body, options);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"db.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/db.js                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst db = new Proxy({}, {\n  get: function (obj, prop) {\n    if (typeof prop === 'symbol') {\n      return obj[prop];\n    }\n\n    const collection = Mongo.Collection.get(prop);\n\n    if (!collection) {\n      return obj[prop];\n    }\n\n    return collection;\n  }\n});\nmodule.exportDefault(db);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/extension.js                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n  createQuery(...args) {\n    if (typeof args[0] === 'string') {\n      //NamedQuery\n      const [name, body, options] = args;\n      const query = new NamedQuery(name, this, body, options);\n      NamedQueryStore.add(name, query);\n      return query;\n    } else {\n      const [body, options] = args;\n      return new Query(this, body, options);\n    }\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure\":{\"exposure.config.schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/exposure.config.schema.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  ExposureDefaults: () => ExposureDefaults,\n  ExposureSchema: () => ExposureSchema,\n  validateBody: () => validateBody\n});\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nconst ExposureDefaults = {\n  blocking: false,\n  method: true,\n  publication: true\n};\nconst ExposureSchema = {\n  firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n  maxLimit: Match.Maybe(Match.Integer),\n  maxDepth: Match.Maybe(Match.Integer),\n  publication: Match.Maybe(Boolean),\n  method: Match.Maybe(Boolean),\n  blocking: Match.Maybe(Boolean),\n  body: Match.Maybe(Object),\n  restrictedFields: Match.Maybe([String]),\n  restrictLinks: Match.Maybe(Match.OneOf(Function, [String]))\n};\n\nfunction validateBody(collection, body) {\n  try {\n    createGraph(collection, body);\n  } catch (e) {\n    throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString());\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/exposure.js                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Exposure\n});\nlet genCountEndpoint;\nmodule.watch(require(\"../query/counts/genEndpoint.server.js\"), {\n  default(v) {\n    genCountEndpoint = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveCompose;\nmodule.watch(require(\"../query/lib/recursiveCompose.js\"), {\n  default(v) {\n    recursiveCompose = v;\n  }\n\n}, 2);\nlet hypernova;\nmodule.watch(require(\"../query/hypernova/hypernova.js\"), {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 3);\nlet ExposureSchema, ExposureDefaults, validateBody;\nmodule.watch(require(\"./exposure.config.schema.js\"), {\n  ExposureSchema(v) {\n    ExposureSchema = v;\n  },\n\n  ExposureDefaults(v) {\n    ExposureDefaults = v;\n  },\n\n  validateBody(v) {\n    validateBody = v;\n  }\n\n}, 4);\nlet enforceMaxDepth;\nmodule.watch(require(\"./lib/enforceMaxDepth.js\"), {\n  default(v) {\n    enforceMaxDepth = v;\n  }\n\n}, 5);\nlet enforceMaxLimit;\nmodule.watch(require(\"./lib/enforceMaxLimit.js\"), {\n  default(v) {\n    enforceMaxLimit = v;\n  }\n\n}, 6);\nlet cleanBody;\nmodule.watch(require(\"./lib/cleanBody.js\"), {\n  default(v) {\n    cleanBody = v;\n  }\n\n}, 7);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 8);\nlet restrictFieldsFn;\nmodule.watch(require(\"./lib/restrictFields.js\"), {\n  default(v) {\n    restrictFieldsFn = v;\n  }\n\n}, 9);\nlet restrictLinks;\nmodule.watch(require(\"./lib/restrictLinks.js\"), {\n  default(v) {\n    restrictLinks = v;\n  }\n\n}, 10);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 11);\nlet globalConfig = {};\n\nclass Exposure {\n  static setConfig(config) {\n    Object.assign(globalConfig, config);\n  }\n\n  static getConfig() {\n    return globalConfig;\n  }\n\n  static restrictFields(...args) {\n    return restrictFieldsFn(...args);\n  }\n\n  constructor(collection, config = {}) {\n    collection.__isExposedForGrapher = true;\n    collection.__exposure = this;\n    this.collection = collection;\n    this.name = `exposure_${collection._name}`;\n    this.config = config;\n\n    this._validateAndClean();\n\n    this.initSecurity();\n\n    if (this.config.publication) {\n      this.initPublication();\n    }\n\n    if (this.config.method) {\n      this.initMethod();\n    }\n\n    if (!this.config.method && !this.config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this.initCountMethod();\n    this.initCountPublication();\n  }\n\n  _validateAndClean() {\n    if (typeof this.config === 'function') {\n      const firewall = this.config;\n      this.config = {\n        firewall\n      };\n    }\n\n    this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n    check(this.config, ExposureSchema);\n\n    if (this.config.body) {\n      validateBody(this.collection, this.config.body);\n    }\n  }\n  /**\n   * Takes the body and intersects it with the exposure body, if it exists.\n   *\n   * @param body\n   * @param userId\n   * @returns {*}\n   */\n\n\n  getTransformedBody(body, userId) {\n    if (!this.config.body) {\n      return body;\n    }\n\n    const processedBody = this.getBody(userId);\n\n    if (processedBody === true) {\n      return;\n    }\n\n    return cleanBody(processedBody, body);\n  }\n  /**\n   * Gets the exposure body\n   */\n\n\n  getBody(userId) {\n    if (!this.config.body) {\n      throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n    }\n\n    let body;\n\n    if (_.isFunction(this.config.body)) {\n      body = this.config.body.call(this, userId);\n    } else {\n      body = this.config.body;\n    } // it means we allow everything, no need for cloning.\n\n\n    if (body === true) {\n      return true;\n    }\n\n    return deepClone(body, userId);\n  }\n  /**\n   * Initializing the publication for reactive query fetching\n   */\n\n\n  initPublication() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n    Meteor.publishComposite(this.name, function (body) {\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId);\n      return recursiveCompose(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    });\n  }\n  /**\n   * Initializez the method to retrieve the data via Meteor.call\n   */\n\n\n  initMethod() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n\n    const methodBody = function (body) {\n      if (!config.blocking) {\n        this.unblock();\n      }\n\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId); // if there is no exposure body defined, then we need to apply firewalls\n\n      return hypernova(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    };\n\n    Meteor.methods({\n      [this.name]: methodBody\n    });\n  }\n  /**\n   * Initializes the method to retrieve the count of the data via Meteor.call\n   * @returns {*}\n   */\n\n\n  initCountMethod() {\n    const collection = this.collection;\n    Meteor.methods({\n      [this.name + '.count'](body) {\n        this.unblock();\n        return collection.find(body.$filters || {}, {}, this.userId).count();\n      }\n\n    });\n  }\n  /**\n   * Initializes the reactive endpoint to retrieve the count of the data.\n   */\n\n\n  initCountPublication() {\n    const collection = this.collection;\n    genCountEndpoint(this.name, {\n      getCursor({\n        session\n      }) {\n        return collection.find(session.filters, {\n          fields: {\n            _id: 1\n          }\n        }, this.userId);\n      },\n\n      getSession(body) {\n        return {\n          filters: body.$filters || {}\n        };\n      }\n\n    });\n  }\n  /**\n   * Initializes security enforcement\n   * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n   */\n\n\n  initSecurity() {\n    const collection = this.collection;\n    const {\n      firewall,\n      maxLimit,\n      restrictedFields\n    } = this.config;\n    const find = collection.find.bind(collection);\n    const findOne = collection.findOne.bind(collection);\n\n    collection.firewall = (filters, options, userId) => {\n      if (userId !== undefined) {\n        this._callFirewall({\n          collection: collection\n        }, filters, options, userId);\n\n        enforceMaxLimit(options, maxLimit);\n\n        if (restrictedFields) {\n          Exposure.restrictFields(filters, options, restrictedFields);\n        }\n      }\n    };\n\n    collection.find = function (filters, options = {}, userId = undefined) {\n      if (arguments.length == 0) {\n        filters = {};\n      } // If filters is undefined it should return an empty item\n\n\n      if (arguments.length > 0 && filters === undefined) {\n        return find(undefined, options);\n      }\n\n      collection.firewall(filters, options, userId);\n      return find(filters, options);\n    };\n\n    collection.findOne = function (filters, options = {}, userId = undefined) {\n      // If filters is undefined it should return an empty item\n      if (arguments.length > 0 && filters === undefined) {\n        return null;\n      }\n\n      if (typeof filters === 'string') {\n        filters = {\n          _id: filters\n        };\n      }\n\n      collection.firewall(filters, options, userId);\n      return findOne(filters, options);\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  _callFirewall(...args) {\n    const {\n      firewall\n    } = this.config;\n\n    if (!firewall) {\n      return;\n    }\n\n    if (_.isArray(firewall)) {\n      firewall.forEach(fire => {\n        fire.call(...args);\n      });\n    } else {\n      firewall.call(...args);\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/extension.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Exposure;\nmodule.watch(require(\"./exposure.js\"), {\n  default(v) {\n    Exposure = v;\n  }\n\n}, 0);\nObject.assign(Mongo.Collection.prototype, {\n  expose(config) {\n    if (!Meteor.isServer) {\n      throw new Meteor.Error('not-allowed', `You can only expose a collection server side. ${this._name}`);\n    }\n\n    new Exposure(this, config);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanBody.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanBody.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => cleanBody\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet cleanFilters, cleanOptions;\nmodule.watch(require(\"./cleanSelectors\"), {\n  cleanFilters(v) {\n    cleanFilters = v;\n  },\n\n  cleanOptions(v) {\n    cleanOptions = v;\n  }\n\n}, 1);\nlet dotize;\nmodule.watch(require(\"../../query/lib/dotize\"), {\n  default(v) {\n    dotize = v;\n  }\n\n}, 2);\n\nfunction cleanBody(main, second, ...args) {\n  let object = {};\n\n  if (second.$filters || second.$options) {\n    const fields = getFields(main);\n    cleanFilters(second.$filters, fields);\n    cleanOptions(second.$options, fields);\n  }\n\n  _.each(second, (secondValue, key) => {\n    if (key === '$filters' || key === '$options') {\n      object[key] = secondValue;\n      return;\n    }\n\n    let value = main[key];\n\n    if (value === undefined) {\n      return;\n    } // if the main value is a function, we run it.\n\n\n    if (_.isFunction(value)) {\n      value = value.call(null, ...args);\n    } // if the main value is undefined or false, we skip the merge\n\n\n    if (value === undefined || value === false) {\n      return;\n    } // we treat this specially, if the value is true\n\n\n    if (value === true) {\n      object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n      return;\n    } // if the main value is an object\n\n\n    if (_.isObject(value)) {\n      if (_.isObject(secondValue)) {\n        // if the second one is an object as well we run recursively run the intersection\n        object[key] = cleanBody(value, secondValue, ...args);\n      } // if it is not, then we will ignore it, because it won't make sense.\n      // to merge {a: 1} with 1.\n\n\n      return;\n    } // if the main value is not an object, it should be a truthy value like 1\n\n\n    if (_.isObject(secondValue)) {\n      // if the second value is an object, then we will keep it.\n      // this won't cause problem with deep nesting because\n      // when you specify links you will have the main value as an object, otherwise it will fail\n      // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n      object[key] = deepClone(secondValue);\n    } else {\n      // if the second value is not an object, we just store the first value\n      object[key] = value;\n    }\n  });\n\n  return object;\n}\n\nfunction getFields(body) {\n  return _.keys(dotize.convert(body));\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanSelectors.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanSelectors.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  cleanOptions: () => cleanOptions,\n  cleanFilters: () => cleanFilters,\n  fieldExists: () => fieldExists\n});\n\nfunction cleanOptions(options, ensureFields) {\n  if (!options) {\n    return;\n  }\n\n  if (options.fields) {\n    options.fields = _.pick(options.fields, ...ensureFields);\n  }\n\n  if (options.sort) {\n    options.sort = _.pick(options.sort, ...ensureFields);\n  }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nfunction cleanFilters(filters, ensureFields) {\n  if (!filters) {\n    return;\n  }\n\n  _.each(filters, (value, key) => {\n    if (!_.contains(special, key)) {\n      if (!fieldExists(ensureFields, key)) {\n        delete filters[key];\n      }\n    }\n  });\n\n  deepFilterFieldsArray.forEach(field => {\n    if (filters[field]) {\n      filters[field].forEach(element => cleanFilters(element, ensureFields));\n    }\n  });\n  deepFilterFieldsObject.forEach(field => {\n    if (filters[field]) {\n      cleanFilters(filters[field], ensureFields);\n    }\n  });\n}\n\nfunction fieldExists(fields, key) {\n  for (let i = 0; i < fields.length; i++) {\n    if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxDepth.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxDepth.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  getDepth: () => getDepth\n});\nmodule.exportDefault(function (node, maxDepth) {\n  if (maxDepth === undefined) {\n    return node;\n  }\n\n  const depth = getDepth(node);\n\n  if (depth > maxDepth) {\n    throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.');\n  }\n\n  return node;\n});\n\nfunction getDepth(node) {\n  if (node.collectionNodes.length === 0) {\n    return 1;\n  }\n\n  return 1 + _.max(_.map(node.collectionNodes, getDepth));\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxLimit.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxLimit.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(function (options, maxLimit) {\n  if (maxLimit === undefined) {\n    return;\n  }\n\n  if (options.limit) {\n    if (options.limit > maxLimit) {\n      options.limit = maxLimit;\n    }\n  } else {\n    options.limit = maxLimit;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictFields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictFields.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => restrictFields\n});\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n/**\n * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n *\n * @param filters Object\n * @param options Object\n * @param restrictedFields Array\n */\n\nfunction restrictFields(filters, options, restrictedFields) {\n  if (!_.isArray(restrictedFields)) {\n    throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n  }\n\n  cleanFilters(filters, restrictedFields);\n  cleanOptions(options, restrictedFields);\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */\nfunction cleanFilters(filters, restrictedFields) {\n  if (filters) {\n    cleanObject(filters, restrictedFields);\n  }\n\n  deepFilterFieldsArray.forEach(field => {\n    if (filters[field]) {\n      filters[field].forEach(element => cleanFilters(element, restrictedFields));\n    }\n  });\n  deepFilterFieldsObject.forEach(field => {\n    if (filters[field]) {\n      cleanFilters(filters[field], restrictedFields);\n    }\n  });\n}\n/**\n * Deeply cleans options\n *\n * @param options\n * @param restrictedFields\n */\n\n\nfunction cleanOptions(options, restrictedFields) {\n  if (options.fields) {\n    cleanObject(options.fields, restrictedFields);\n\n    if (_.keys(options.fields).length === 0) {\n      _.extend(options.fields, {\n        _id: 1\n      });\n    }\n  } else {\n    options.fields = {\n      _id: 1\n    };\n  }\n\n  if (options.sort) {\n    cleanObject(options.sort, restrictedFields);\n  }\n}\n/**\n * Cleans the object (not deeply)\n *\n * @param object\n * @param restrictedFields\n */\n\n\nfunction cleanObject(object, restrictedFields) {\n  _.each(object, (value, key) => {\n    restrictedFields.forEach(restrictedField => {\n      if (matching(restrictedField, key)) {\n        delete object[key];\n      }\n    });\n  });\n}\n/**\n * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n * Example: \"profile\" and \"profile.firstName\" will be a matching field\n * @param field\n * @param subfield\n * @returns {boolean}\n */\n\n\nfunction matching(field, subfield) {\n  if (field === subfield) {\n    return true;\n  }\n\n  return subfield.slice(0, field.length + 1) === field + '.';\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictLinks.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictLinks.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => restrictLinks,\n  getLinks: () => getLinks\n});\n\nfunction restrictLinks(parentNode, ...args) {\n  const restrictedLinks = getLinks(parentNode, ...args);\n\n  if (!restrictedLinks || restrictedLinks.length) {\n    return;\n  }\n\n  _.each(parentNode.collectionNodes, collectionNode => {\n    if (_.contains(restrictedLinks, collectionNode.linkName)) {\n      parentNode.remove(collectionNode);\n    }\n  });\n}\n\nfunction getLinks(node, ...args) {\n  if (node.collection && node.collection.__exposure) {\n    const exposure = node.collection.__exposure;\n\n    if (exposure.config.restrictLinks) {\n      const configRestrictLinks = exposure.config.restrictLinks;\n\n      if (_.isArray(configRestrictLinks)) {\n        return configRestrictLinks;\n      }\n\n      return configRestrictLinks(...args);\n    }\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"graphql\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/index.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  astToQuery: () => astToQuery\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet astToQuery;\nmodule.watch(require(\"./lib/astToQuery\"), {\n  default(v) {\n    astToQuery = v;\n  }\n\n}, 1);\nmodule.watch(require(\"./lib/defaults\"), {\n  setAstToQueryDefaults(v) {\n    exports.setAstToQueryDefaults = v;\n  }\n\n}, 2);\nmodule.watch(require(\"./lib/astToBody\"), {\n  default(v) {\n    exports.astToBody = v;\n  }\n\n}, 3);\nObject.assign(Mongo.Collection.prototype, {\n  astToQuery\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"astToBody.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/astToBody.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Symbols: () => Symbols,\n  default: () => astToBody\n});\nconst Symbols = {\n  ARGUMENTS: Symbol('arguments')\n};\n\nfunction astToBody(ast) {\n  const fieldNodes = ast.fieldNodes;\n  const body = extractSelectionSet(ast.fieldNodes[0].selectionSet);\n  return body;\n}\n\nfunction extractSelectionSet(set) {\n  let body = {};\n  set.selections.forEach(el => {\n    if (!el.selectionSet) {\n      body[el.name.value] = 1;\n    } else {\n      body[el.name.value] = extractSelectionSet(el.selectionSet);\n\n      if (el.arguments.length) {\n        let argumentMap = {};\n        el.arguments.forEach(arg => {\n          argumentMap[arg.name.value] = arg.value.value;\n        });\n        body[el.name.value][Symbols.ARGUMENTS] = argumentMap;\n      }\n    }\n  });\n  return body;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"astToQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/astToQuery.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => astToQuery,\n  getMaxDepth: () => getMaxDepth,\n  deny: () => deny,\n  clearEmptyObjects: () => clearEmptyObjects,\n  createGetArgs: () => createGetArgs\n});\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet astToBody, Symbols;\nmodule.watch(require(\"./astToBody\"), {\n  default(v) {\n    astToBody = v;\n  },\n\n  Symbols(v) {\n    Symbols = v;\n  }\n\n}, 1);\nlet defaults;\nmodule.watch(require(\"./defaults\"), {\n  default(v) {\n    defaults = v;\n  }\n\n}, 2);\nlet intersectDeep;\nmodule.watch(require(\"../../query/lib/intersectDeep\"), {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 3);\nlet enforceMaxLimit;\nmodule.watch(require(\"../../exposure/lib/enforceMaxLimit\"), {\n  default(v) {\n    enforceMaxLimit = v;\n  }\n\n}, 4);\nconst Errors = {\n  MAX_DEPTH: 'The maximum depth of this request exceeds the depth allowed.'\n};\n\nfunction astToQuery(ast, config = {}) {\n  const collection = this;\n  check(config, {\n    embody: Match.Maybe(Function),\n    $filters: Match.Maybe(Object),\n    $options: Match.Maybe(Object),\n    maxDepth: Match.Maybe(Number),\n    maxLimit: Match.Maybe(Number),\n    deny: Match.Maybe([String]),\n    intersect: Match.Maybe(Object)\n  });\n  config = Object.assign({\n    $options: {},\n    $filters: {}\n  }, defaults, config); // get the body\n\n  let body = astToBody(ast); // first we do the intersection\n\n  if (config.intersect) {\n    body = intersectDeep(config.intersect, body);\n  } // enforce the maximum amount of data we allow to retrieve\n\n\n  if (config.maxLimit) {\n    enforceMaxLimit(config.$options, config.maxLimit);\n  } // figure out depth based\n\n\n  if (config.maxDepth) {\n    const currentMaxDepth = getMaxDepth(body);\n\n    if (currentMaxDepth > config.maxDepth) {\n      throw Errors.MAX_DEPTH;\n    }\n  }\n\n  if (config.deny) {\n    deny(body, config.deny);\n  }\n\n  Object.assign(body, {\n    $filters: config.$filters,\n    $options: config.$options\n  });\n\n  if (config.embody) {\n    const getArgs = createGetArgs(body);\n    config.embody.call(null, {\n      body,\n      getArgs\n    });\n  } // we return the query\n\n\n  return this.createQuery(body);\n}\n\nfunction getMaxDepth(body) {\n  let depths = [];\n\n  for (key in body) {\n    if (_.isObject(body[key])) {\n      depths.push(getMaxDepth(body[key]));\n    }\n  }\n\n  if (depths.length === 0) {\n    return 1;\n  }\n\n  return Math.max(...depths) + 1;\n}\n\nfunction deny(body, fields) {\n  fields.forEach(field => {\n    let parts = field.split('.');\n    let accessor = body;\n\n    while (parts.length != 0) {\n      if (parts.length === 1) {\n        delete accessor[parts[0]];\n      } else {\n        if (!_.isObject(accessor)) {\n          break;\n        }\n\n        accessor = accessor[parts[0]];\n      }\n\n      parts.shift();\n    }\n  });\n  return clearEmptyObjects(body);\n}\n\nfunction clearEmptyObjects(body) {\n  // clear empty nodes then back-propagate\n  for (let key in body) {\n    if (_.isObject(body[key])) {\n      const shouldDelete = clearEmptyObjects(body[key]);\n\n      if (shouldDelete) {\n        delete body[key];\n      }\n    }\n  }\n\n  return Object.keys(body).length === 0;\n}\n\nfunction createGetArgs(body) {\n  return function (path) {\n    const parts = path.split('.');\n    let stopped = false;\n    let accessor = body;\n\n    for (var i = 0; i < parts.length; i++) {\n      if (!accessor) {\n        stopped = true;\n        break;\n      }\n\n      if (accessor[parts[i]]) {\n        accessor = accessor[parts[i]];\n      }\n    }\n\n    if (stopped) {\n      return {};\n    }\n\n    if (accessor) {\n      return accessor[Symbols.ARGUMENTS] || {};\n    }\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defaults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/defaults.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  setAstToQueryDefaults: () => setAstToQueryDefaults\n});\nlet defaults = {};\nmodule.exportDefault(defaults);\n\nfunction setAstToQueryDefaults(object) {\n  Object.assign(defaults, object);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"links\":{\"config.schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/config.schema.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  DenormalizeSchema: () => DenormalizeSchema,\n  LinkConfigDefaults: () => LinkConfigDefaults,\n  LinkConfigSchema: () => LinkConfigSchema\n});\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst DenormalizeSchema = {\n  field: String,\n  body: Object,\n  bypassSchema: Match.Maybe(Boolean)\n};\nconst LinkConfigDefaults = {\n  type: 'one'\n};\nconst LinkConfigSchema = {\n  type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n  collection: Match.Maybe(Match.Where(collection => {\n    // We do like this so it works with other types of collections \n    // like FS.Collection\n    return _.isObject(collection) && (collection instanceof Mongo.Collection || !!collection._collection);\n  })),\n  field: Match.Maybe(String),\n  metadata: Match.Maybe(Boolean),\n  inversedBy: Match.Maybe(String),\n  index: Match.Maybe(Boolean),\n  unique: Match.Maybe(Boolean),\n  autoremove: Match.Maybe(Boolean),\n  denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema))\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/constants.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  LINK_STORAGE: () => LINK_STORAGE\n});\nconst LINK_STORAGE = '__links';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/extension.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LINK_STORAGE;\nmodule.watch(require(\"./constants.js\"), {\n  LINK_STORAGE(v) {\n    LINK_STORAGE = v;\n  }\n\n}, 1);\nlet Linker;\nmodule.watch(require(\"./linker.js\"), {\n  default(v) {\n    Linker = v;\n  }\n\n}, 2);\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * The data we add should be valid for config.schema.js\n   */\n  addLinks(data) {\n    if (!this[LINK_STORAGE]) {\n      this[LINK_STORAGE] = {};\n    }\n\n    _.each(data, (linkConfig, linkName) => {\n      if (this[LINK_STORAGE][linkName]) {\n        throw new Meteor.Error(`You cannot add the link with name: ${linkName} because it was already added to ${this._name} collection`);\n      }\n\n      const linker = new Linker(this, linkName, linkConfig);\n\n      _.extend(this[LINK_STORAGE], {\n        [linkName]: linker\n      });\n    });\n  },\n\n  getLinks() {\n    return this[LINK_STORAGE];\n  },\n\n  getLinker(name) {\n    if (this[LINK_STORAGE]) {\n      return this[LINK_STORAGE][name];\n    }\n  },\n\n  hasLink(name) {\n    if (!this[LINK_STORAGE]) {\n      return false;\n    }\n\n    return !!this[LINK_STORAGE][name];\n  },\n\n  getLink(objectOrId, name) {\n    let linkData = this[LINK_STORAGE];\n\n    if (!linkData) {\n      throw new Meteor.Error(`There are no links defined for collection: ${this._name}`);\n    }\n\n    if (!linkData[name]) {\n      throw new Meteor.Error(`There is no link ${name} for collection: ${this._name}`);\n    }\n\n    const linker = linkData[name];\n    let object = objectOrId;\n\n    if (typeof objectOrId == 'string') {\n      if (!linker.isVirtual()) {\n        object = this.findOne(objectOrId, {\n          fields: {\n            [linker.linkStorageField]: 1\n          }\n        });\n      } else {\n        object = {\n          _id: objectOrId\n        };\n      }\n\n      if (!object) {\n        throw new Meteor.Error(`We could not find any object with _id: \"${objectOrId}\" within the collection: ${this._name}`);\n      }\n    }\n\n    return linkData[name].createLink(object);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linker.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linker.js                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Linker\n});\nlet LinkMany;\nmodule.watch(require(\"./linkTypes/linkMany.js\"), {\n  default(v) {\n    LinkMany = v;\n  }\n\n}, 0);\nlet LinkManyMeta;\nmodule.watch(require(\"./linkTypes/linkManyMeta.js\"), {\n  default(v) {\n    LinkManyMeta = v;\n  }\n\n}, 1);\nlet LinkOne;\nmodule.watch(require(\"./linkTypes/linkOne.js\"), {\n  default(v) {\n    LinkOne = v;\n  }\n\n}, 2);\nlet LinkOneMeta;\nmodule.watch(require(\"./linkTypes/linkOneMeta.js\"), {\n  default(v) {\n    LinkOneMeta = v;\n  }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.watch(require(\"./config.schema.js\"), {\n  LinkConfigSchema(v) {\n    LinkConfigSchema = v;\n  },\n\n  LinkConfigDefaults(v) {\n    LinkConfigDefaults = v;\n  }\n\n}, 4);\nlet smartArguments;\nmodule.watch(require(\"./linkTypes/lib/smartArguments\"), {\n  default(v) {\n    smartArguments = v;\n  }\n\n}, 5);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 6);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 7);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 8);\n\nclass Linker {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  constructor(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  get oneTypes() {\n    return ['one', '1'];\n  }\n  /**\n   * Returns the strategies: one, many, one-meta, many-meta\n   * @returns {string}\n   */\n\n\n  get strategy() {\n    let strategy = this.isMany() ? 'many' : 'one';\n\n    if (this.linkConfig.metadata) {\n      strategy += '-meta';\n    }\n\n    return strategy;\n  }\n  /**\n   * Returns the field name in the document where the actual relationships are stored.\n   * @returns string\n   */\n\n\n  get linkStorageField() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.linkStorageField;\n    }\n\n    return this.linkConfig.field;\n  }\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n\n\n  getLinkedCollection() {\n    return this.linkConfig.collection;\n  }\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n\n\n  isMany() {\n    return !this.isSingle();\n  }\n  /**\n   * If the relationship for this link contains metadata\n   */\n\n\n  isMeta() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isMeta();\n    }\n\n    return !!this.linkConfig.metadata;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isSingle() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isSingle();\n    }\n\n    return _.contains(this.oneTypes, this.linkConfig.type);\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isVirtual() {\n    return !!this.linkConfig.inversedBy;\n  }\n  /**\n   * Should return a single result.\n   */\n\n\n  isOneResult() {\n    return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n  }\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n\n\n  createLink(object, collection = null) {\n    let helperClass = this._getHelperClass();\n\n    return new helperClass(this, object, collection);\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _validateAndClean() {\n    if (!this.linkConfig.collection) {\n      throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`);\n    }\n\n    if (typeof this.linkConfig.collection === 'string') {\n      const collectionName = this.linkConfig.collection;\n      this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n      }\n    }\n\n    if (this.isVirtual()) {\n      return this._prepareVirtual();\n    } else {\n      if (!this.linkConfig.type) {\n        this.linkConfig.type = 'one';\n      }\n\n      if (!this.linkConfig.field) {\n        this.linkConfig.field = this._generateFieldName();\n      } else {\n        if (this.linkConfig.field == this.linkName) {\n          throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n        }\n      }\n    }\n\n    check(this.linkConfig, LinkConfigSchema);\n  }\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n\n\n  _prepareVirtual() {\n    const {\n      collection,\n      inversedBy\n    } = this.linkConfig;\n    let linker = collection.getLinker(inversedBy);\n\n    if (!linker) {\n      // it is possible that the collection doesn't have a linker created yet.\n      // so we will create it on startup after all links have been defined\n      Meteor.startup(() => {\n        linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n          throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`);\n        } else {\n          this._setupVirtualConfig(linker);\n        }\n      });\n    } else {\n      this._setupVirtualConfig(linker);\n    }\n  }\n  /**\n   * @param linker\n   * @private\n   */\n\n\n  _setupVirtualConfig(linker) {\n    const virtualLinkConfig = linker.linkConfig;\n\n    if (!virtualLinkConfig) {\n      throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`);\n    }\n\n    _.extend(this.linkConfig, {\n      metadata: virtualLinkConfig.metadata,\n      relatedLinker: linker\n    });\n  }\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n\n\n  _getHelperClass() {\n    switch (this.strategy) {\n      case 'many-meta':\n        return LinkManyMeta;\n\n      case 'many':\n        return LinkMany;\n\n      case 'one-meta':\n        return LinkOneMeta;\n\n      case 'one':\n        return LinkOne;\n    }\n\n    throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n  }\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n\n\n  _generateFieldName() {\n    let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n    let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n    switch (this.strategy) {\n      case 'many-meta':\n        return `${defaultFieldPrefix}_metas`;\n\n      case 'many':\n        return `${defaultFieldPrefix}_ids`;\n\n      case 'one-meta':\n        return `${defaultFieldPrefix}_meta`;\n\n      case 'one':\n        return `${defaultFieldPrefix}_id`;\n    }\n  }\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n\n\n  _handleReferenceRemovalForVirtualLinks() {\n    this.mainCollection.after.remove((userId, doc) => {\n      // this problem may occur when you do a .remove() before Meteor.startup()\n      if (!this.linkConfig.relatedLinker) {\n        console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n        return;\n      }\n\n      let accessor = this.createLink(doc);\n\n      _.each(accessor.fetch(), linkedObj => {\n        const {\n          relatedLinker\n        } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n        // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n        // if a removal happens before Meteor.startup this may fail\n\n        if (relatedLinker) {\n          let link = relatedLinker.createLink(linkedObj);\n\n          if (relatedLinker.isSingle()) {\n            link.unset();\n          } else {\n            link.remove(doc);\n          }\n        }\n      });\n    });\n  }\n\n  _initIndex() {\n    if (Meteor.isServer) {\n      let field = this.linkConfig.field;\n\n      if (this.linkConfig.metadata) {\n        field = field + '._id';\n      }\n\n      if (this.linkConfig.index) {\n        if (this.isVirtual()) {\n          throw new Meteor.Error('You cannot set index on an inversed link.');\n        }\n\n        let options;\n\n        if (this.linkConfig.unique) {\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          options = {\n            unique: true\n          };\n        }\n\n        this.mainCollection._ensureIndex({\n          [field]: 1\n        }, options);\n      } else {\n        if (this.linkConfig.unique) {\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set unique property on an inversed link.');\n          }\n\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          this.mainCollection._ensureIndex({\n            [field]: 1\n          }, {\n            unique: true\n          });\n        }\n      }\n    }\n  }\n\n  _initAutoremove() {\n    if (!this.linkConfig.autoremove) {\n      return;\n    }\n\n    if (!this.isVirtual()) {\n      this.mainCollection.after.remove((userId, doc) => {\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: smartArguments.getIds(doc[this.linkStorageField])\n          }\n        });\n      });\n    } else {\n      this.mainCollection.after.remove((userId, doc) => {\n        const linker = this.mainCollection.getLink(doc, this.linkName);\n        const ids = linker.find({}, {\n          fields: {\n            _id: 1\n          }\n        }).fetch().map(item => item._id);\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: ids\n          }\n        });\n      });\n    }\n  }\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n\n\n  _initDenormalization() {\n    if (!this.linkConfig.denormalize || !Meteor.isServer) {\n      return;\n    }\n\n    const packageExists = !!Package['herteby:denormalize'];\n\n    if (!packageExists) {\n      throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`);\n    }\n\n    const {\n      field,\n      body,\n      bypassSchema\n    } = this.linkConfig.denormalize;\n    let cacheConfig;\n    let referenceFieldSuffix = '';\n\n    if (this.isMeta()) {\n      referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n    }\n\n    if (this.isVirtual()) {\n      let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n      let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n      cacheConfig = {\n        type: type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: inversedLink.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    } else {\n      cacheConfig = {\n        type: this.linkConfig.type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: this.linkConfig.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    }\n\n    if (this.isVirtual()) {\n      Meteor.startup(() => {\n        this.mainCollection.cache(cacheConfig);\n      });\n    } else {\n      this.mainCollection.cache(cacheConfig);\n    }\n  }\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isDenormalized() {\n    return !!this.linkConfig.denormalize;\n  }\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isSubBodyDenormalized(body) {\n    const cacheBody = this.linkConfig.denormalize.body;\n\n    const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n    const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n    return _.difference(bodyFields, cacheBodyFields).length === 0;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"createSearchFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/lib/createSearchFilters.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => createSearchFilters,\n  createOne: () => createOne,\n  createOneVirtual: () => createOneVirtual,\n  createOneMeta: () => createOneMeta,\n  createOneMetaVirtual: () => createOneMetaVirtual,\n  createMany: () => createMany,\n  createManyVirtual: () => createManyVirtual,\n  createManyMeta: () => createManyMeta,\n  createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: object[fieldStorage]\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  const value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  let value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return {\n    [fieldStorage]: {\n      $elemMatch: filters\n    }\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"linkTypes\":{\"base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/base.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Link\n});\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 0);\nlet createSearchFilters;\nmodule.watch(require(\"../lib/createSearchFilters\"), {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 1);\n\nclass Link {\n  get config() {\n    return this.linker.linkConfig;\n  }\n\n  get isVirtual() {\n    return this.linker.isVirtual();\n  }\n\n  constructor(linker, object, collection) {\n    this.linker = linker;\n    this.object = object;\n    this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n    if (this.linker.isVirtual()) {\n      this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n    } else {\n      this.linkStorageField = this.config.field;\n    }\n  }\n  /**\n   * Gets the stored link information value\n   * @returns {*}\n   */\n\n\n  value() {\n    if (this.isVirtual) {\n      throw new Meteor.Error('You can only take the value from the main link.');\n    }\n\n    return this.object[this.linkStorageField];\n  }\n  /**\n   * Finds linked data.\n   *\n   * @param filters\n   * @param options\n   * @returns {*}\n   * @param userId\n   */\n\n\n  find(filters = {}, options = {}, userId = undefined) {\n    let linker = this.linker;\n    const linkedCollection = this.linkedCollection;\n    let $metaFilters;\n\n    if (filters.$meta) {\n      $metaFilters = filters.$meta;\n      delete filters.$meta;\n    }\n\n    const searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n    let appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n    // happens due to recursive importing of modules\n    // TODO: find another way to do this\n\n\n    if (linkedCollection.find) {\n      return linkedCollection.find(appliedFilters, options, userId);\n    } else {\n      return linkedCollection.default.find(appliedFilters, options, userId);\n    }\n  }\n  /**\n   * @param filters\n   * @param options\n   * @param others\n   * @returns {*|{content}|any}\n   */\n\n\n  fetch(filters, options, ...others) {\n    let result = this.find(filters, options, ...others).fetch();\n\n    if (this.linker.isOneResult()) {\n      return _.first(result);\n    }\n\n    return result;\n  }\n  /**\n   * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n   * We use clean to make it an empty array by default.\n   */\n\n\n  clean() {}\n  /**\n   * Extracts a single id\n   */\n\n\n  identifyId(what, saveToDatabase) {\n    return SmartArgs.getId(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Extracts the ids of object(s) or strings and returns an array.\n   */\n\n\n  identifyIds(what, saveToDatabase) {\n    return SmartArgs.getIds(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Checks when linking data, if the ids are valid with the linked collection.\n   * @throws Meteor.Error\n   * @param ids\n   *\n   * @protected\n   */\n\n\n  _validateIds(ids) {\n    if (!_.isArray(ids)) {\n      ids = [ids];\n    }\n\n    const validIds = this.linkedCollection.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).fetch().map(doc => doc._id);\n\n    if (validIds.length != ids.length) {\n      throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`);\n    }\n  }\n  /**\n   * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n   *\n   * @param action\n   * @param what\n   * @param metadata\n   *\n   * @protected\n   */\n\n\n  _virtualAction(action, what, metadata) {\n    const linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n    if (what === undefined) {\n      const reversedLink = linker.createLink(this.fetch());\n      reversedLink.unset();\n      return;\n    }\n\n    if (!_.isArray(what)) {\n      what = [what];\n    }\n\n    what = _.map(what, element => {\n      if (!_.isObject(element)) {\n        return linker.mainCollection.findOne(element);\n      } else {\n        if (!element._id) {\n          const elementId = linker.mainCollection.insert(element);\n\n          _.extend(element, linker.mainCollection.findOne(elementId));\n        }\n\n        return element;\n      }\n    });\n    return _.map(what, element => {\n      const reversedLink = linker.createLink(element);\n\n      if (action == 'metadata') {\n        if (linker.isSingle()) {\n          return reversedLink.metadata(metadata);\n        } else {\n          return reversedLink.metadata(this.object, metadata);\n        }\n      } else if (action == 'add' || action == 'set') {\n        if (linker.isSingle()) {\n          reversedLink.set(this.object, metadata);\n        } else {\n          reversedLink.add(this.object, metadata);\n        }\n      } else {\n        if (linker.isSingle()) {\n          reversedLink.unset();\n        } else {\n          reversedLink.remove(this.object);\n        }\n      }\n    });\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkMany.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkMany.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkMany\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkMany extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n    this.clean();\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    const field = this.linkStorageField; // update the field\n\n    this.object[field] = _.union(this.object[field], _ids); // update the db\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   */\n\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n    this.clean();\n    const field = this.linkStorageField;\n\n    const _ids = this.identifyIds(what); // update the field\n\n\n    this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id)); // update the db\n\n    let modifier = {\n      $pullAll: {\n        [field]: _ids\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkManyMeta.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkManyMeta.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkManyMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkManyMeta extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * @param what\n   * @param metadata\n   */\n\n\n  add(what, metadata = {}) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    let field = this.linkStorageField;\n    this.object[field] = this.object[field] || [];\n    let metadatas = [];\n\n    _.each(_ids, _id => {\n      let localMetadata = _.clone(metadata);\n\n      localMetadata._id = _id;\n      this.object[field].push(localMetadata);\n      metadatas.push(localMetadata);\n    });\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: metadatas\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   * @param extendMetadata\n   */\n\n\n  metadata(what, extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', what, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (what === undefined) {\n      return this.object[field];\n    }\n\n    if (_.isArray(what)) {\n      throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n    }\n\n    const _id = this.identifyId(what);\n\n    let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n\n    if (extendMetadata === undefined) {\n      return existingMetadata;\n    } else {\n      _.extend(existingMetadata, extendMetadata);\n\n      let subfield = field + '._id';\n      let subfieldUpdate = field + '.$';\n      this.linker.mainCollection.update({\n        _id: this.object._id,\n        [subfield]: _id\n      }, {\n        $set: {\n          [subfieldUpdate]: existingMetadata\n        }\n      });\n    }\n\n    return this;\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what);\n\n    let field = this.linkStorageField;\n    this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n    let modifier = {\n      $pull: {\n        [field]: {\n          $elemMatch: {\n            _id: {\n              $in: _ids\n            }\n          }\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOne.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOne.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkOne\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOne extends Link {\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    const _id = this.identifyId(what, true);\n\n    this._validateIds([_id]);\n\n    this.object[field] = _id;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: _id\n      }\n    });\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = null;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: null\n      }\n    });\n    return this;\n  }\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOneMeta.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOneMeta.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkOneMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOneMeta extends Link {\n  set(what, metadata = {}) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    metadata._id = this.identifyId(what, true);\n\n    this._validateIds([metadata._id]);\n\n    this.object[field] = metadata;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: metadata\n      }\n    });\n    return this;\n  }\n\n  metadata(extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', undefined, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (!extendMetadata) {\n      return this.object[field];\n    } else {\n      _.extend(this.object[field], extendMetadata);\n\n      this.linker.mainCollection.update(this.object._id, {\n        $set: {\n          [field]: this.object[field]\n        }\n      });\n    }\n\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset');\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = {};\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: {}\n      }\n    });\n    return this;\n  }\n\n  add(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"smartArguments.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/lib/smartArguments.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(new class {\n  getIds(what, options) {\n    if (_.isArray(what)) {\n      return _.map(what, subWhat => {\n        return this.getId(subWhat, options);\n      });\n    } else {\n      return [this.getId(what, options)];\n    }\n\n    throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n  }\n\n  getId(what, options) {\n    if (typeof what === 'string') {\n      return what;\n    }\n\n    if (typeof what === 'object') {\n      if (!what._id && options.saveToDatabase) {\n        what._id = options.collection.insert(what);\n      }\n\n      return what._id;\n    }\n  }\n\n}());\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"namedQuery\":{\"namedQuery.base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.base.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\n\nclass NamedQueryBase {\n  constructor(name, collection, body, options = {}) {\n    this.isNamedQuery = true;\n    this.queryName = name;\n\n    if (_.isFunction(body)) {\n      this.resolver = body;\n    } else {\n      this.body = deepClone(body);\n    }\n\n    this.subscriptionHandle = null;\n    this.params = options.params || {};\n    this.options = options;\n    this.collection = collection;\n    this.isExposed = false;\n  }\n\n  get name() {\n    return `named_query_${this.queryName}`;\n  }\n\n  get isResolver() {\n    return !!this.resolver;\n  }\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams(params) {\n    params = params || this.params;\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    try {\n      this._validate(validateParams, params);\n    } catch (validationError) {\n      console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n      throw validationError; // rethrow\n    }\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _objectSpread2.default)({}, this.options, {\n      params\n    }));\n    clone.cacher = this.cacher;\n\n    if (this.exposeConfig) {\n      clone.exposeConfig = this.exposeConfig;\n    }\n\n    return clone;\n  }\n  /**\n   * @param {function|object} validator\n   * @param {object} params\n   * @private\n   */\n\n\n  _validate(validator, params) {\n    if (_.isFunction(validator)) {\n      validator.call(null, params);\n    } else {\n      check(params, validator);\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.client.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.client.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet CountSubscription;\nmodule.watch(require(\"../query/counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveFetch;\nmodule.watch(require(\"../query/lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 2);\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"../query/lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\nmodule.exportDefault(class extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(this.params, callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, this.params));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', this.params));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', this.params, callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, this.params, callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = this.body;\n\n    if (this.params.$body) {\n      body = intersectDeep(body, this.params.$body);\n    }\n\n    body = prepareForProcess(body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body));\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet NamedQueryClient;\nmodule.watch(require(\"./namedQuery.client\"), {\n  default(v) {\n    NamedQueryClient = v;\n  }\n\n}, 0);\nlet NamedQueryServer;\nmodule.watch(require(\"./namedQuery.server\"), {\n  default(v) {\n    NamedQueryServer = v;\n  }\n\n}, 1);\nlet NamedQuery;\n\nif (Meteor.isServer) {\n  NamedQuery = NamedQueryServer;\n} else {\n  NamedQuery = NamedQueryClient;\n}\n\nmodule.exportDefault(NamedQuery);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.server.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 0);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet MemoryResultCacher;\nmodule.watch(require(\"./cache/MemoryResultCacher\"), {\n  default(v) {\n    MemoryResultCacher = v;\n  }\n\n}, 3);\nlet intersectDeep;\nmodule.watch(require(\"../query/lib/intersectDeep\"), {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 4);\nmodule.exportDefault(class extends Base {\n  /**\n   * Retrieves the data.\n   * @returns {*}\n   */\n  fetch(context) {\n    this._performSecurityChecks(context, this.params);\n\n    if (this.isResolver) {\n      return this._fetchResolverData(context);\n    } else {\n      body = deepClone(this.body);\n\n      if (this.params.$body) {\n        body = intersectDeep(body, this.params.$body);\n      } // we must apply emobdyment here\n\n\n      this.doEmbodimentIfItApplies(body);\n      const query = this.collection.createQuery(deepClone(body), {\n        params: deepClone(this.params)\n      });\n\n      if (this.cacher) {\n        const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          query\n        });\n      }\n\n      return query.fetch();\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    return _.first(this.fetch(...args));\n  }\n  /**\n   * Gets the count of matching elements.\n   *\n   * @returns {any}\n   */\n\n\n  getCount(context) {\n    this._performSecurityChecks(context, this.params);\n\n    const countCursor = this.getCursorForCounting();\n\n    if (this.cacher) {\n      const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        countCursor\n      });\n    }\n\n    return countCursor.count();\n  }\n  /**\n   * Returns the cursor for counting\n   * This is most likely used for counts cursor\n   */\n\n\n  getCursorForCounting() {\n    let body = deepClone(this.body);\n    this.doEmbodimentIfItApplies(body);\n    body = prepareForProcess(body, this.params);\n    return this.collection.find(body.$filters || {}, {\n      fields: {\n        _id: 1\n      }\n    });\n  }\n  /**\n   * @param cacher\n   */\n\n\n  cacheResults(cacher) {\n    if (!cacher) {\n      cacher = new MemoryResultCacher();\n    }\n\n    this.cacher = cacher;\n  }\n  /**\n   * Configure resolve. This doesn't actually call the resolver, it just sets it\n   * @param fn\n   */\n\n\n  resolve(fn) {\n    if (!this.isResolver) {\n      throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n    }\n\n    this.resolver = fn;\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchResolverData(context) {\n    const resolver = this.resolver;\n    const self = this;\n    const query = {\n      fetch() {\n        return resolver.call(context, self.params);\n      }\n\n    };\n\n    if (this.cacher) {\n      const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        query\n      });\n    }\n\n    return query.fetch();\n  }\n  /**\n   * @param context Meteor method/publish context\n   * @param params\n   *\n   * @private\n   */\n\n\n  _performSecurityChecks(context, params) {\n    if (context && this.exposeConfig) {\n      this._callFirewall(context, context.userId, params);\n    }\n\n    this.doValidateParams(params);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"store.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/store.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(new class {\n  constructor() {\n    this.storage = {};\n  }\n\n  add(key, value) {\n    if (this.storage[key]) {\n      throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n    }\n\n    this.storage[key] = value;\n  }\n\n  get(key) {\n    return this.storage[key];\n  }\n\n  getAll() {\n    return this.storage;\n  }\n\n}());\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache\":{\"BaseResultCacher.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/BaseResultCacher.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => BaseResultCacher\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nclass BaseResultCacher {\n  constructor(config = {}) {\n    this.config = config;\n  }\n  /**\n   * @param queryName\n   * @param params\n   * @returns {string}\n   */\n\n\n  generateQueryId(queryName, params) {\n    return `${queryName}::${EJSON.stringify(params)}`;\n  }\n  /**\n   * Dummy function\n   */\n\n\n  fetch(cacheId, {\n    query,\n    countCursor\n  }) {\n    throw 'Not implemented';\n  }\n  /**\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  static fetchData({\n    query,\n    countCursor\n  }) {\n    if (query) {\n      return query.fetch();\n    } else {\n      return countCursor.count();\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MemoryResultCacher.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/MemoryResultCacher.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet cloneDeep;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 1);\nlet BaseResultCacher;\nmodule.watch(require(\"./BaseResultCacher\"), {\n  default(v) {\n    BaseResultCacher = v;\n  }\n\n}, 2);\nconst DEFAULT_TTL = 60000;\n/**\n * This is a very basic in-memory result caching functionality\n */\n\nclass MemoryResultCacher extends BaseResultCacher {\n  constructor(config = {}) {\n    super(config);\n    this.store = {};\n  }\n  /**\n   * @param cacheId\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  fetch(cacheId, {\n    query,\n    countCursor\n  }) {\n    const cacheData = this.store[cacheId];\n\n    if (cacheData !== undefined) {\n      return cloneDeep(cacheData);\n    }\n\n    const data = BaseResultCacher.fetchData({\n      query,\n      countCursor\n    });\n    this.storeData(cacheId, data);\n    return data;\n  }\n  /**\n   * @param cacheId\n   * @param data\n   */\n\n\n  storeData(cacheId, data) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.store[cacheId] = cloneDeep(data);\n    Meteor.setTimeout(() => {\n      delete this.store[cacheId];\n    }, ttl);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"expose\":{\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/extension.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet NamedQuery;\nmodule.watch(require(\"../namedQuery.js\"), {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 0);\nlet ExposeSchema, ExposeDefaults;\nmodule.watch(require(\"./schema.js\"), {\n  ExposeSchema(v) {\n    ExposeSchema = v;\n  },\n\n  ExposeDefaults(v) {\n    ExposeDefaults = v;\n  }\n\n}, 1);\nlet mergeDeep;\nmodule.watch(require(\"./lib/mergeDeep.js\"), {\n  default(v) {\n    mergeDeep = v;\n  }\n\n}, 2);\nlet createGraph;\nmodule.watch(require(\"../../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 3);\nlet recursiveCompose;\nmodule.watch(require(\"../../query/lib/recursiveCompose.js\"), {\n  default(v) {\n    recursiveCompose = v;\n  }\n\n}, 4);\nlet prepareForProcess;\nmodule.watch(require(\"../../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 5);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 6);\nlet intersectDeep;\nmodule.watch(require(\"../../query/lib/intersectDeep\"), {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 7);\nlet genCountEndpoint;\nmodule.watch(require(\"../../query/counts/genEndpoint.server\"), {\n  default(v) {\n    genCountEndpoint = v;\n  }\n\n}, 8);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 9);\n\n_.extend(NamedQuery.prototype, {\n  /**\n   * @param config\n   */\n  expose(config = {}) {\n    if (!Meteor.isServer) {\n      throw new Meteor.Error('invalid-environment', `You must run this in server-side code`);\n    }\n\n    if (this.isExposed) {\n      throw new Meteor.Error('query-already-exposed', `You have already exposed: \"${this.name}\" named query`);\n    }\n\n    this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n    check(this.exposeConfig, ExposeSchema);\n\n    if (this.exposeConfig.validateParams) {\n      this.options.validateParams = this.exposeConfig.validateParams;\n    }\n\n    if (!this.isResolver) {\n      this._initNormalQuery();\n    } else {\n      this._initMethod();\n    }\n\n    this.isExposed = true;\n  },\n\n  /**\n   * Initializes a normal NamedQuery (normal == not a resolver)\n   * @private\n   */\n  _initNormalQuery() {\n    const config = this.exposeConfig;\n\n    if (config.method) {\n      this._initMethod();\n    }\n\n    if (config.publication) {\n      this._initPublication();\n    }\n\n    if (!config.method && !config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this._initCountMethod();\n\n    this._initCountPublication();\n  },\n\n  /**\n   * Returns the embodied body of the request\n   * @param {*} _embody\n   * @param {*} body\n   */\n  doEmbodimentIfItApplies(body) {\n    // query is not exposed yet, so it doesn't have embodiment logic\n    if (!this.exposeConfig) {\n      return;\n    }\n\n    const {\n      embody\n    } = this.exposeConfig;\n\n    if (!embody) {\n      return;\n    }\n\n    if (_.isFunction(embody)) {\n      embody.call(this, body, this.params);\n    } else {\n      mergeDeep(body, embody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initMethod() {\n    const self = this;\n    Meteor.methods({\n      [this.name](newParams) {\n        self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n        return self.clone(newParams).fetch(this);\n      }\n\n    });\n  },\n\n  /**\n   * @returns {void}\n   * @private\n   */\n  _initCountMethod() {\n    const self = this;\n    Meteor.methods({\n      [this.name + '.count'](newParams) {\n        self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n        return self.clone(newParams).getCount(this);\n      }\n\n    });\n  },\n\n  /**\n   * @returns {*}\n   * @private\n   */\n  _initCountPublication() {\n    const self = this;\n    genCountEndpoint(self.name, {\n      getCursor({\n        session\n      }) {\n        const query = self.clone(session.params);\n        return query.getCursorForCounting();\n      },\n\n      getSession(newParams) {\n        self.doValidateParams(newParams);\n\n        self._callFirewall(this, this.userId, params);\n\n        return {\n          name: self.name,\n          params: newParams\n        };\n      }\n\n    });\n  },\n\n  /**\n   * @private\n   */\n  _initPublication() {\n    const self = this;\n    Meteor.publishComposite(this.name, function (params = {}) {\n      self._unblockIfNecessary(this);\n\n      self.doValidateParams(params);\n\n      self._callFirewall(this, this.userId, params);\n\n      let body = deepClone(self.body);\n\n      if (params.$body) {\n        body = intersectDeep(body, params.$body);\n      }\n\n      self.doEmbodimentIfItApplies(body);\n      body = prepareForProcess(body, params);\n      const rootNode = createGraph(self.collection, body);\n      return recursiveCompose(rootNode);\n    });\n  },\n\n  /**\n   * @param context\n   * @param userId\n   * @param params\n   * @private\n   */\n  _callFirewall(context, userId, params) {\n    const {\n      firewall\n    } = this.exposeConfig;\n\n    if (!firewall) {\n      return;\n    }\n\n    if (_.isArray(firewall)) {\n      firewall.forEach(fire => {\n        fire.call(context, userId, params);\n      });\n    } else {\n      firewall.call(context, userId, params);\n    }\n  },\n\n  /**\n   * @param context\n   * @private\n   */\n  _unblockIfNecessary(context) {\n    if (this.exposeConfig.unblock) {\n      if (context.unblock) {\n        context.unblock();\n      }\n    }\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/schema.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  ExposeDefaults: () => ExposeDefaults,\n  ExposeSchema: () => ExposeSchema\n});\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nconst ExposeDefaults = {\n  publication: true,\n  method: true,\n  unblock: true\n};\nconst ExposeSchema = {\n  firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n  publication: Match.Maybe(Boolean),\n  unblock: Match.Maybe(Boolean),\n  method: Match.Maybe(Boolean),\n  embody: Match.Maybe(Match.OneOf(Object, Function)),\n  validateParams: Match.Maybe(Match.OneOf(Object, Function))\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"mergeDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/lib/mergeDeep.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => mergeDeep\n});\n\nfunction mergeDeep(target, source) {\n  if (_.isObject(target) && _.isObject(source)) {\n    _.each(source, (value, key) => {\n      if (_.isFunction(source[key])) {\n        target[key] = source[key];\n      } else if (_.isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {\n          [key]: {}\n        });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n\n  return target;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"query\":{\"query.base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.base.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => QueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nclass QueryBase {\n  constructor(collection, body, options = {}) {\n    this.isGlobalQuery = true;\n    this.collection = collection;\n    this.body = deepClone(body);\n    this.params = options.params || {};\n    this.options = options;\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    return new this.constructor(this.collection, deepClone(this.body), (0, _objectSpread2.default)({\n      params\n    }, this.options));\n  }\n\n  get name() {\n    return `exposure_${this.collection._name}`;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams() {\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    if (_.isFunction(validateParams)) {\n      validateParams.call(null, this.params);\n    } else {\n      check(this.params);\n    }\n  }\n  /**\n   * Merges the params with previous params.\n   *\n   * @param params\n   * @returns {Query}\n   */\n\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.client.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.client.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.watch(require(\"./counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.watch(require(\"./lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"./lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      this.doValidateParams();\n\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet QueryClient;\nmodule.watch(require(\"./query.client\"), {\n  default(v) {\n    QueryClient = v;\n  }\n\n}, 0);\nlet QueryServer;\nmodule.watch(require(\"./query.server\"), {\n  default(v) {\n    QueryServer = v;\n  }\n\n}, 1);\nlet Query;\n\nif (Meteor.isServer) {\n  Query = QueryServer;\n} else {\n  Query = QueryClient;\n}\n\nmodule.exportDefault(Query);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.server.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Query\n});\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 1);\nlet hypernova;\nmodule.watch(require(\"./hypernova/hypernova.js\"), {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 2);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 3);\n\nclass Query extends Base {\n  /**\n   * Retrieves the data.\n   * @param context\n   * @returns {*}\n   */\n  fetch(context = {}) {\n    const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n    return hypernova(node, context.userId, {\n      params: this.params\n    });\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    return _.first(this.fetch(...args));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @returns {integer}\n   */\n\n\n  getCount() {\n    return this.collection.find(this.body.$filters || {}, {}).count();\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"counts\":{\"collection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/collection.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.watch(require(\"./constants\"), {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(new Mongo.Collection(COUNTS_COLLECTION_CLIENT));\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/constants.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  COUNTS_COLLECTION_CLIENT: () => COUNTS_COLLECTION_CLIENT\n});\nconst COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"countSubscription.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/countSubscription.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => CountSubscription\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Counts;\nmodule.watch(require(\"./collection\"), {\n  default(v) {\n    Counts = v;\n  }\n\n}, 4);\nlet createFauxSubscription;\nmodule.watch(require(\"./createFauxSubscription\"), {\n  default(v) {\n    createFauxSubscription = v;\n  }\n\n}, 5);\nlet prepareForProcess;\nmodule.watch(require(\"../lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 6);\nlet NamedQueryBase;\nmodule.watch(require(\"../../namedQuery/namedQuery.base\"), {\n  default(v) {\n    NamedQueryBase = v;\n  }\n\n}, 7);\n\nclass CountSubscription {\n  /**\n   * @param {*} query - The query to use when fetching counts\n   */\n  constructor(query) {\n    this.accessToken = new ReactiveVar(null);\n    this.fauxHandle = null;\n    this.query = query;\n  }\n  /**\n   * Starts a subscription request for reactive counts.\n   *\n   * @param {*} arg - The argument to pass to {name}.count.subscribe\n   * @param {*} callback\n   */\n\n\n  subscribe(arg, callback) {\n    // Don't try to resubscribe if arg hasn't changed\n    if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n      return this.fauxHandle;\n    }\n\n    this.accessToken.set(null);\n    this.lastArgs = arg;\n    Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n      if (!this._markedForUnsubscribe) {\n        this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n        this.accessToken.set(token);\n        this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n      }\n\n      this._markedForUnsubscribe = false;\n    });\n    this.fauxHandle = createFauxSubscription(this);\n    return this.fauxHandle;\n  }\n  /**\n   * Unsubscribes from the count endpoint, if there is such a subscription.\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.disconnectComputation.stop();\n      this.subscriptionHandle.stop();\n    } else {\n      // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n      // so set a flag to stop the subscription from being created\n      this._markedForUnsubscribe = true;\n    }\n\n    this.accessToken.set(null);\n    this.fauxHandle = null;\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n   *\n   * @returns {Number|null} - Current document count\n   */\n\n\n  getCount() {\n    const id = this.accessToken.get();\n    if (id === null) return null;\n    const doc = Counts.findOne(id);\n    return doc.count;\n  }\n  /**\n   * All session info gets deleted when the server goes down, so when the client attempts to\n   * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n   *\n   * This function prevents that by manually stopping and restarting the subscription when the\n   * connection to the server is lost.\n   */\n\n\n  handleDisconnect() {\n    const status = Meteor.status();\n\n    if (!status.connected) {\n      this._markedForResume = true;\n      this.fauxHandle = null;\n      this.subscriptionHandle.stop();\n    }\n\n    if (status.connected && this._markedForResume) {\n      this._markedForResume = false;\n      this.subscribe(this.lastArgs);\n    }\n  }\n  /**\n   * Returns whether or not a subscription request has been made.\n   */\n\n\n  isSubscribed() {\n    return this.accessToken.get() !== null;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createFauxSubscription.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/createFauxSubscription.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(countManager => ({\n  ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n  stop: () => countManager.unsubscribe()\n}));\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"genEndpoint.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/genEndpoint.server.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.watch(require(\"./constants\"), {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 3);\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null);\n/**\n * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n *\n * @param {String} name - Name of the query or collection\n * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n */\n\nmodule.exportDefault((name, {\n  getCursor,\n  getSession\n}) => {\n  Meteor.methods({\n    [name + '.count.subscribe'](paramsOrBody) {\n      const session = getSession.call(this, paramsOrBody);\n      const sessionId = JSON.stringify(session);\n      const existingSession = collection.findOne({\n        session: sessionId,\n        userId: this.userId\n      }); // Try to reuse sessions if the user subscribes multiple times with the same data\n\n      if (existingSession) {\n        return existingSession._id;\n      }\n\n      const token = collection.insert({\n        session: sessionId,\n        query: name,\n        userId: this.userId\n      });\n      return token;\n    }\n\n  });\n  Meteor.publish(name + '.count', function (token) {\n    check(token, String);\n    const self = this;\n    const request = collection.findOne({\n      _id: token,\n      userId: self.userId\n    });\n\n    if (!request) {\n      throw new Error('no-request', `You must acquire a request token via the \"${name}.count.subscribe\" method first.`);\n    }\n\n    request.session = JSON.parse(request.session);\n    const cursor = getCursor.call(this, request); // Start counting\n\n    let count = 0;\n    let isReady = false;\n    const handle = cursor.observe({\n      added() {\n        count++;\n        isReady && self.changed(COUNTS_COLLECTION_CLIENT, token, {\n          count\n        });\n      },\n\n      removed() {\n        count--;\n        isReady && self.changed(COUNTS_COLLECTION_CLIENT, token, {\n          count\n        });\n      }\n\n    });\n    isReady = true;\n    self.added(COUNTS_COLLECTION_CLIENT, token, {\n      count\n    });\n    self.onStop(() => {\n      handle.stop();\n      collection.remove(token);\n    });\n    self.ready();\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hypernova\":{\"aggregateSearchFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/aggregateSearchFilters.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n      return {\n        _id: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembleAggregateResults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembleAggregateResults.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, aggregateResults, metaFilters) {\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const linkName = childCollectionNode.linkName;\n  const isMeta = linker.isMeta();\n  const isMany = linker.isMany();\n  let allResults = [];\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(childCollectionNode.parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n    });\n  }\n\n  if (isMeta && isMany) {\n    // This case is treated differently because we get an array response from the pipeline.\n    _.each(childCollectionNode.parent.results, parentResult => {\n      parentResult[linkName] = parentResult[linkName] || [];\n\n      const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n        return _.contains(aggregateResult._id, parentResult._id);\n      });\n\n      if (eligibleAggregateResults.length) {\n        const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n\n        _.each(datas, data => {\n          _.each(data, item => {\n            parentResult[linkName].push(item);\n          });\n        });\n      }\n    });\n\n    _.each(aggregateResults, aggregateResult => {\n      _.each(aggregateResult.data, item => allResults.push(item));\n    });\n  } else {\n    let comparator;\n\n    if (isMany) {\n      comparator = (aggregateResult, result) => _.contains(aggregateResult._id, result._id);\n    } else {\n      comparator = (aggregateResult, result) => aggregateResult._id == result._id;\n    }\n\n    const childLinkName = childCollectionNode.linkName;\n    const parentResults = childCollectionNode.parent.results;\n    parentResults.forEach(parentResult => {\n      // We are now finding the data from the pipeline that is related to the _id of the parent\n      const eligibleAggregateResults = aggregateResults.filter(aggregateResult => comparator(aggregateResult, parentResult));\n      eligibleAggregateResults.forEach(aggregateResult => {\n        if (Array.isArray(parentResult[childLinkName])) {\n          parentResult[childLinkName].push(...aggregateResult.data);\n        } else {\n          parentResult[childLinkName] = [...aggregateResult.data];\n        }\n      });\n    });\n    aggregateResults.forEach(aggregateResult => {\n      allResults.push(...aggregateResult.data);\n    });\n  }\n\n  childCollectionNode.results = allResults;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembler.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembler.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet createSearchFilters;\nmodule.watch(require(\"../../links/lib/createSearchFilters\"), {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nmodule.exportDefault((childCollectionNode, {\n  limit,\n  skip,\n  metaFilters\n}) => {\n  if (childCollectionNode.results.length === 0) {\n    return;\n  }\n\n  const parent = childCollectionNode.parent;\n  const linker = childCollectionNode.linker;\n  const strategy = linker.strategy;\n  const isSingle = linker.isSingle();\n  const isMeta = linker.isMeta();\n  const fieldStorage = linker.linkStorageField; // cleaning the parent results from a child\n  // this may be the wrong approach but it works for now\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n    });\n  }\n\n  const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n  if (strategy === 'one') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[parentResult[fieldStorage]], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      let data = [];\n      parentResult[fieldStorage].forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'one-meta') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      const _id = parentResult[fieldStorage]._id;\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[_id], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many-meta') {\n    parent.results.forEach(parentResult => {\n      const _ids = _.pluck(parentResult[fieldStorage], '_id');\n\n      let data = [];\n\n      _ids.forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n});\n\nfunction filterAssembledData(data, {\n  limit,\n  skip\n}) {\n  if (limit && Array.isArray(data)) {\n    return data.slice(skip, limit);\n  }\n\n  return data;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buildAggregatePipeline.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/buildAggregatePipeline.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"./constants\"), {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  let containsDottedFields = false;\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const collection = childCollectionNode.collection;\n  let pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  let _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  let dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, (value, field) => {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    let $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice\n        }\n      }\n    });\n  }\n\n  return {\n    pipeline,\n    containsDottedFields\n  };\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/constants.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  SAFE_DOTTED_FIELD_REPLACEMENT: () => SAFE_DOTTED_FIELD_REPLACEMENT\n});\nconst SAFE_DOTTED_FIELD_REPLACEMENT = '___';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hypernova.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/hypernova.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => hypernovaInit\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet prepareForDelivery;\nmodule.watch(require(\"../lib/prepareForDelivery.js\"), {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 1);\nlet storeHypernovaResults;\nmodule.watch(require(\"./storeHypernovaResults.js\"), {\n  default(v) {\n    storeHypernovaResults = v;\n  }\n\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n  _.each(collectionNode.collectionNodes, childCollectionNode => {\n    let {\n      filters,\n      options\n    } = applyProps(childCollectionNode);\n    storeHypernovaResults(childCollectionNode, userId);\n    hypernova(childCollectionNode, userId);\n  });\n}\n\nfunction hypernovaInit(collectionNode, userId, config = {}) {\n  const bypassFirewalls = config.bypassFirewalls || false;\n  const params = config.params || {};\n  let {\n    filters,\n    options\n  } = applyProps(collectionNode);\n  const collection = collectionNode.collection;\n  collectionNode.results = collection.find(filters, options, userId).fetch();\n  const userIdToPass = config.bypassFirewalls ? undefined : userId;\n  hypernova(collectionNode, userIdToPass);\n  prepareForDelivery(collectionNode, params);\n  return collectionNode.results;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"storeHypernovaResults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/storeHypernovaResults.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => storeHypernovaResults\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet AggregateFilters;\nmodule.watch(require(\"./aggregateSearchFilters.js\"), {\n  default(v) {\n    AggregateFilters = v;\n  }\n\n}, 1);\nlet assemble;\nmodule.watch(require(\"./assembler.js\"), {\n  default(v) {\n    assemble = v;\n  }\n\n}, 2);\nlet assembleAggregateResults;\nmodule.watch(require(\"./assembleAggregateResults.js\"), {\n  default(v) {\n    assembleAggregateResults = v;\n  }\n\n}, 3);\nlet buildAggregatePipeline;\nmodule.watch(require(\"./buildAggregatePipeline.js\"), {\n  default(v) {\n    buildAggregatePipeline = v;\n  }\n\n}, 4);\nlet snapBackDottedFields;\nmodule.watch(require(\"./lib/snapBackDottedFields\"), {\n  default(v) {\n    snapBackDottedFields = v;\n  }\n\n}, 5);\n\nfunction storeHypernovaResults(childCollectionNode, userId) {\n  if (childCollectionNode.parent.results.length === 0) {\n    return childCollectionNode.results = [];\n  }\n\n  let {\n    filters,\n    options\n  } = applyProps(childCollectionNode);\n  const metaFilters = filters.$meta;\n  const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n  delete filters.$meta;\n  const linker = childCollectionNode.linker;\n  const isVirtual = linker.isVirtual();\n  const collection = childCollectionNode.collection;\n\n  _.extend(filters, aggregateFilters.create()); // if it's not virtual then we retrieve them and assemble them here.\n\n\n  if (!isVirtual) {\n    const filteredOptions = _.omit(options, 'limit');\n\n    childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n    assemble(childCollectionNode, (0, _objectSpread2.default)({}, options, {\n      metaFilters\n    }));\n  } else {\n    // virtuals arrive here\n    let {\n      pipeline,\n      containsDottedFields\n    } = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n    let aggregateResults = collection.aggregate(pipeline);\n    /**\n     * If in aggregation it contains '.', we replace it with a custom string '___'\n     * And then after aggregation is complete we need to snap-it back to how it was.\n     */\n\n    if (containsDottedFields) {\n      snapBackDottedFields(aggregateResults);\n    }\n\n    assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanObjectForMetaFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(function (object, field, metaFiltersTest) {\n  if (object[field]) {\n    if (_.isArray(object[field])) {\n      object[field] = object[field].filter(metaFiltersTest);\n    } else {\n      if (!metaFiltersTest(object[field])) {\n        object[field] = null;\n      }\n    }\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"snapBackDottedFields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/snapBackDottedFields.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"../constants\"), {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 0);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n  aggregationResult.forEach(result => {\n    result.data = result.data.map(document => {\n      _.each(document, (value, key) => {\n        if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n          document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n          delete document[key];\n        }\n      });\n\n      return dot.object(document);\n    });\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"applyProps.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/applyProps.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n  let filters = _.extend({}, node.props.$filters);\n\n  let options = _.extend({}, node.props.$options);\n\n  options = _.omit(options, ...restrictOptions);\n  options.fields = options.fields || {};\n  node.applyFields(filters, options);\n  return {\n    filters,\n    options\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callWithPromise.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/callWithPromise.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault((method, myParameters) => {\n  return new Promise((resolve, reject) => {\n    Meteor.call(method, myParameters, (err, res) => {\n      if (err) reject(err.reason || 'Something went wrong.');\n      resolve(res);\n    });\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createGraph.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/createGraph.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  createNodes: () => createNodes,\n  addFieldNode: () => addFieldNode\n});\nlet CollectionNode;\nmodule.watch(require(\"../nodes/collectionNode.js\"), {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 0);\nlet FieldNode;\nmodule.watch(require(\"../nodes/fieldNode.js\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 1);\nlet ReducerNode;\nmodule.watch(require(\"../nodes/reducerNode.js\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 2);\nlet dotize;\nmodule.watch(require(\"./dotize.js\"), {\n  default(v) {\n    dotize = v;\n  }\n\n}, 3);\nlet createReducers;\nmodule.watch(require(\"../reducers/lib/createReducers\"), {\n  default(v) {\n    createReducers = v;\n  }\n\n}, 4);\nconst specialFields = ['$filters', '$options', '$postFilters', '$postOptions', '$postFilter'];\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\n\nfunction createNodes(root) {\n  // this is a fix for phantomjs tests (don't really understand it.)\n  if (!_.isObject(root.body)) {\n    return;\n  }\n\n  _.each(root.body, (body, fieldName) => {\n    if (!body) {\n      return;\n    } // if it's a prop\n\n\n    if (_.contains(specialFields, fieldName)) {\n      root.addProp(fieldName, body);\n      return;\n    } // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n    // TODO: find another way to do this\n\n\n    if (root.collection.default) {\n      root.collection = root.collection.default;\n    } // checking if it is a link.\n\n\n    let linker = root.collection.getLinker(fieldName);\n\n    if (linker) {\n      // check if it is a cached link\n      // if yes, then we need to explicitly define this at collection level\n      // so when we transform the data for delivery, we move it to the link name\n      if (linker.isDenormalized()) {\n        if (linker.isSubBodyDenormalized(body)) {\n          handleDenormalized(root, linker, body, fieldName);\n          return;\n        }\n      }\n\n      let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n      root.add(subroot, linker);\n      createNodes(subroot);\n      return;\n    } // checking if it's a reducer\n\n\n    const reducer = root.collection.getReducer(fieldName);\n\n    if (reducer) {\n      let reducerNode = new ReducerNode(fieldName, reducer);\n      root.add(reducerNode);\n    } // it's most likely a field then\n\n\n    addFieldNode(body, fieldName, root);\n  });\n\n  createReducers(root);\n\n  if (root.fieldNodes.length === 0) {\n    root.add(new FieldNode('_id', 1));\n  }\n}\n\nfunction addFieldNode(body, fieldName, root) {\n  // it's not a link and not a special variable => we assume it's a field\n  if (_.isObject(body)) {\n    let dotted = dotize.convert({\n      [fieldName]: body\n    });\n\n    _.each(dotted, (value, key) => {\n      root.add(new FieldNode(key, value));\n    });\n  } else {\n    let fieldNode = new FieldNode(fieldName, body);\n    root.add(fieldNode);\n  }\n}\n\nmodule.exportDefault(function (collection, body) {\n  let root = new CollectionNode(collection, body);\n  createNodes(root);\n  return root;\n});\n;\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\n\nfunction handleDenormalized(root, linker, body, fieldName) {\n  Object.assign(body, {\n    _id: 1\n  });\n  const cacheField = linker.linkConfig.denormalize.field;\n  root.snapCache(cacheField, fieldName); // if it's one and direct also include the link storage\n\n  if (!linker.isMany() && !linker.isVirtual()) {\n    addFieldNode(1, linker.linkStorageField, root);\n  }\n\n  addFieldNode(body, cacheField, root);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"dotize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/dotize.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(dotize = {});\n\ndotize.convert = function (obj, prefix) {\n  if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n    if (prefix) {\n      var newObj = {};\n      newObj[prefix] = obj;\n      return newObj;\n    } else {\n      return obj;\n    }\n  }\n\n  var newObj = {};\n\n  function recurse(o, p, isArrayItem) {\n    for (var f in o) {\n      if (o[f] && typeof o[f] === \"object\") {\n        if (Array.isArray(o[f])) {\n          if (isEmptyArray(o[f])) {\n            newObj[getFieldName(f, p, true)] = o[f]; // empty array\n          } else {\n            newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n          }\n        } else {\n          if (isArrayItem) {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p, true)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n            }\n          } else {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p)); // object\n            }\n          }\n        }\n      } else {\n        if (isArrayItem || isNumber(f)) {\n          newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n        } else {\n          newObj[getFieldName(f, p)] = o[f]; // primitive\n        }\n      }\n    }\n\n    if (isEmptyObj(newObj)) return obj;\n    return newObj;\n  }\n\n  function isNumber(f) {\n    return !isNaN(parseInt(f));\n  }\n\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      if (Object.hasOwnProperty.call(obj, prop)) return false;\n    }\n\n    return true;\n  }\n\n  function isEmptyArray(o) {\n    if (Array.isArray(o) && o.length == 0) return true;\n    return false;\n  }\n\n  function getFieldName(field, prefix, isArrayItem, isArray) {\n    if (isArray) return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);else if (isArrayItem) return (prefix ? prefix : \"\") + \"[\" + field + \"]\";else return (prefix ? prefix + \".\" : \"\") + field;\n  }\n\n  return recurse(obj, prefix, Array.isArray(obj));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersectDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/intersectDeep.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (allowedBody, clientBody) {\n  const allowedBodyDot = _.keys(dot.dot(allowedBody));\n\n  const clientBodyDot = _.keys(dot.dot(clientBody));\n\n  const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n  const build = {};\n  intersection.forEach(intersectedField => {\n    build[intersectedField] = 1;\n  });\n  return dot.object(build);\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForDelivery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForDelivery.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  applyPostFilters: () => applyPostFilters,\n  applyPostOptions: () => applyPostOptions,\n  getResultsArray: () => getResultsArray,\n  removeLinkStorages: () => removeLinkStorages,\n  storeOneResults: () => storeOneResults,\n  assembleMetadata: () => assembleMetadata\n});\nlet applyReducers;\nmodule.watch(require(\"../reducers/lib/applyReducers\"), {\n  default(v) {\n    applyReducers = v;\n  }\n\n}, 0);\nlet cleanReducerLeftovers;\nmodule.watch(require(\"../reducers/lib/cleanReducerLeftovers\"), {\n  default(v) {\n    cleanReducerLeftovers = v;\n  }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nlet Minimongo;\nmodule.watch(require(\"meteor/minimongo\"), {\n  Minimongo(v) {\n    Minimongo = v;\n  }\n\n}, 3);\nmodule.exportDefault((node, params) => {\n  snapBackCaches(node);\n  storeOneResults(node, node.results);\n  applyReducers(node, params);\n  cleanReducerLeftovers(node);\n\n  _.each(node.collectionNodes, collectionNode => {\n    cloneMetaChildren(collectionNode, node.results);\n  });\n\n  _.each(node.collectionNodes, collectionNode => {\n    assembleMetadata(collectionNode, node.results);\n  });\n\n  removeLinkStorages(node, node.results);\n  applyPostFilters(node);\n  applyPostOptions(node);\n  applyPostFilter(node, params);\n});\n\nfunction applyPostFilters(node) {\n  const postFilters = node.props.$postFilters;\n\n  if (postFilters) {\n    node.results = sift(postFilters, node.results);\n  }\n}\n\nfunction applyPostOptions(node) {\n  const options = node.props.$postOptions;\n\n  if (options) {\n    if (options.sort) {\n      const sorter = new Minimongo.Sorter(options.sort);\n      node.results.sort(sorter.getComparator());\n    }\n\n    if (options.limit || options.skip) {\n      const start = options.skip || 0;\n      const end = options.limit ? options.limit + start : node.results.length;\n      node.results = node.results.slice(start, end);\n    }\n  }\n}\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n  if (node.props.$postFilter) {\n    const filter = node.props.$postFilter;\n\n    if (_.isArray(filter)) {\n      filter.forEach(f => {\n        node.results = f(node.results, params);\n      });\n    } else {\n      node.results = filter(node.results, params);\n    }\n  }\n}\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\n\n\nfunction getResultsArray(results) {\n  if (_.isArray(results)) {\n    return results;\n  } else if (_.isUndefined(results)) {\n    return [];\n  }\n\n  return [results];\n}\n\nfunction removeLinkStorages(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  sameLevelResults = getResultsArray(sameLevelResults);\n\n  _.each(node.collectionNodes, collectionNode => {\n    const removeStorageField = collectionNode.shouldCleanStorage;\n\n    _.each(sameLevelResults, result => {\n      if (removeStorageField) {\n        delete result[collectionNode.linkStorageField];\n      }\n\n      removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n    });\n  });\n}\n\nfunction storeOneResults(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(sameLevelResults, result => {\n      storeOneResults(collectionNode, result[collectionNode.linkName]);\n    });\n\n    if (collectionNode.isOneResult) {\n      _.each(sameLevelResults, result => {\n        if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n          result[collectionNode.linkName] = result[collectionNode.linkName] ? _.first(result[collectionNode.linkName]) : undefined;\n        }\n      });\n    }\n  });\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n  if (!parentResults) {\n    return;\n  }\n\n  const linkName = node.linkName;\n  const isMeta = node.isMeta; // parentResults might be an object (for type==one links)\n\n  parentResults = getResultsArray(parentResults);\n  parentResults.forEach(parentResult => {\n    if (isMeta && parentResult[linkName]) {\n      if (node.isOneResult) {\n        parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n      } else {\n        parentResult[linkName] = parentResult[linkName].map(object => {\n          return Object.assign({}, object);\n        });\n      }\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n      cloneMetaChildren(collectionNode, parentResult[linkName]);\n    });\n  });\n}\n\nfunction assembleMetadata(node, parentResults) {\n  parentResults = getResultsArray(parentResults); // assembling metadata is depth first\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(parentResults, result => {\n      assembleMetadata(collectionNode, result[node.linkName]);\n    });\n  });\n\n  if (node.isMeta) {\n    if (node.isVirtual) {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n\n        if (node.isOneResult) {\n          const storage = childResult[node.linkStorageField];\n          storeMetadata(childResult, parentResult, storage, true);\n        } else {\n          _.each(childResult, object => {\n            const storage = object[node.linkStorageField];\n            storeMetadata(object, parentResult, storage, true);\n          });\n        }\n      });\n    } else {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n        const storage = parentResult[node.linkStorageField];\n\n        if (node.isOneResult) {\n          if (childResult) {\n            storeMetadata(childResult, parentResult, storage, false);\n          }\n        } else {\n          _.each(childResult, object => {\n            storeMetadata(object, parentResult, storage, false);\n          });\n        }\n      });\n    }\n  }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n  if (isVirtual) {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  } else {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  }\n}\n\nfunction snapBackCaches(node) {\n  node.collectionNodes.forEach(collectionNode => {\n    snapBackCaches(collectionNode);\n  });\n\n  if (!_.isEmpty(node.snapCaches)) {\n    // process stuff\n    _.each(node.snapCaches, (linkName, cacheField) => {\n      const isSingle = _.contains(node.snapCachesSingles, cacheField);\n\n      const linker = node.collection.getLinker(linkName); // we do this because for one direct and one meta direct, id is not stored\n\n      const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n      node.results.forEach(result => {\n        if (result[cacheField]) {\n          if (shoudStoreLinkStorage) {\n            Object.assign(result[cacheField], {\n              _id: linker.isMeta() ? result[linker.linkStorageField]._id : result[linker.linkStorageField]\n            });\n          }\n\n          if (isSingle && _.isArray(result[cacheField])) {\n            result[linkName] = _.first(result[cacheField]);\n          } else {\n            result[linkName] = result[cacheField];\n          }\n\n          delete result[cacheField];\n        }\n      });\n    });\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForProcess.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForProcess.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 1);\n\nfunction defaultFilterFunction({\n  filters,\n  options,\n  params\n}) {\n  if (params.filters) {\n    Object.assign(filters, params.filters);\n  }\n\n  if (params.options) {\n    Object.assign(options, params.options);\n  }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n  if (isRoot && !_.isFunction(data.$filter)) {\n    data.$filter = defaultFilterFunction;\n  }\n\n  if (data.$filter) {\n    check(data.$filter, Match.OneOf(Function, [Function]));\n    data.$filters = data.$filters || {};\n    data.$options = data.$options || {};\n\n    if (_.isArray(data.$filter)) {\n      data.$filter.forEach(filter => {\n        filter.call(null, {\n          filters: data.$filters,\n          options: data.$options,\n          params: params\n        });\n      });\n    } else {\n      data.$filter({\n        filters: data.$filters,\n        options: data.$options,\n        params: params\n      });\n    }\n\n    data.$filter = null;\n    delete data.$filter;\n  }\n\n  _.each(data, (value, key) => {\n    if (_.isObject(value)) {\n      return applyFilterRecursive(value, params);\n    }\n  });\n}\n\nfunction applyPagination(body, _params) {\n  if (body['$paginate'] && _params) {\n    if (!body.$options) {\n      body.$options = {};\n    }\n\n    if (_params.limit) {\n      _.extend(body.$options, {\n        limit: _params.limit\n      });\n    }\n\n    if (_params.skip) {\n      _.extend(body.$options, {\n        skip: _params.skip\n      });\n    }\n\n    delete body['$paginate'];\n  }\n}\n\nmodule.exportDefault((_body, _params = {}) => {\n  let body = deepClone(_body);\n  let params = deepClone(_params);\n  applyPagination(body, params);\n  applyFilterRecursive(body, params, true);\n  return body;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveCompose.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveCompose.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet applyProps;\nmodule.watch(require(\"./applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\n\nfunction compose(node, userId) {\n  return {\n    find(parent) {\n      if (parent) {\n        let {\n          filters,\n          options\n        } = applyProps(node); // composition\n\n        let linker = node.linker;\n        let accessor = linker.createLink(parent); // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n\n        if (linker.isVirtual()) {\n          options.fields = options.fields || {};\n\n          _.extend(options.fields, {\n            [linker.linkStorageField]: 1\n          });\n        }\n\n        return accessor.find(filters, options, userId);\n      }\n    },\n\n    children: _.map(node.collectionNodes, n => compose(n, userId))\n  };\n}\n\nmodule.exportDefault((node, userId, config = {\n  bypassFirewalls: false\n}) => {\n  return {\n    find() {\n      let {\n        filters,\n        options\n      } = applyProps(node);\n      return node.collection.find(filters, options, userId);\n    },\n\n    children: _.map(node.collectionNodes, n => {\n      const userIdToPass = config.bypassFirewalls ? undefined : userId;\n      return compose(n, userIdToPass);\n    })\n  };\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveFetch.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveFetch.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet applyProps;\nmodule.watch(require(\"./applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet assembleMetadata, removeLinkStorages, storeOneResults;\nmodule.watch(require(\"./prepareForDelivery\"), {\n  assembleMetadata(v) {\n    assembleMetadata = v;\n  },\n\n  removeLinkStorages(v) {\n    removeLinkStorages = v;\n  },\n\n  storeOneResults(v) {\n    storeOneResults = v;\n  }\n\n}, 1);\nlet prepareForDelivery;\nmodule.watch(require(\"./prepareForDelivery\"), {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 2);\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n  let {\n    filters,\n    options\n  } = applyProps(node);\n  let results = [];\n\n  if (parentObject) {\n    let accessor = node.linker.createLink(parentObject, node.collection);\n\n    if (node.isVirtual) {\n      options.fields = options.fields || {};\n\n      _.extend(options.fields, {\n        [node.linkStorageField]: 1\n      });\n    }\n\n    results = accessor.find(filters, options).fetch();\n  } else {\n    results = node.collection.find(filters, options).fetch();\n  }\n\n  _.each(node.collectionNodes, collectionNode => {\n    _.each(results, result => {\n      const collectionNodeResults = fetch(collectionNode, result);\n      result[collectionNode.linkName] = collectionNodeResults; //delete result[node.linker.linkStorageField];\n\n      /**\n       * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n       * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n       * the results?\n       *\n       * Other possible ways:\n       * - do something like assemble() in storeHypernovaResults\n       * - pass node.results to accessor above and find with sift\n       */\n\n      const currentIds = _.pluck(collectionNode.results, '_id');\n\n      collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n    });\n  });\n\n  return results;\n}\n\nmodule.exportDefault((node, params) => {\n  node.results = fetch(node);\n  prepareForDelivery(node, params);\n  return node.results;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nodes\":{\"collectionNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/collectionNode.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => CollectionNode\n});\nlet FieldNode;\nmodule.watch(require(\"./fieldNode.js\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 0);\nlet ReducerNode;\nmodule.watch(require(\"./reducerNode.js\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\n\nclass CollectionNode {\n  constructor(collection, body = {}, linkName = null) {\n    if (collection && !_.isObject(body)) {\n      throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n    }\n\n    this.body = deepClone(body);\n    this.linkName = linkName;\n    this.collection = collection;\n    this.nodes = [];\n    this.props = {};\n    this.parent = null;\n    this.linker = null;\n    this.linkStorageField = null;\n    this.scheduledForDeletion = false;\n    this.reducers = [];\n    this.results = [];\n    this.snapCaches = {}; // {cacheField: linkName}\n\n    this.snapCachesSingles = []; // [cacheField1, cacheField2]\n  }\n\n  get collectionNodes() {\n    return _.filter(this.nodes, n => n instanceof CollectionNode);\n  }\n\n  get fieldNodes() {\n    return _.filter(this.nodes, n => n instanceof FieldNode);\n  }\n\n  get reducerNodes() {\n    return _.filter(this.nodes, n => n instanceof ReducerNode);\n  }\n  /**\n   * Adds children to itself\n   *\n   * @param node\n   * @param linker\n   */\n\n\n  add(node, linker) {\n    node.parent = this;\n\n    if (linker) {\n      node.linker = linker;\n      node.linkStorageField = linker.linkStorageField;\n      node.isMeta = linker.isMeta();\n      node.isVirtual = linker.isVirtual();\n      node.isOneResult = linker.isOneResult();\n      node.shouldCleanStorage = this._shouldCleanStorage(node);\n    }\n\n    this.nodes.push(node);\n  }\n  /**\n   * @param prop\n   * @param value\n   */\n\n\n  addProp(prop, value) {\n    if (prop === '$postFilter') {\n      check(value, Match.OneOf(Function, [Function]));\n    }\n\n    _.extend(this.props, {\n      [prop]: value\n    });\n  }\n  /**\n   * @param _node\n   */\n\n\n  remove(_node) {\n    this.nodes = _.filter(this.nodes, node => _node !== node);\n  }\n  /**\n   * @param filters\n   * @param options\n   */\n\n\n  applyFields(filters, options) {\n    let hasAddedAnyField = false;\n\n    _.each(this.fieldNodes, n => {\n      hasAddedAnyField = true;\n      n.applyFields(options.fields);\n    }); // it will only get here if it has collectionNodes children\n\n\n    _.each(this.collectionNodes, collectionNode => {\n      let linker = collectionNode.linker;\n\n      if (linker && !linker.isVirtual()) {\n        options.fields[linker.linkStorageField] = 1;\n        hasAddedAnyField = true;\n      }\n    }); // if he selected filters, we should automatically add those fields\n\n\n    _.each(filters, (value, field) => {\n      // special handling for the $meta filter and conditional operators\n      if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n        // if the field or the parent of the field already exists, don't add it\n        if (!_.has(options.fields, field.split('.')[0])) {\n          hasAddedAnyField = true;\n          options.fields[field] = 1;\n        }\n      }\n    });\n\n    if (!hasAddedAnyField) {\n      options.fields = {\n        _id: 1\n      };\n    }\n  }\n  /**\n   * @param fieldName\n   * @returns {boolean}\n   */\n\n\n  hasField(fieldName) {\n    return !!_.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param fieldName\n   * @returns {FieldNode}\n   */\n\n\n  getField(fieldName) {\n    return _.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasCollectionNode(name) {\n    return !!_.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasReducerNode(name) {\n    return !!_.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {ReducerNode}\n   */\n\n\n  getReducerNode(name) {\n    return _.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {CollectionNode}\n   */\n\n\n  getCollectionNode(name) {\n    return _.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @returns {*}\n   */\n\n\n  getName() {\n    return this.linkName ? this.linkName : this.collection ? this.collection._name : 'N/A';\n  }\n  /**\n   * This is used for caching links\n   *\n   * @param cacheField\n   * @param subLinkName\n   */\n\n\n  snapCache(cacheField, subLinkName) {\n    this.snapCaches[cacheField] = subLinkName;\n\n    if (this.collection.getLinker(subLinkName).isOneResult()) {\n      this.snapCachesSingles.push(cacheField);\n    }\n  }\n  /**\n   * This method verifies whether to remove the linkStorageField form the results\n   * unless you specify it in your query.\n   *\n   * @param node\n   * @returns {boolean}\n   * @private\n   */\n\n\n  _shouldCleanStorage(node) {\n    if (node.linkStorageField === '_id') {\n      return false;\n    } else {\n      if (node.isVirtual) {\n        return !node.hasField(node.linkStorageField);\n      } else {\n        return !this.hasField(node.linkStorageField);\n      }\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/fieldNode.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => FieldNode\n});\n\nclass FieldNode {\n  constructor(name, body) {\n    this.name = name;\n    this.body = _.isObject(body) ? 1 : body;\n    this.scheduledForDeletion = false;\n  }\n\n  applyFields(fields) {\n    fields[this.name] = this.body;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducerNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/reducerNode.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => ReducerNode\n});\n\nclass ReducerNode {\n  constructor(name, {\n    body,\n    reduce\n  }) {\n    this.name = name;\n    this.body = body;\n    this.reduceFunction = reduce;\n  }\n  /**\n   * When computing we also pass the parameters\n   * \n   * @param {*} object \n   * @param {*} args \n   */\n\n\n  compute(object, ...args) {\n    object[this.name] = this.reduce.call(this, object, ...args);\n  }\n\n  reduce(object, ...args) {\n    return this.reduceFunction.call(this, object, ...args);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/extension.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet addFieldMap;\nmodule.watch(require(\"./lib/addFieldMap\"), {\n  default(v) {\n    addFieldMap = v;\n  }\n\n}, 1);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * @param data\n   */\n  addReducers(data) {\n    if (!this[storage]) {\n      this[storage] = {};\n    }\n\n    _.each(data, (reducerConfig, reducerName) => {\n      if (!this[reducerConfig]) {\n        this[reducerConfig] = {};\n      }\n\n      if (this.getLinker(reducerName)) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`);\n      }\n\n      if (this[reducerConfig][reducerName]) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`);\n      }\n\n      check(reducerConfig, {\n        body: Object,\n        reduce: Function\n      });\n\n      _.extend(this[storage], {\n        [reducerName]: reducerConfig\n      });\n    });\n  },\n\n  /**\n   * @param name\n   * @returns {*}\n   */\n  getReducer(name) {\n    if (this[storage]) {\n      return this[storage][name];\n    }\n  },\n\n  /**\n   * This creates reducers that makes sort of aliases for the database fields we use\n   */\n  addFieldMap\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"addFieldMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/addFieldMap.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => addFieldMap\n});\n\nfunction addFieldMap(map) {\n  const collection = this;\n  let reducers = {};\n\n  for (let key in map) {\n    const dbField = map[key];\n    reducers[key] = {\n      body: {\n        [dbField]: 1\n      },\n\n      reduce(obj) {\n        return obj[dbField];\n      }\n\n    };\n  }\n\n  collection.addReducers(reducers);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"applyReducers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/applyReducers.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n  _.each(root.collectionNodes, node => {\n    applyReducers(node, params);\n  });\n\n  _.each(root.reducerNodes, reducerNode => {\n    root.results.forEach(result => {\n      reducerNode.compute(result, params);\n    });\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanReducerLeftovers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/cleanReducerLeftovers.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    cleanReducerLeftovers(node);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), root.results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createReducers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/createReducers.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => addReducers,\n  handleAddElement: () => handleAddElement,\n  handleAddReducer: () => handleAddReducer,\n  handleAddLink: () => handleAddLink,\n  handleAddField: () => handleAddField\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\nlet createNodes;\nmodule.watch(require(\"../../lib/createGraph\"), {\n  createNodes(v) {\n    createNodes = v;\n  }\n\n}, 1);\nlet CollectionNode;\nmodule.watch(require(\"../../nodes/collectionNode\"), {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 2);\nlet FieldNode;\nmodule.watch(require(\"../../nodes/fieldNode\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 3);\nlet ReducerNode;\nmodule.watch(require(\"../../nodes/reducerNode\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 4);\nlet embedReducerWithLink;\nmodule.watch(require(\"./embedReducerWithLink\"), {\n  default(v) {\n    embedReducerWithLink = v;\n  }\n\n}, 5);\n\nfunction addReducers(root) {\n  // we add reducers last, after we have added all the fields.\n  root.reducerNodes.forEach(reducer => {\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(root, fieldName, body);\n    });\n  });\n}\n\nfunction handleAddElement(root, fieldName, body) {\n  // if it's a link\n  const collection = root.collection;\n  const linker = collection.getLinker(fieldName);\n\n  if (linker) {\n    return handleAddLink(fieldName, body, root, linker);\n  }\n\n  const reducer = collection.getReducer(fieldName);\n\n  if (reducer) {\n    return handleAddReducer(fieldName, reducer, root);\n  } // we assume it's a field in this case\n\n\n  return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, reducer, root) {\n  if (!root.hasReducerNode(fieldName)) {\n    let reducerNode = new ReducerNode(fieldName, reducer);\n    root.add(reducerNode);\n    reducerNode.scheduledForDeletion = true;\n\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(root, fieldName, body);\n    });\n  }\n}\n\nfunction handleAddLink(fieldName, body, root, linker) {\n  if (root.hasCollectionNode(fieldName)) {\n    const collectionNode = root.getCollectionNode(fieldName);\n    embedReducerWithLink(body, collectionNode);\n  } else {\n    // add\n    let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n    collectionNode.scheduledForDeletion = true;\n    root.add(collectionNode, linker);\n    createNodes(collectionNode);\n  }\n}\n\nfunction handleAddField(fieldName, body, root) {\n  if (_.isObject(body)) {\n    // if reducer specifies a nested field\n    const dots = dot.dot({\n      [fieldName]: body\n    });\n\n    _.each(dots, (value, key) => {\n      if (!root.hasField(key)) {\n        let fieldNode = new FieldNode(key, value);\n        fieldNode.scheduledForDeletion = true;\n        root.add(fieldNode);\n      }\n    });\n  } else {\n    // if reducer does not specify a nested field, and the field does not exist.\n    if (!root.hasField(fieldName)) {\n      let fieldNode = new FieldNode(fieldName, body);\n      fieldNode.scheduledForDeletion = true;\n      root.add(fieldNode);\n    }\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"embedReducerWithLink.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/embedReducerWithLink.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => embedReducerWithLink\n});\nlet handleAddField, handleAddElement, handleAddReducer;\nmodule.watch(require(\"./createReducers\"), {\n  handleAddField(v) {\n    handleAddField = v;\n  },\n\n  handleAddElement(v) {\n    handleAddElement = v;\n  },\n\n  handleAddReducer(v) {\n    handleAddReducer = v;\n  }\n\n}, 0);\n\nfunction embedReducerWithLink(reducerBody, collectionNode) {\n  _.each(reducerBody, (value, key) => {\n    const collection = collectionNode.collection;\n\n    if (_.isObject(value)) {\n      // nested field or link\n      if (collectionNode.body[key]) {\n        // if it exists\n        const linker = collection.getLinker(key); // if it's a link\n\n        if (linker) {\n          if (linker.isDenormalized()) {\n            if (linker.isSubBodyDenormalized(value)) {\n              const cacheField = linker.linkConfig.denormalize.field;\n              handleAddField(cacheField, value, collectionNode);\n              return;\n            }\n          }\n\n          embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n          return;\n        }\n\n        handleAddField(key, value, collectionNode);\n      } else {\n        // does not exist, so it may be a link/reducer/field\n        handleAddElement(collectionNode, key, value);\n      }\n    } else {\n      // if this field or other reducer exists within the collection\n      if (!collectionNode.body[key]) {\n        // can only be field or another reducer for this.\n        const reducer = collection.getReducer(key);\n\n        if (reducer) {\n          // if it's another reducer\n          return handleAddReducer(key, reducer, collectionNode);\n        }\n\n        return handleAddField(key, value, collectionNode);\n      }\n    }\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},\"node_modules\":{\"lodash.clonedeep\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/package.json                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nexports.name = \"lodash.clonedeep\";\nexports.version = \"4.5.0\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/index.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"dot-object\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/package.json                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nexports.name = \"dot-object\";\nexports.version = \"1.5.4\";\nexports.main = \"index\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/index.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"sift\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/package.json                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nexports.name = \"sift\";\nexports.version = \"3.2.6\";\nexports.main = \"./sift.js\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sift.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/sift.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deep-extend\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/package.json                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nexports.name = \"deep-extend\";\nexports.version = \"0.5.0\";\nexports.main = \"lib/deep-extend.js\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"deep-extend.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/lib/deep-extend.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"/node_modules/meteor/cultofcoders:grapher/main.server.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:grapher\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_grapher.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:grapher/main.server.js","packages/cultofcoders:grapher/lib/aggregate.js","packages/cultofcoders:grapher/lib/compose.js","packages/cultofcoders:grapher/lib/createQuery.js","packages/cultofcoders:grapher/lib/db.js","packages/cultofcoders:grapher/lib/extension.js","packages/cultofcoders:grapher/lib/exposure/exposure.config.schema.js","packages/cultofcoders:grapher/lib/exposure/exposure.js","packages/cultofcoders:grapher/lib/exposure/extension.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanBody.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxDepth.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxLimit.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictFields.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictLinks.js","packages/cultofcoders:grapher/lib/graphql/index.js","packages/cultofcoders:grapher/lib/graphql/lib/astToBody.js","packages/cultofcoders:grapher/lib/graphql/lib/astToQuery.js","packages/cultofcoders:grapher/lib/graphql/lib/defaults.js","packages/cultofcoders:grapher/lib/links/config.schema.js","packages/cultofcoders:grapher/lib/links/constants.js","packages/cultofcoders:grapher/lib/links/extension.js","packages/cultofcoders:grapher/lib/links/linker.js","packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","packages/cultofcoders:grapher/lib/links/linkTypes/base.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","packages/cultofcoders:grapher/lib/namedQuery/store.js","packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/expose/extension.js","packages/cultofcoders:grapher/lib/namedQuery/expose/schema.js","packages/cultofcoders:grapher/lib/namedQuery/expose/lib/mergeDeep.js","packages/cultofcoders:grapher/lib/query/query.base.js","packages/cultofcoders:grapher/lib/query/query.client.js","packages/cultofcoders:grapher/lib/query/query.js","packages/cultofcoders:grapher/lib/query/query.server.js","packages/cultofcoders:grapher/lib/query/counts/collection.js","packages/cultofcoders:grapher/lib/query/counts/constants.js","packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","packages/cultofcoders:grapher/lib/query/counts/genEndpoint.server.js","packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","packages/cultofcoders:grapher/lib/query/hypernova/constants.js","packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","packages/cultofcoders:grapher/lib/query/lib/applyProps.js","packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","packages/cultofcoders:grapher/lib/query/lib/createGraph.js","packages/cultofcoders:grapher/lib/query/lib/dotize.js","packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","packages/cultofcoders:grapher/lib/query/reducers/extension.js","packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js","packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","export","NamedQueryStore","LinkConstants","watch","require","default","v","exports","createQuery","Exposure","MemoryResultCacher","BaseResultCacher","compose","makeNsSetter","db","Promise","Mongo","Collection","prototype","aggregate","pipelines","options","coll","rawCollection","result","Meteor","wrapAsync","Array","isArray","await","toArray","deepExtend","exportDefault","args","Query","NamedQuery","name","body","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","get","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","Proxy","obj","prop","extend","ExposureDefaults","ExposureSchema","validateBody","createGraph","Match","blocking","method","publication","firewall","Maybe","OneOf","Function","maxLimit","Integer","maxDepth","Boolean","Object","restrictedFields","String","restrictLinks","e","toString","genCountEndpoint","recursiveCompose","hypernova","enforceMaxDepth","enforceMaxLimit","cleanBody","deepClone","restrictFieldsFn","check","globalConfig","setConfig","config","assign","getConfig","restrictFields","constructor","__isExposedForGrapher","__exposure","_name","_validateAndClean","initSecurity","initPublication","initMethod","initCountMethod","initCountPublication","getTransformedBody","userId","processedBody","getBody","call","bind","publishComposite","transformedBody","rootNode","bypassFirewalls","methodBody","unblock","methods","find","$filters","count","getCursor","session","filters","fields","_id","getSession","findOne","undefined","_callFirewall","arguments","length","forEach","fire","expose","isServer","cleanFilters","cleanOptions","dotize","main","second","object","$options","getFields","each","secondValue","key","value","isObject","convert","fieldExists","ensureFields","pick","sort","deepFilterFieldsArray","deepFilterFieldsObject","special","contains","field","element","i","indexOf","getDepth","node","depth","collectionNodes","max","map","limit","cleanObject","restrictedField","matching","subfield","slice","getLinks","parentNode","restrictedLinks","collectionNode","linkName","remove","exposure","configRestrictLinks","astToQuery","setAstToQueryDefaults","astToBody","Symbols","ARGUMENTS","Symbol","ast","fieldNodes","extractSelectionSet","selectionSet","set","selections","el","argumentMap","arg","getMaxDepth","deny","clearEmptyObjects","createGetArgs","defaults","intersectDeep","Errors","MAX_DEPTH","embody","Number","intersect","currentMaxDepth","getArgs","depths","push","Math","parts","split","accessor","shift","shouldDelete","path","stopped","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","bypassSchema","type","Where","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","addLinks","data","linkConfig","linker","getLinker","hasLink","getLink","objectOrId","linkData","isVirtual","linkStorageField","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","mainCollection","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","relatedLinker","getLinkedCollection","isSingle","isMeta","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","cleanedCollectionName","replace","defaultFieldPrefix","after","doc","fetch","linkedObj","link","unset","_ensureIndex","$in","getIds","ids","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","pluck","$elemMatch","Link","SmartArgs","linkedCollection","$metaFilters","$meta","searchFilters","appliedFilters","others","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","validIds","join","_virtualAction","action","reversedLink","elementId","insert","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","extendMetadata","existingMetadata","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","isResolver","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","cacher","exposeConfig","validator","CountSubscription","recursiveFetch","prepareForProcess","callWithPromise","Base","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","allowSkip","skip","NamedQueryClient","NamedQueryServer","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","cacheResults","resolve","fn","self","storage","getAll","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","ExposeSchema","ExposeDefaults","mergeDeep","_initNormalQuery","_initMethod","_initPublication","_initCountMethod","_initCountPublication","_unblockIfNecessary","target","source","QueryBase","isGlobalQuery","QueryClient","QueryServer","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","paramsOrBody","sessionId","JSON","existingSession","publish","request","parse","cursor","isReady","handle","observe","added","changed","removed","onStop","AggregateFilters","parentObjects","parent","results","create","uniq","eligibleObjects","storages","arrayOfIds","isValid","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","comparator","childLinkName","parentResults","resultsByKeyId","groupBy","filterAssembledData","SAFE_DOTTED_FIELD_REPLACEMENT","containsDottedFields","pipeline","$match","$sort","dataPush","safeField","$group","$push","$slice","$project","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregationResult","document","RegExp","restrictOptions","props","applyFields","myParameters","reject","reason","createNodes","addFieldNode","CollectionNode","FieldNode","ReducerNode","createReducers","specialFields","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","dotted","fieldNode","snapCache","prefix","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","getResultsArray","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","isUndefined","sameLevelResults","removeStorageField","shouldCleanStorage","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","applyPagination","_params","_body","children","n","parentObject","collectionNodeResults","currentIds","nodes","scheduledForDeletion","reducers","reducerNodes","_shouldCleanStorage","_node","hasAddedAnyField","has","hasField","getField","hasCollectionNode","hasReducerNode","getReducerNode","getCollectionNode","getName","subLinkName","reduce","reduceFunction","compute","addFieldMap","addReducers","reducerConfig","reducerName","dbField","cleanNestedFields","snapCacheField","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","dots","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/aggregate';\nimport './lib/exposure/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\nimport './lib/namedQuery/expose/extension.js';\nimport NamedQueryStore from './lib/namedQuery/store';\nimport LinkConstants from './lib/links/constants';\n\nexport { NamedQueryStore, LinkConstants };\n\nexport { default as createQuery } from './lib/createQuery.js';\n\nexport { default as Exposure } from './lib/exposure/exposure.js';\n\nexport {\n    default as MemoryResultCacher,\n} from './lib/namedQuery/cache/MemoryResultCacher';\n\nexport {\n    default as BaseResultCacher,\n} from './lib/namedQuery/cache/BaseResultCacher';\n\nexport { default as compose } from './lib/compose';\n\nexport * from './lib/graphql';\nexport { default as db } from './lib/db';\n","import { Promise } from 'meteor/promise';\n\nMongo.Collection.prototype.aggregate = function(pipelines, options = {}) {\n    const coll = this.rawCollection();\n\n    let result = Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n\n    // We need to check If it's an AggregationCursor\n    // The reason we do this was because of the upgrade to 1.7 which involved a mongodb driver update\n    if (Array.isArray(result)) {\n        return result;\n    } else {\n        return Promise.await(result.toArray());\n    }\n};\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nconst db = new Proxy(\n  {},\n  {\n    get: function(obj, prop) {\n      if (typeof prop === 'symbol') {\n        return obj[prop];\n      }\n\n      const collection = Mongo.Collection.get(prop);\n\n      if (!collection) {\n        return obj[prop];\n      }\n\n      return collection;\n    },\n  }\n);\n\nexport default db;\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    },\n});\n","import createGraph from '../query/lib/createGraph.js';\nimport {Match} from 'meteor/check';\n\nexport const ExposureDefaults = {\n    blocking: false,\n    method: true,\n    publication: true,\n};\n\nexport const ExposureSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    maxLimit: Match.Maybe(Match.Integer),\n    maxDepth: Match.Maybe(Match.Integer),\n    publication: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    blocking: Match.Maybe(Boolean),\n    body: Match.Maybe(Object),\n    restrictedFields: Match.Maybe([String]),\n    restrictLinks: Match.Maybe(\n        Match.OneOf(Function, [String])\n    ),\n};\n\nexport function validateBody(collection, body) {\n    try {\n        createGraph(collection, body);\n    } catch (e) {\n        throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString())\n    }\n}","import genCountEndpoint from '../query/counts/genEndpoint.server.js';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveCompose from '../query/lib/recursiveCompose.js';\nimport hypernova from '../query/hypernova/hypernova.js';\nimport {\n    ExposureSchema,\n    ExposureDefaults,\n    validateBody,\n} from './exposure.config.schema.js';\nimport enforceMaxDepth from './lib/enforceMaxDepth.js';\nimport enforceMaxLimit from './lib/enforceMaxLimit.js';\nimport cleanBody from './lib/cleanBody.js';\nimport deepClone from 'lodash.clonedeep';\nimport restrictFieldsFn from './lib/restrictFields.js';\nimport restrictLinks from './lib/restrictLinks.js';\nimport { check } from 'meteor/check';\n\nlet globalConfig = {};\n\nexport default class Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n\n        this.config = config;\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof this.config === 'function') {\n            const firewall = this.config;\n            this.config = { firewall };\n        }\n\n        this.config = Object.assign(\n            {},\n            ExposureDefaults,\n            Exposure.getConfig(),\n            this.config\n        );\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    }\n\n    /**\n     * Takes the body and intersects it with the exposure body, if it exists.\n     *\n     * @param body\n     * @param userId\n     * @returns {*}\n     */\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    }\n\n    /**\n     * Gets the exposure body\n     */\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error(\n                'missing-body',\n                'Cannot get exposure body because it was not defined.'\n            );\n        }\n\n        let body;\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        }\n\n        // it means we allow everything, no need for cloning.\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(body, userId);\n    }\n\n    /**\n     * Initializing the publication for reactive query fetching\n     */\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        Meteor.publishComposite(this.name, function(body) {\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        });\n    }\n\n    /**\n     * Initializez the method to retrieve the data via Meteor.call\n     */\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function(body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            // if there is no exposure body defined, then we need to apply firewalls\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody,\n        });\n    }\n\n    /**\n     * Initializes the method to retrieve the count of the data via Meteor.call\n     * @returns {*}\n     */\n    initCountMethod() {\n        const collection = this.collection;\n\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n\n                return collection\n                    .find(body.$filters || {}, {}, this.userId)\n                    .count();\n            },\n        });\n    }\n\n    /**\n     * Initializes the reactive endpoint to retrieve the count of the data.\n     */\n    initCountPublication() {\n        const collection = this.collection;\n\n        genCountEndpoint(this.name, {\n            getCursor({ session }) {\n                return collection.find(\n                    session.filters,\n                    {\n                        fields: { _id: 1 },\n                    },\n                    this.userId\n                );\n            },\n\n            getSession(body) {\n                return { filters: body.$filters || {} };\n            },\n        });\n    }\n\n    /**\n     * Initializes security enforcement\n     * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n     */\n    initSecurity() {\n        const collection = this.collection;\n        const { firewall, maxLimit, restrictedFields } = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall(\n                    { collection: collection },\n                    filters,\n                    options,\n                    userId\n                );\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function(filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            }\n\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return find(filters, options);\n        };\n\n        collection.findOne = function(\n            filters,\n            options = {},\n            userId = undefined\n        ) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof filters === 'string') {\n                filters = { _id: filters };\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return findOne(filters, options);\n        };\n    }\n\n    /**\n     * @private\n     */\n    _callFirewall(...args) {\n        const { firewall } = this.config;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            });\n        } else {\n            firewall.call(...args);\n        }\n    }\n}\n","import Exposure from './exposure.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    expose(config) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error(\n                'not-allowed',\n                `You can only expose a collection server side. ${this._name}`\n            );\n        }\n\n        new Exposure(this, config);\n    },\n});\n","import deepClone from 'lodash.clonedeep';\nimport {cleanFilters, cleanOptions} from './cleanSelectors';\nimport dotize from '../../query/lib/dotize';\n\n/**\n * Deep Inter Computation\n */\nexport default function cleanBody(main, second, ...args) {\n    let object = {};\n\n    if (second.$filters || second.$options) {\n        const fields = getFields(main);\n\n        cleanFilters(second.$filters, fields);\n        cleanOptions(second.$options, fields);\n    }\n\n    _.each(second, (secondValue, key) => {\n        if (key === '$filters' || key === '$options') {\n            object[key] = secondValue;\n            return;\n        }\n\n        let value = main[key];\n\n        if (value === undefined) {\n            return;\n        }\n\n        // if the main value is a function, we run it.\n        if (_.isFunction(value)) {\n            value = value.call(null, ...args);\n        }\n\n        // if the main value is undefined or false, we skip the merge\n        if (value === undefined || value === false) {\n            return;\n        }\n\n        // we treat this specially, if the value is true\n        if (value === true) {\n            object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n            return;\n        }\n\n        // if the main value is an object\n        if (_.isObject(value)) {\n            if (_.isObject(secondValue)) {\n                // if the second one is an object as well we run recursively run the intersection\n                object[key] = cleanBody(value, secondValue, ...args);\n            }\n            // if it is not, then we will ignore it, because it won't make sense.\n            // to merge {a: 1} with 1.\n\n            return;\n        }\n\n        // if the main value is not an object, it should be a truthy value like 1\n        if (_.isObject(secondValue)) {\n            // if the second value is an object, then we will keep it.\n            // this won't cause problem with deep nesting because\n            // when you specify links you will have the main value as an object, otherwise it will fail\n            // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n\n            object[key] = deepClone(secondValue);\n        } else {\n            // if the second value is not an object, we just store the first value\n            object[key] = value;\n        }\n    });\n\n    return object;\n}\n\nfunction getFields(body) {\n    return _.keys(dotize.convert(body));\n}","export function cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nexport function cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\n/**\n * This will check if a field exists in a set of fields\n * If fields contains [\"profile\"], then \"profile.something\" will return true\n *\n * @param fields\n * @param key\n * @returns {boolean}\n */\nexport function fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n","export default function (node, maxDepth) {\n    if (maxDepth === undefined) {\n        return node;\n    }\n\n    const depth = getDepth(node);\n\n    if (depth > maxDepth) {\n        throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.')\n    }\n\n    return node;\n}\n\nexport function getDepth(node) {\n    if (node.collectionNodes.length === 0) {\n        return 1;\n    }\n\n    return 1 + _.max(\n        _.map(node.collectionNodes, getDepth)\n    );\n}","export default function (options, maxLimit) {\n    if (maxLimit === undefined) {\n        return;\n    }\n\n    if (options.limit) {\n        if (options.limit > maxLimit) {\n            options.limit = maxLimit;\n        }\n    } else {\n        options.limit = maxLimit;\n    }\n}","const deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n\n/**\n * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n *\n * @param filters Object\n * @param options Object\n * @param restrictedFields Array\n */\nexport default function restrictFields(filters, options, restrictedFields) {\n    if (!_.isArray(restrictedFields)) {\n        throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n    }\n\n    cleanFilters(filters, restrictedFields);\n    cleanOptions(options, restrictedFields)\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */\nfunction cleanFilters(filters, restrictedFields) {\n    if (filters) {\n        cleanObject(filters, restrictedFields);\n    }\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, restrictedFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], restrictedFields);\n        }\n    });\n}\n\n/**\n * Deeply cleans options\n *\n * @param options\n * @param restrictedFields\n */\nfunction cleanOptions(options, restrictedFields) {\n    if (options.fields) {\n        cleanObject(options.fields, restrictedFields);\n\n        if (_.keys(options.fields).length === 0) {\n            _.extend(options.fields, {_id: 1})\n        }\n    } else {\n        options.fields = {_id: 1};\n    }\n\n    if (options.sort) {\n        cleanObject(options.sort, restrictedFields);\n    }\n}\n\n/**\n * Cleans the object (not deeply)\n *\n * @param object\n * @param restrictedFields\n */\nfunction cleanObject(object, restrictedFields) {\n    _.each(object, (value, key) => {\n        restrictedFields.forEach((restrictedField) => {\n            if (matching(restrictedField, key)) {\n                delete object[key];\n            }\n        })\n    });\n}\n\n/**\n * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n * Example: \"profile\" and \"profile.firstName\" will be a matching field\n * @param field\n * @param subfield\n * @returns {boolean}\n */\nfunction matching(field, subfield) {\n    if (field === subfield) {\n        return true;\n    }\n\n    return subfield.slice(0, field.length + 1) === field + '.';\n}","export default function restrictLinks(parentNode, ...args) {\n    const restrictedLinks = getLinks(parentNode, ...args);\n\n    if (!restrictedLinks || restrictedLinks.length) {\n        return;\n    }\n\n    _.each(parentNode.collectionNodes, collectionNode => {\n        if (_.contains(restrictedLinks, collectionNode.linkName)) {\n            parentNode.remove(collectionNode);\n        }\n    });\n}\n\nexport function getLinks(node, ...args) {\n    if (node.collection && node.collection.__exposure) {\n        const exposure = node.collection.__exposure;\n\n        if (exposure.config.restrictLinks) {\n            const configRestrictLinks = exposure.config.restrictLinks;\n\n            if (_.isArray(configRestrictLinks)) {\n                return configRestrictLinks;\n            }\n\n            return configRestrictLinks(...args);\n        }\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport astToQuery from './lib/astToQuery';\n\nexport { setAstToQueryDefaults } from './lib/defaults';\nexport { default as astToBody } from './lib/astToBody';\n\nObject.assign(Mongo.Collection.prototype, {\n  astToQuery,\n});\n\nexport { astToQuery };\n","export const Symbols = {\n  ARGUMENTS: Symbol('arguments'),\n};\n\nexport default function astToBody(ast) {\n  const fieldNodes = ast.fieldNodes;\n\n  const body = extractSelectionSet(ast.fieldNodes[0].selectionSet);\n\n  return body;\n}\n\nfunction extractSelectionSet(set) {\n  let body = {};\n  set.selections.forEach(el => {\n    if (!el.selectionSet) {\n      body[el.name.value] = 1;\n    } else {\n      body[el.name.value] = extractSelectionSet(el.selectionSet);\n      if (el.arguments.length) {\n        let argumentMap = {};\n        el.arguments.forEach(arg => {\n          argumentMap[arg.name.value] = arg.value.value;\n        });\n\n        body[el.name.value][Symbols.ARGUMENTS] = argumentMap;\n      }\n    }\n  });\n\n  return body;\n}\n","import { check, Match } from 'meteor/check';\nimport astToBody, { Symbols } from './astToBody';\nimport defaults from './defaults';\nimport intersectDeep from '../../query/lib/intersectDeep';\nimport enforceMaxLimit from '../../exposure/lib/enforceMaxLimit';\n\nconst Errors = {\n  MAX_DEPTH: 'The maximum depth of this request exceeds the depth allowed.',\n};\n\nexport default function astToQuery(ast, config = {}) {\n  const collection = this;\n\n  check(config, {\n    embody: Match.Maybe(Function),\n    $filters: Match.Maybe(Object),\n    $options: Match.Maybe(Object),\n    maxDepth: Match.Maybe(Number),\n    maxLimit: Match.Maybe(Number),\n    deny: Match.Maybe([String]),\n    intersect: Match.Maybe(Object),\n  });\n\n  config = Object.assign(\n    {\n      $options: {},\n      $filters: {},\n    },\n    defaults,\n    config\n  );\n\n  // get the body\n  let body = astToBody(ast);\n\n  // first we do the intersection\n  if (config.intersect) {\n    body = intersectDeep(config.intersect, body);\n  }\n\n  // enforce the maximum amount of data we allow to retrieve\n  if (config.maxLimit) {\n    enforceMaxLimit(config.$options, config.maxLimit);\n  }\n\n  // figure out depth based\n  if (config.maxDepth) {\n    const currentMaxDepth = getMaxDepth(body);\n    if (currentMaxDepth > config.maxDepth) {\n      throw Errors.MAX_DEPTH;\n    }\n  }\n\n  if (config.deny) {\n    deny(body, config.deny);\n  }\n\n  Object.assign(body, {\n    $filters: config.$filters,\n    $options: config.$options,\n  });\n\n  if (config.embody) {\n    const getArgs = createGetArgs(body);\n    config.embody.call(null, {\n      body,\n      getArgs,\n    });\n  }\n\n  // we return the query\n  return this.createQuery(body);\n}\n\nexport function getMaxDepth(body) {\n  let depths = [];\n  for (key in body) {\n    if (_.isObject(body[key])) {\n      depths.push(getMaxDepth(body[key]));\n    }\n  }\n\n  if (depths.length === 0) {\n    return 1;\n  }\n\n  return Math.max(...depths) + 1;\n}\n\nexport function deny(body, fields) {\n  fields.forEach(field => {\n    let parts = field.split('.');\n    let accessor = body;\n    while (parts.length != 0) {\n      if (parts.length === 1) {\n        delete accessor[parts[0]];\n      } else {\n        if (!_.isObject(accessor)) {\n          break;\n        }\n        accessor = accessor[parts[0]];\n      }\n      parts.shift();\n    }\n  });\n\n  return clearEmptyObjects(body);\n}\n\nexport function clearEmptyObjects(body) {\n  // clear empty nodes then back-propagate\n  for (let key in body) {\n    if (_.isObject(body[key])) {\n      const shouldDelete = clearEmptyObjects(body[key]);\n      if (shouldDelete) {\n        delete body[key];\n      }\n    }\n  }\n\n  return Object.keys(body).length === 0;\n}\n\nexport function createGetArgs(body) {\n  return function(path) {\n    const parts = path.split('.');\n    let stopped = false;\n    let accessor = body;\n    for (var i = 0; i < parts.length; i++) {\n      if (!accessor) {\n        stopped = true;\n        break;\n      }\n\n      if (accessor[parts[i]]) {\n        accessor = accessor[parts[i]];\n      }\n    }\n\n    if (stopped) {\n      return {};\n    }\n\n    if (accessor) {\n      return accessor[Symbols.ARGUMENTS] || {};\n    }\n  };\n}\n","let defaults = {};\n\nexport default defaults;\n\nexport function setAstToQueryDefaults(object) {\n  Object.assign(defaults, object);\n}\n","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport { LINK_STORAGE } from './constants.js';\nimport Linker from './linker.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker,\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(\n                `There are no links defined for collection: ${this._name}`\n            );\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(\n                `There is no link ${name} for collection: ${this._name}`\n            );\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1,\n                    },\n                });\n            } else {\n                object = { _id: objectOrId };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(\n                    `We could not find any object with _id: \"${objectOrId}\" within the collection: ${\n                        this._name\n                    }`\n                );\n            }\n        }\n\n        return linkData[name].createLink(object);\n    },\n});\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport {LinkConfigSchema, LinkConfigDefaults} from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport {check} from 'meteor/check';\nimport {_} from 'meteor/underscore';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique)\n            || (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`)\n        }\n\n        if (typeof(this.linkConfig.collection) === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const {collection, inversedBy} = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`)\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            })\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`)\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {relatedLinker} = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        })\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {unique: true}\n                }\n\n                this.mainCollection._ensureIndex({[field]: 1}, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {unique: true})\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                })\n            })\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {fields: {_id: 1}}).fetch().map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: {$in: ids}\n                })\n            })\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`)\n        }\n\n        const {field, body, bypassSchema} = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = (this.isSingle() ? '._id' : ':_id');\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            })\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(\n            dot.dot(\n                _.omit(body, '_id')\n            )\n        );\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    $elemMatch: {\n                        _id: {\n                            $in: _ids\n                        }\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import NamedQuery from '../namedQuery.js';\nimport { ExposeSchema, ExposeDefaults } from './schema.js';\nimport mergeDeep from './lib/mergeDeep.js';\nimport createGraph from '../../query/lib/createGraph.js';\nimport recursiveCompose from '../../query/lib/recursiveCompose.js';\nimport prepareForProcess from '../../query/lib/prepareForProcess.js';\nimport deepClone from 'lodash.clonedeep';\nimport intersectDeep from '../../query/lib/intersectDeep';\nimport genCountEndpoint from '../../query/counts/genEndpoint.server';\nimport { check } from 'meteor/check';\n\n_.extend(NamedQuery.prototype, {\n    /**\n     * @param config\n     */\n    expose(config = {}) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error(\n                'invalid-environment',\n                `You must run this in server-side code`\n            );\n        }\n\n        if (this.isExposed) {\n            throw new Meteor.Error(\n                'query-already-exposed',\n                `You have already exposed: \"${this.name}\" named query`\n            );\n        }\n\n        this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n        check(this.exposeConfig, ExposeSchema);\n\n        if (this.exposeConfig.validateParams) {\n            this.options.validateParams = this.exposeConfig.validateParams;\n        }\n\n        if (!this.isResolver) {\n            this._initNormalQuery();\n        } else {\n            this._initMethod();\n        }\n\n        this.isExposed = true;\n    },\n\n    /**\n     * Initializes a normal NamedQuery (normal == not a resolver)\n     * @private\n     */\n    _initNormalQuery() {\n        const config = this.exposeConfig;\n        if (config.method) {\n            this._initMethod();\n        }\n\n        if (config.publication) {\n            this._initPublication();\n        }\n\n        if (!config.method && !config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this._initCountMethod();\n        this._initCountPublication();\n    },\n\n    /**\n     * Returns the embodied body of the request\n     * @param {*} _embody\n     * @param {*} body\n     */\n    doEmbodimentIfItApplies(body) {\n        // query is not exposed yet, so it doesn't have embodiment logic\n        if (!this.exposeConfig) {\n            return;\n        }\n\n        const { embody } = this.exposeConfig;\n\n        if (!embody) {\n            return;\n        }\n\n        if (_.isFunction(embody)) {\n            embody.call(this, body, this.params);\n        } else {\n            mergeDeep(body, embody);\n        }\n    },\n\n    /**\n     * @private\n     */\n    _initMethod() {\n        const self = this;\n        Meteor.methods({\n            [this.name](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).fetch(this);\n            },\n        });\n    },\n\n    /**\n     * @returns {void}\n     * @private\n     */\n    _initCountMethod() {\n        const self = this;\n\n        Meteor.methods({\n            [this.name + '.count'](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).getCount(this);\n            },\n        });\n    },\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _initCountPublication() {\n        const self = this;\n\n        genCountEndpoint(self.name, {\n            getCursor({ session }) {\n                const query = self.clone(session.params);\n                return query.getCursorForCounting();\n            },\n\n            getSession(newParams) {\n                self.doValidateParams(newParams);\n                self._callFirewall(this, this.userId, params);\n\n                return { name: self.name, params: newParams };\n            },\n        });\n    },\n\n    /**\n     * @private\n     */\n    _initPublication() {\n        const self = this;\n\n        Meteor.publishComposite(this.name, function(params = {}) {\n            self._unblockIfNecessary(this);\n            self.doValidateParams(params);\n            self._callFirewall(this, this.userId, params);\n\n            let body = deepClone(self.body);\n            if (params.$body) {\n                body = intersectDeep(body, params.$body);\n            }\n\n            self.doEmbodimentIfItApplies(body);\n            body = prepareForProcess(body, params);\n\n            const rootNode = createGraph(self.collection, body);\n\n            return recursiveCompose(rootNode);\n        });\n    },\n\n    /**\n     * @param context\n     * @param userId\n     * @param params\n     * @private\n     */\n    _callFirewall(context, userId, params) {\n        const { firewall } = this.exposeConfig;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(context, userId, params);\n            });\n        } else {\n            firewall.call(context, userId, params);\n        }\n    },\n\n    /**\n     * @param context\n     * @private\n     */\n    _unblockIfNecessary(context) {\n        if (this.exposeConfig.unblock) {\n            if (context.unblock) {\n                context.unblock();\n            }\n        }\n    },\n});\n","import {Match} from 'meteor/check';\n\nexport const ExposeDefaults = {\n    publication: true,\n    method: true,\n    unblock: true,\n};\n\nexport const ExposeSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    publication: Match.Maybe(Boolean),\n    unblock: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    embody: Match.Maybe(\n        Match.OneOf(Object, Function)\n    ),\n    validateParams: Match.Maybe(\n        Match.OneOf(Object, Function)\n    ),\n};\n","/**\n * Deep merge two objects.\n * @param target\n * @param source\n */\nexport default function mergeDeep(target, source) {\n    if (_.isObject(target) && _.isObject(source)) {\n        _.each(source, (value, key) => {\n            if (_.isFunction(source[key])) {\n                target[key] = source[key];\n            } else if (_.isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n\n    return target;\n}","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null);\n\n/**\n * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n *\n * @param {String} name - Name of the query or collection\n * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n */\nexport default (name, { getCursor, getSession }) => {\n    Meteor.methods({\n        [name + '.count.subscribe'](paramsOrBody) {\n            const session = getSession.call(this, paramsOrBody);\n            const sessionId = JSON.stringify(session);\n\n            const existingSession = collection.findOne({\n                session: sessionId,\n                userId: this.userId,\n            });\n\n            // Try to reuse sessions if the user subscribes multiple times with the same data\n            if (existingSession) {\n                return existingSession._id;\n            }\n\n            const token = collection.insert({\n                session: sessionId,\n                query: name,\n                userId: this.userId,\n            });\n\n            return token;\n        },\n    });\n\n    Meteor.publish(name + '.count', function(token) {\n        check(token, String);\n        const self = this;\n        const request = collection.findOne({ _id: token, userId: self.userId });\n\n        if (!request) {\n            throw new Error(\n                'no-request',\n                `You must acquire a request token via the \"${name}.count.subscribe\" method first.`\n            );\n        }\n\n        request.session = JSON.parse(request.session);\n        const cursor = getCursor.call(this, request);\n\n        // Start counting\n        let count = 0;\n\n        let isReady = false;\n        const handle = cursor.observe({\n            added() {\n                count++;\n                isReady &&\n                    self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n\n            removed() {\n                count--;\n                isReady &&\n                    self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n        });\n\n        isReady = true;\n        self.added(COUNTS_COLLECTION_CLIENT, token, { count });\n\n        self.onStop(() => {\n            handle.stop();\n            collection.remove(token);\n        });\n\n        self.ready();\n    });\n};\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    const isMany = linker.isMany();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                linkStorageField,\n                metaFiltersTest\n            );\n        });\n    }\n\n    if (isMeta && isMany) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(\n                aggregateResults,\n                aggregateResult => {\n                    return _.contains(aggregateResult._id, parentResult._id);\n                }\n            );\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        let comparator;\n        if (isMany) {\n            comparator = (aggregateResult, result) =>\n                _.contains(aggregateResult._id, result._id);\n        } else {\n            comparator = (aggregateResult, result) =>\n                aggregateResult._id == result._id;\n        }\n\n        const childLinkName = childCollectionNode.linkName;\n        const parentResults = childCollectionNode.parent.results;\n\n        parentResults.forEach(parentResult => {\n            // We are now finding the data from the pipeline that is related to the _id of the parent\n            const eligibleAggregateResults = aggregateResults.filter(\n                aggregateResult => comparator(aggregateResult, parentResult)\n            );\n\n            eligibleAggregateResults.forEach(aggregateResult => {\n                if (Array.isArray(parentResult[childLinkName])) {\n                    parentResult[childLinkName].push(...aggregateResult.data);\n                } else {\n                    parentResult[childLinkName] = [...aggregateResult.data];\n                }\n            });\n        });\n\n        aggregateResults.forEach(aggregateResult => {\n            allResults.push(...aggregateResult.data);\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}\n","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\n    if (childCollectionNode.results.length === 0) {\n        return;\n    }\n\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                fieldStorage,\n                metaFiltersTest\n            );\n        });\n    }\n\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n    if (strategy === 'one') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[parentResult[fieldStorage]],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            let data = [];\n            parentResult[fieldStorage].forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'one-meta') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            const _id = parentResult[fieldStorage]._id;\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[_id],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many-meta') {\n        parent.results.forEach(parentResult => {\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\n            let data = [];\n            _ids.forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n};\n\nfunction filterAssembledData(data, { limit, skip }) {\n    if (limit && Array.isArray(data)) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n","import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return (childCollectionNode.results = []);\n    }\n\n    let { filters, options } = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(\n        childCollectionNode,\n        metaFilters\n    );\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection\n            .find(filters, filteredOptions, userId)\n            .fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters,\n        });\n    } else {\n        // virtuals arrive here\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\n            childCollectionNode,\n            filters,\n            options,\n            userId\n        );\n\n        let aggregateResults = collection.aggregate(pipeline);\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(\n            childCollectionNode,\n            aggregateResults,\n            metaFilters\n        );\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nconst specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        let dotted = dotize.convert({[fieldName]: body});\n        _.each(dotted, (value, key) => {\n            root.add(new FieldNode(key, value));\n        });\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    storeOneResults(node, node.results);\n    applyReducers(node, params);\n    cleanReducerLeftovers(node);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    removeLinkStorages(node, node.results);\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\nexport function getResultsArray(results) {\n    if (_.isArray(results)) {\n        return results;\n    }\n    else if (_.isUndefined(results)) {\n        return [];\n    }\n    return [results];\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    sameLevelResults = getResultsArray(sameLevelResults);\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                delete result[collectionNode.linkStorageField];\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            _.each(sameLevelResults, result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    // parentResults might be an object (for type==one links)\n    parentResults = getResultsArray(parentResults);\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            if (node.isOneResult) {\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n            }\n            else {\n                parentResult[linkName] = parentResult[linkName].map(object => {\n                    return Object.assign({}, object);\n                });\n            }\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    parentResults = getResultsArray(parentResults);\n\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                if (node.isOneResult) {\n                    const storage = childResult[node.linkStorageField];\n                    storeMetadata(childResult, parentResult, storage, true);\n                } else {\n                    _.each(childResult, object => {\n                        const storage = object[node.linkStorageField];\n\n                        storeMetadata(object, parentResult, storage, true);\n                    });\n                }\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                if (node.isOneResult) {\n                    if (childResult) {\n                        storeMetadata(childResult, parentResult, storage, false);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        storeMetadata(object, parentResult, storage, false);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\n\nfunction compose(node, userId) {\n    return {\n        find(parent) {\n            if (parent) {\n                let {filters, options} = applyProps(node);\n\n                // composition\n                let linker = node.linker;\n                let accessor = linker.createLink(parent);\n\n                // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n                if (linker.isVirtual()) {\n                    options.fields = options.fields || {};\n                    _.extend(options.fields, {\n                        [linker.linkStorageField]: 1\n                    });\n                }\n\n                return accessor.find(filters, options, userId);\n            }\n        },\n\n        children: _.map(node.collectionNodes, n => compose(n, userId))\n    }\n}\n\nexport default (node, userId, config = {bypassFirewalls: false}) => {\n    return {\n        find() {\n            let {filters, options} = applyProps(node);\n\n            return node.collection.find(filters, options, userId);\n        },\n\n        children: _.map(node.collectionNodes, n => {\n            const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n\n            return compose(n, userIdToPass);\n        })\n    }\n}","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n    let {filters, options} = applyProps(node);\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            const collectionNodeResults = fetch(collectionNode, result);\n            result[collectionNode.linkName] = collectionNodeResults;\n            //delete result[node.linker.linkStorageField];\n\n            /**\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n             * the results?\n             *\n             * Other possible ways:\n             * - do something like assemble() in storeHypernovaResults\n             * - pass node.results to accessor above and find with sift\n             */\n\n            const currentIds = _.pluck(collectionNode.results, '_id');\n            collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params) => {\n    node.results = fetch(node);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            hasAddedAnyField = true;\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter and conditional operators\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {_id: 1};\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName) {\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n","export default class FieldNode {\n    constructor(name, body) {\n        this.name = name;\n        this.body = _.isObject(body) ? 1 : body;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n","/**\n * @param {[niceField: string]: dbField} map\n */\nexport default function addFieldMap(map) {\n    const collection = this;\n    let reducers = {};\n    for (let key in map) {\n        const dbField = map[key];\n        reducers[key] = {\n            body: {\n                [dbField]: 1,\n            },\n            reduce(obj) {\n                return obj[dbField];\n            },\n        };\n    }\n\n    collection.addReducers(reducers);\n}\n","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    _.each(root.reducerNodes, reducerNode => {\n        root.results.forEach(result => {\n            reducerNode.compute(result, params);\n        });\n    });\n}","import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n\n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, reducer, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let reducerNode = new ReducerNode(fieldName, reducer);\n        root.add(reducerNode);\n        reducerNode.scheduledForDeletion = true;\n\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(fieldName, body, root, linker) {\n    if (root.hasCollectionNode(fieldName)) {\n        const collectionNode = root.getCollectionNode(fieldName);\n\n        embedReducerWithLink(body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        root.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            if (!root.hasField(key)) {\n                let fieldNode = new FieldNode(key, value);\n                fieldNode.scheduledForDeletion = true;\n\n                root.add(fieldNode);\n            }\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        if (!root.hasField(fieldName)) {\n            let fieldNode = new FieldNode(fieldName, body);\n            fieldNode.scheduledForDeletion = true;\n\n            root.add(fieldNode);\n        }\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    if (linker.isDenormalized()) {\n                        if (linker.isSubBodyDenormalized(value)) {\n                            const cacheField = linker.linkConfig.denormalize.field;\n                            handleAddField(cacheField, value, collectionNode);\n                            return;\n                        }\n                    }\n\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(collectionNode, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}}]