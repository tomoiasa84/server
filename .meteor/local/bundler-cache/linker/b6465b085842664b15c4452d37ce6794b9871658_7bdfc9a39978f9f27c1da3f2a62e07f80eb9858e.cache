[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Promise = Package.promise.Promise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Mongo = Package.mongo.Mongo;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\n\n/* Package-scope variables */\nvar ids, what, params, body, cacher, dotize;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:grapher\":{\"main.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/main.client.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.link(\"./lib/extension.js\");\nmodule.link(\"./lib/links/extension.js\");\nmodule.link(\"./lib/query/reducers/extension.js\");\nmodule.link(\"./lib/createQuery.js\", {\n  default: \"createQuery\"\n}, 0);\nmodule.link(\"./lib/query/lib/prepareForProcess\", {\n  default: \"prepareForProcess\"\n}, 1);\nmodule.link(\"./lib/query/query.client\", {\n  default: \"Query\"\n}, 2);\nmodule.link(\"./lib/namedQuery/namedQuery.client\", {\n  default: \"NamedQuery\"\n}, 3);\nmodule.link(\"./lib/compose\", {\n  default: \"compose\"\n}, 4);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"compose.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/compose.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet deepExtend;\nmodule.link(\"deep-extend\", {\n  default(v) {\n    deepExtend = v;\n  }\n\n}, 0);\nmodule.exportDefault(function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return deepExtend({}, ...args);\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createQuery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/createQuery.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Query;\nmodule.link(\"./query/query.js\", {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.link(\"./namedQuery/namedQuery.js\", {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.link(\"./namedQuery/store.js\", {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\nmodule.exportDefault(function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'string') {\n    let [name, body, options] = args;\n    options = options || {}; // It's a resolver query\n\n    if (_.isFunction(body)) {\n      return createNamedQuery(name, null, body, options);\n    }\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      throw new Meteor.Error('invalid-name', \"We could not find any collection with the name \\\"\".concat(entryPointName, \"\\\". Make sure it is imported prior to using this\"));\n    }\n\n    return createNamedQuery(name, collection, body[entryPointName], options);\n  } else {\n    // Query Creation, it can have an endpoint as collection or as a NamedQuery\n    let [body, options] = args;\n    options = options || {};\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n        console.warn(\"You are creating a query with the entry point \\\"\".concat(entryPointName, \"\\\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.\"));\n      }\n\n      return createNamedQuery(entryPointName, null, {}, {\n        params: body[entryPointName]\n      });\n    } else {\n      return createNormalQuery(collection, body[entryPointName], options);\n    }\n  }\n});\n\nfunction createNamedQuery(name, collection, body) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  // if it exists already, we re-use it\n  const namedQuery = NamedQueryStore.get(name);\n  let query;\n\n  if (!namedQuery) {\n    query = new NamedQuery(name, collection, body, options);\n    NamedQueryStore.add(name, query);\n  } else {\n    query = namedQuery.clone(options.params);\n  }\n\n  return query;\n}\n\nfunction createNormalQuery(collection, body, options) {\n  return new Query(collection, body, options);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/extension.js                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Query;\nmodule.link(\"./query/query.js\", {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.link(\"./namedQuery/namedQuery.js\", {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.link(\"./namedQuery/store.js\", {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n  createQuery() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'string') {\n      //NamedQuery\n      const [name, body, options] = args;\n      const query = new NamedQuery(name, this, body, options);\n      NamedQueryStore.add(name, query);\n      return query;\n    } else {\n      const [body, options] = args;\n      return new Query(this, body, options);\n    }\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links\":{\"config.schema.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/config.schema.js                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  DenormalizeSchema: () => DenormalizeSchema,\n  LinkConfigDefaults: () => LinkConfigDefaults,\n  LinkConfigSchema: () => LinkConfigSchema\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst DenormalizeSchema = {\n  field: String,\n  body: Object,\n  bypassSchema: Match.Maybe(Boolean)\n};\nconst LinkConfigDefaults = {\n  type: 'one'\n};\nconst LinkConfigSchema = {\n  type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n  collection: Match.Maybe(Match.Where(collection => {\n    // We do like this so it works with other types of collections \n    // like FS.Collection\n    return _.isObject(collection) && (collection instanceof Mongo.Collection || !!collection._collection);\n  })),\n  field: Match.Maybe(String),\n  metadata: Match.Maybe(Boolean),\n  inversedBy: Match.Maybe(String),\n  index: Match.Maybe(Boolean),\n  unique: Match.Maybe(Boolean),\n  autoremove: Match.Maybe(Boolean),\n  denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema))\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/constants.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  LINK_STORAGE: () => LINK_STORAGE\n});\nconst LINK_STORAGE = '__links';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/extension.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LINK_STORAGE;\nmodule.link(\"./constants.js\", {\n  LINK_STORAGE(v) {\n    LINK_STORAGE = v;\n  }\n\n}, 1);\nlet Linker;\nmodule.link(\"./linker.js\", {\n  default(v) {\n    Linker = v;\n  }\n\n}, 2);\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * The data we add should be valid for config.schema.js\n   */\n  addLinks(data) {\n    if (!this[LINK_STORAGE]) {\n      this[LINK_STORAGE] = {};\n    }\n\n    _.each(data, (linkConfig, linkName) => {\n      if (this[LINK_STORAGE][linkName]) {\n        throw new Meteor.Error(\"You cannot add the link with name: \".concat(linkName, \" because it was already added to \").concat(this._name, \" collection\"));\n      }\n\n      const linker = new Linker(this, linkName, linkConfig);\n\n      _.extend(this[LINK_STORAGE], {\n        [linkName]: linker\n      });\n    });\n  },\n\n  getLinks() {\n    return this[LINK_STORAGE];\n  },\n\n  getLinker(name) {\n    if (this[LINK_STORAGE]) {\n      return this[LINK_STORAGE][name];\n    }\n  },\n\n  hasLink(name) {\n    if (!this[LINK_STORAGE]) {\n      return false;\n    }\n\n    return !!this[LINK_STORAGE][name];\n  },\n\n  getLink(objectOrId, name) {\n    let linkData = this[LINK_STORAGE];\n\n    if (!linkData) {\n      throw new Meteor.Error(\"There are no links defined for collection: \".concat(this._name));\n    }\n\n    if (!linkData[name]) {\n      throw new Meteor.Error(\"There is no link \".concat(name, \" for collection: \").concat(this._name));\n    }\n\n    const linker = linkData[name];\n    let object = objectOrId;\n\n    if (typeof objectOrId == 'string') {\n      if (!linker.isVirtual()) {\n        object = this.findOne(objectOrId, {\n          fields: {\n            [linker.linkStorageField]: 1\n          }\n        });\n      } else {\n        object = {\n          _id: objectOrId\n        };\n      }\n\n      if (!object) {\n        throw new Meteor.Error(\"We could not find any object with _id: \\\"\".concat(objectOrId, \"\\\" within the collection: \").concat(this._name));\n      }\n    }\n\n    return linkData[name].createLink(object);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linker.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linker.js                                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Linker\n});\nlet LinkMany;\nmodule.link(\"./linkTypes/linkMany.js\", {\n  default(v) {\n    LinkMany = v;\n  }\n\n}, 0);\nlet LinkManyMeta;\nmodule.link(\"./linkTypes/linkManyMeta.js\", {\n  default(v) {\n    LinkManyMeta = v;\n  }\n\n}, 1);\nlet LinkOne;\nmodule.link(\"./linkTypes/linkOne.js\", {\n  default(v) {\n    LinkOne = v;\n  }\n\n}, 2);\nlet LinkOneMeta;\nmodule.link(\"./linkTypes/linkOneMeta.js\", {\n  default(v) {\n    LinkOneMeta = v;\n  }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.link(\"./config.schema.js\", {\n  LinkConfigSchema(v) {\n    LinkConfigSchema = v;\n  },\n\n  LinkConfigDefaults(v) {\n    LinkConfigDefaults = v;\n  }\n\n}, 4);\nlet smartArguments;\nmodule.link(\"./linkTypes/lib/smartArguments\", {\n  default(v) {\n    smartArguments = v;\n  }\n\n}, 5);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 6);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 7);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 8);\nlet access;\nmodule.link(\"fs\", {\n  access(v) {\n    access = v;\n  }\n\n}, 9);\n\nclass Linker {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  constructor(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  get oneTypes() {\n    return ['one', '1'];\n  }\n  /**\n   * Returns the strategies: one, many, one-meta, many-meta\n   * @returns {string}\n   */\n\n\n  get strategy() {\n    let strategy = this.isMany() ? 'many' : 'one';\n\n    if (this.linkConfig.metadata) {\n      strategy += '-meta';\n    }\n\n    return strategy;\n  }\n  /**\n   * Returns the field name in the document where the actual relationships are stored.\n   * @returns string\n   */\n\n\n  get linkStorageField() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.linkStorageField;\n    }\n\n    return this.linkConfig.field;\n  }\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n\n\n  getLinkedCollection() {\n    return this.linkConfig.collection;\n  }\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n\n\n  isMany() {\n    return !this.isSingle();\n  }\n  /**\n   * If the relationship for this link contains metadata\n   */\n\n\n  isMeta() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isMeta();\n    }\n\n    return !!this.linkConfig.metadata;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isSingle() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isSingle();\n    }\n\n    return _.contains(this.oneTypes, this.linkConfig.type);\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isVirtual() {\n    return !!this.linkConfig.inversedBy;\n  }\n  /**\n   * Should return a single result.\n   */\n\n\n  isOneResult() {\n    return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n  }\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n\n\n  createLink(object) {\n    let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    let helperClass = this._getHelperClass();\n\n    return new helperClass(this, object, collection);\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _validateAndClean() {\n    if (!this.linkConfig.collection) {\n      throw new Meteor.Error('invalid-config', \"For the link \".concat(this.linkName, \" you did not provide a collection.\"));\n    }\n\n    if (typeof this.linkConfig.collection === 'string') {\n      const collectionName = this.linkConfig.collection;\n      this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-collection', \"Could not find a collection with the name: \".concat(collectionName));\n      }\n    }\n\n    if (this.isVirtual()) {\n      return this._prepareVirtual();\n    } else {\n      if (!this.linkConfig.type) {\n        this.linkConfig.type = 'one';\n      }\n\n      if (!this.linkConfig.field) {\n        this.linkConfig.field = this._generateFieldName();\n      } else {\n        if (this.linkConfig.field == this.linkName) {\n          throw new Meteor.Error('invalid-config', \"For the link \".concat(this.linkName, \" you must not use the same name for the field, otherwise it will cause conflicts when fetching data\"));\n        }\n      }\n    }\n\n    check(this.linkConfig, LinkConfigSchema);\n  }\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n\n\n  _prepareVirtual() {\n    const {\n      collection,\n      inversedBy\n    } = this.linkConfig;\n    let linker = collection.getLinker(inversedBy);\n\n    if (!linker) {\n      // it is possible that the collection doesn't have a linker created yet.\n      // so we will create it on startup after all links have been defined\n      Meteor.startup(() => {\n        linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n          throw new Meteor.Error(\"You tried setting up an inversed link in \\\"\".concat(this.mainCollection._name, \"\\\" pointing to collection: \\\"\").concat(collection._name, \"\\\" link: \\\"\").concat(inversedBy, \"\\\", but no such link was found. Maybe a typo ?\"));\n        } else {\n          this._setupVirtualConfig(linker);\n        }\n      });\n    } else {\n      this._setupVirtualConfig(linker);\n    }\n  }\n  /**\n   * @param linker\n   * @private\n   */\n\n\n  _setupVirtualConfig(linker) {\n    const virtualLinkConfig = linker.linkConfig;\n\n    if (!virtualLinkConfig) {\n      throw new Meteor.Error(\"There is no link-config for the related collection on \".concat(inversedBy, \". Make sure you added the direct links before specifying virtual ones.\"));\n    }\n\n    _.extend(this.linkConfig, {\n      metadata: virtualLinkConfig.metadata,\n      relatedLinker: linker\n    });\n  }\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n\n\n  _getHelperClass() {\n    switch (this.strategy) {\n      case 'many-meta':\n        return LinkManyMeta;\n\n      case 'many':\n        return LinkMany;\n\n      case 'one-meta':\n        return LinkOneMeta;\n\n      case 'one':\n        return LinkOne;\n    }\n\n    throw new Meteor.Error('invalid-strategy', \"\".concat(this.strategy, \" is not a valid strategy\"));\n  }\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n\n\n  _generateFieldName() {\n    let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n    let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n    switch (this.strategy) {\n      case 'many-meta':\n        return \"\".concat(defaultFieldPrefix, \"_metas\");\n\n      case 'many':\n        return \"\".concat(defaultFieldPrefix, \"_ids\");\n\n      case 'one-meta':\n        return \"\".concat(defaultFieldPrefix, \"_meta\");\n\n      case 'one':\n        return \"\".concat(defaultFieldPrefix, \"_id\");\n    }\n  }\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n\n\n  _handleReferenceRemovalForVirtualLinks() {\n    this.mainCollection.after.remove((userId, doc) => {\n      // this problem may occur when you do a .remove() before Meteor.startup()\n      if (!this.linkConfig.relatedLinker) {\n        console.warn(\"There was an error finding the link for removal for collection: \\\"\".concat(this.mainCollection._name, \"\\\" with link: \\\"\").concat(this.linkName, \"\\\". This may occur when you do a .remove() before Meteor.startup()\"));\n        return;\n      }\n\n      const accessor = this.createLink(doc);\n\n      _.each(accessor.fetchAsArray(), linkedObj => {\n        const {\n          relatedLinker\n        } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n        // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n        // if a removal happens before Meteor.startup this may fail\n\n        if (relatedLinker) {\n          let link = relatedLinker.createLink(linkedObj);\n\n          if (relatedLinker.isSingle()) {\n            link.unset();\n          } else {\n            link.remove(doc);\n          }\n        }\n      });\n    });\n  }\n\n  _initIndex() {\n    if (Meteor.isServer) {\n      let field = this.linkConfig.field;\n\n      if (this.linkConfig.metadata) {\n        field = field + '._id';\n      }\n\n      if (this.linkConfig.index) {\n        if (this.isVirtual()) {\n          throw new Meteor.Error('You cannot set index on an inversed link.');\n        }\n\n        let options;\n\n        if (this.linkConfig.unique) {\n          options = {\n            unique: true\n          };\n        }\n\n        this.mainCollection._ensureIndex({\n          [field]: 1\n        }, options);\n      } else {\n        if (this.linkConfig.unique) {\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set unique property on an inversed link.');\n          }\n\n          this.mainCollection._ensureIndex({\n            [field]: 1\n          }, {\n            unique: true,\n            sparse: true\n          });\n        }\n      }\n    }\n  }\n\n  _initAutoremove() {\n    if (!this.linkConfig.autoremove) {\n      return;\n    }\n\n    if (!this.isVirtual()) {\n      this.mainCollection.after.remove((userId, doc) => {\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: smartArguments.getIds(doc[this.linkStorageField])\n          }\n        });\n      });\n    } else {\n      this.mainCollection.after.remove((userId, doc) => {\n        const linker = this.mainCollection.getLink(doc, this.linkName);\n        const ids = linker.find({}, {\n          fields: {\n            _id: 1\n          }\n        }).fetch().map(item => item._id);\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: ids\n          }\n        });\n      });\n    }\n  }\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n\n\n  _initDenormalization() {\n    if (!this.linkConfig.denormalize || !Meteor.isServer) {\n      return;\n    }\n\n    const packageExists = !!Package['herteby:denormalize'];\n\n    if (!packageExists) {\n      throw new Meteor.Error('missing-package', \"Please add the herteby:denormalize package to your Meteor application in order to make caching work\");\n    }\n\n    const {\n      field,\n      body,\n      bypassSchema\n    } = this.linkConfig.denormalize;\n    let cacheConfig;\n    let referenceFieldSuffix = '';\n\n    if (this.isMeta()) {\n      referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n    }\n\n    if (this.isVirtual()) {\n      let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n      let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n      cacheConfig = {\n        type: type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: inversedLink.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    } else {\n      cacheConfig = {\n        type: this.linkConfig.type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: this.linkConfig.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    }\n\n    if (this.isVirtual()) {\n      Meteor.startup(() => {\n        this.mainCollection.cache(cacheConfig);\n      });\n    } else {\n      this.mainCollection.cache(cacheConfig);\n    }\n  }\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isDenormalized() {\n    return !!this.linkConfig.denormalize;\n  }\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isSubBodyDenormalized(body) {\n    const cacheBody = this.linkConfig.denormalize.body;\n\n    const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n    const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n    return _.difference(bodyFields, cacheBodyFields).length === 0;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"createSearchFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/lib/createSearchFilters.js                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => createSearchFilters,\n  createOne: () => createOne,\n  createOneVirtual: () => createOneVirtual,\n  createOneMeta: () => createOneMeta,\n  createOneMetaVirtual: () => createOneMetaVirtual,\n  createMany: () => createMany,\n  createManyVirtual: () => createManyVirtual,\n  createManyMeta: () => createManyMeta,\n  createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \".concat(strategy));\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \".concat(strategy));\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: object[fieldStorage]\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  const value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  let value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return {\n    [fieldStorage]: {\n      $elemMatch: filters\n    }\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"linkTypes\":{\"base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/base.js                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Link\n});\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 0);\nlet createSearchFilters;\nmodule.link(\"../lib/createSearchFilters\", {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 1);\n\nclass Link {\n  get config() {\n    return this.linker.linkConfig;\n  }\n\n  get isVirtual() {\n    return this.linker.isVirtual();\n  }\n\n  constructor(linker, object, collection) {\n    this.linker = linker;\n    this.object = object;\n    this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n    if (this.linker.isVirtual()) {\n      this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n    } else {\n      this.linkStorageField = this.config.field;\n    }\n  }\n  /**\n   * Gets the stored link information value\n   * @returns {*}\n   */\n\n\n  value() {\n    if (this.isVirtual) {\n      throw new Meteor.Error('You can only take the value from the main link.');\n    }\n\n    return this.object[this.linkStorageField];\n  }\n  /**\n   * Finds linked data.\n   *\n   * @param filters\n   * @param options\n   * @returns {*}\n   * @param userId\n   */\n\n\n  find() {\n    let filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    let linker = this.linker;\n    const linkedCollection = this.linkedCollection;\n    let $metaFilters;\n\n    if (filters.$meta) {\n      $metaFilters = filters.$meta;\n      delete filters.$meta;\n    }\n\n    const searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n    let appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n    // happens due to recursive importing of modules\n    // TODO: find another way to do this\n\n\n    if (linkedCollection.find) {\n      return linkedCollection.find(appliedFilters, options, userId);\n    } else {\n      return linkedCollection.default.find(appliedFilters, options, userId);\n    }\n  }\n  /**\n   * @param filters\n   * @param options\n   * @param others\n   * @returns {*|{content}|any}\n   */\n\n\n  fetch(filters, options) {\n    for (var _len = arguments.length, others = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      others[_key - 2] = arguments[_key];\n    }\n\n    let result = this.find(filters, options, ...others).fetch();\n\n    if (this.linker.isOneResult()) {\n      return _.first(result);\n    }\n\n    return result;\n  }\n  /**\n   * This is just like fetch() but forces to get an array even if it's single result\n   * \n   * @param {*} filters \n   * @param {*} options \n   * @param  {...any} others \n   */\n\n\n  fetchAsArray(filters, options) {\n    for (var _len2 = arguments.length, others = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      others[_key2 - 2] = arguments[_key2];\n    }\n\n    return this.find(filters, options, ...others).fetch();\n  }\n  /**\n   * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n   * We use clean to make it an empty array by default.\n   */\n\n\n  clean() {}\n  /**\n   * Extracts a single id\n   */\n\n\n  identifyId(what, saveToDatabase) {\n    return SmartArgs.getId(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Extracts the ids of object(s) or strings and returns an array.\n   */\n\n\n  identifyIds(what, saveToDatabase) {\n    return SmartArgs.getIds(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Checks when linking data, if the ids are valid with the linked collection.\n   * @throws Meteor.Error\n   * @param ids\n   *\n   * @protected\n   */\n\n\n  _validateIds(ids) {\n    if (!_.isArray(ids)) {\n      ids = [ids];\n    }\n\n    const validIds = this.linkedCollection.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).fetch().map(doc => doc._id);\n\n    if (validIds.length != ids.length) {\n      throw new Meteor.Error('not-found', \"You tried to create links with non-existing id(s) inside \\\"\".concat(this.linkedCollection._name, \"\\\": \").concat(_.difference(ids, validIds).join(', ')));\n    }\n  }\n  /**\n   * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n   *\n   * @param action\n   * @param what\n   * @param metadata\n   *\n   * @protected\n   */\n\n\n  _virtualAction(action, what, metadata) {\n    const linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n    if (what === undefined) {\n      const reversedLink = linker.createLink(this.fetch());\n      reversedLink.unset();\n      return;\n    }\n\n    if (!_.isArray(what)) {\n      what = [what];\n    }\n\n    what = _.map(what, element => {\n      if (!_.isObject(element)) {\n        return linker.mainCollection.findOne(element);\n      } else {\n        if (!element._id) {\n          const elementId = linker.mainCollection.insert(element);\n\n          _.extend(element, linker.mainCollection.findOne(elementId));\n        }\n\n        return element;\n      }\n    });\n    return _.map(what, element => {\n      const reversedLink = linker.createLink(element);\n\n      if (action == 'metadata') {\n        if (linker.isSingle()) {\n          return reversedLink.metadata(metadata);\n        } else {\n          return reversedLink.metadata(this.object, metadata);\n        }\n      } else if (action == 'add' || action == 'set') {\n        if (linker.isSingle()) {\n          reversedLink.set(this.object, metadata);\n        } else {\n          reversedLink.add(this.object, metadata);\n        }\n      } else {\n        if (linker.isSingle()) {\n          reversedLink.unset();\n        } else {\n          reversedLink.remove(this.object);\n        }\n      }\n    });\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkMany.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkMany.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkMany\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkMany extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n    this.clean();\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    const field = this.linkStorageField; // update the field\n\n    this.object[field] = _.union(this.object[field], _ids); // update the db\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   */\n\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n    this.clean();\n    const field = this.linkStorageField;\n\n    const _ids = this.identifyIds(what); // update the field\n\n\n    this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id)); // update the db\n\n    let modifier = {\n      $pullAll: {\n        [field]: _ids\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkManyMeta.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkManyMeta.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkManyMeta\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkManyMeta extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * @param what\n   * @param metadata\n   */\n\n\n  add(what) {\n    let metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    let field = this.linkStorageField;\n    this.object[field] = this.object[field] || [];\n    let metadatas = [];\n\n    _.each(_ids, _id => {\n      let localMetadata = _.clone(metadata);\n\n      localMetadata._id = _id;\n      this.object[field].push(localMetadata);\n      metadatas.push(localMetadata);\n    });\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: metadatas\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   * @param extendMetadata\n   */\n\n\n  metadata(what, extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', what, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (what === undefined) {\n      return this.object[field];\n    }\n\n    if (_.isArray(what)) {\n      throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n    }\n\n    const _id = this.identifyId(what);\n\n    let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n\n    if (extendMetadata === undefined) {\n      return existingMetadata;\n    } else {\n      _.extend(existingMetadata, extendMetadata);\n\n      let subfield = field + '._id';\n      let subfieldUpdate = field + '.$';\n      this.linker.mainCollection.update({\n        _id: this.object._id,\n        [subfield]: _id\n      }, {\n        $set: {\n          [subfieldUpdate]: existingMetadata\n        }\n      });\n    }\n\n    return this;\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what);\n\n    let field = this.linkStorageField;\n    this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n    let modifier = {\n      $pull: {\n        [field]: {\n          _id: {\n            $in: _ids\n          }\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOne.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOne.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkOne\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOne extends Link {\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    const _id = this.identifyId(what, true);\n\n    this._validateIds([_id]);\n\n    this.object[field] = _id;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: _id\n      }\n    });\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = null;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: null\n      }\n    });\n    return this;\n  }\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOneMeta.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOneMeta.js                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkOneMeta\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOneMeta extends Link {\n  set(what) {\n    let metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    metadata._id = this.identifyId(what, true);\n\n    this._validateIds([metadata._id]);\n\n    this.object[field] = metadata;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: metadata\n      }\n    });\n    return this;\n  }\n\n  metadata(extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', undefined, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (!extendMetadata) {\n      return this.object[field];\n    } else {\n      _.extend(this.object[field], extendMetadata);\n\n      this.linker.mainCollection.update(this.object._id, {\n        $set: {\n          [field]: this.object[field]\n        }\n      });\n    }\n\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset');\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = {};\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: {}\n      }\n    });\n    return this;\n  }\n\n  add(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"smartArguments.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/lib/smartArguments.js                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(new class {\n  getIds(what, options) {\n    if (_.isArray(what)) {\n      return _.map(what, subWhat => {\n        return this.getId(subWhat, options);\n      });\n    } else {\n      return [this.getId(what, options)];\n    }\n\n    throw new Meteor.Error('invalid-type', \"Unrecognized type: \".concat(typeof what, \" for managing links\"));\n  }\n\n  getId(what, options) {\n    if (typeof what === 'string') {\n      return what;\n    }\n\n    if (typeof what === 'object') {\n      if (!what._id && options.saveToDatabase) {\n        what._id = options.collection.insert(what);\n      }\n\n      return what._id;\n    }\n  }\n\n}());\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"namedQuery\":{\"namedQuery.base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.base.js                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\n\nclass NamedQueryBase {\n  constructor(name, collection, body) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    this.isNamedQuery = true;\n    this.queryName = name;\n\n    if (_.isFunction(body)) {\n      this.resolver = body;\n    } else {\n      this.body = deepClone(body);\n    }\n\n    this.subscriptionHandle = null;\n    this.params = options.params || {};\n    this.options = options;\n    this.collection = collection;\n    this.isExposed = false;\n  }\n\n  get name() {\n    return \"named_query_\".concat(this.queryName);\n  }\n\n  get isResolver() {\n    return !!this.resolver;\n  }\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams(params) {\n    params = params || this.params;\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    try {\n      this._validate(validateParams, params);\n    } catch (validationError) {\n      console.error(\"Invalid parameters supplied to the query \\\"\".concat(this.queryName, \"\\\"\\n\"), validationError);\n      throw validationError; // rethrow\n    }\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _objectSpread2.default)({}, this.options, {\n      params\n    }));\n    clone.cacher = this.cacher;\n\n    if (this.exposeConfig) {\n      clone.exposeConfig = this.exposeConfig;\n    }\n\n    return clone;\n  }\n  /**\n   * @param {function|object} validator\n   * @param {object} params\n   * @private\n   */\n\n\n  _validate(validator, params) {\n    if (_.isFunction(validator)) {\n      validator.call(null, params);\n    } else {\n      check(params, validator);\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.client.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet CountSubscription;\nmodule.link(\"../query/counts/countSubscription\", {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.link(\"../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveFetch;\nmodule.link(\"../query/lib/recursiveFetch.js\", {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 2);\nlet prepareForProcess;\nmodule.link(\"../query/lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.link(\"../query/lib/callWithPromise\", {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.link(\"./namedQuery.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\nlet LocalCollection;\nmodule.link(\"meteor/minimongo\", {\n  LocalCollection(v) {\n    LocalCollection = v;\n  }\n\n}, 7);\nlet intersectDeep;\nmodule.link(\"../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 8);\nmodule.exportDefault(class extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n    }\n\n    this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n    }\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(this.params, callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  async fetchSync() {\n    if (this.subscriptionHandle) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name, this.params);\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  async fetchOneSync() {\n    return _.first((await this.fetchSync()));\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    if (!this.subscriptionHandle) {\n      const callback = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...arguments));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  async getCountSync() {\n    if (this._counter) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name + '.count', this.params);\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', this.params, callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, this.params, callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let body = this.body;\n\n    if (this.params.$body) {\n      body = intersectDeep(body, this.params.$body);\n    }\n\n    body = prepareForProcess(body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), undefined, {\n      scoped: this.options.scoped,\n      subscriptionHandle: this.subscriptionHandle\n    });\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet NamedQueryClient;\nmodule.link(\"./namedQuery.client\", {\n  default(v) {\n    NamedQueryClient = v;\n  }\n\n}, 0);\nlet NamedQueryServer;\nmodule.link(\"./namedQuery.server\", {\n  default(v) {\n    NamedQueryServer = v;\n  }\n\n}, 1);\nlet NamedQuery;\n\nif (Meteor.isServer) {\n  NamedQuery = NamedQueryServer;\n} else {\n  NamedQuery = NamedQueryClient;\n}\n\nmodule.exportDefault(NamedQuery);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.server.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet prepareForProcess;\nmodule.link(\"../query/lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 0);\nlet Base;\nmodule.link(\"./namedQuery.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet MemoryResultCacher;\nmodule.link(\"./cache/MemoryResultCacher\", {\n  default(v) {\n    MemoryResultCacher = v;\n  }\n\n}, 3);\nlet intersectDeep;\nmodule.link(\"../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 4);\nmodule.exportDefault(class extends Base {\n  /**\n   * Retrieves the data.\n   * @returns {*}\n   */\n  fetch(context) {\n    this._performSecurityChecks(context, this.params);\n\n    if (this.isResolver) {\n      return this._fetchResolverData(context);\n    } else {\n      body = deepClone(this.body);\n\n      if (this.params.$body) {\n        body = intersectDeep(body, this.params.$body);\n      } // we must apply emobdyment here\n\n\n      this.doEmbodimentIfItApplies(body);\n      const query = this.collection.createQuery(deepClone(body), {\n        params: deepClone(this.params)\n      });\n\n      if (this.cacher) {\n        const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          query\n        });\n      }\n\n      return query.fetch();\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    return _.first(this.fetch(...arguments));\n  }\n  /**\n   * Gets the count of matching elements.\n   *\n   * @returns {any}\n   */\n\n\n  getCount(context) {\n    this._performSecurityChecks(context, this.params);\n\n    const countCursor = this.getCursorForCounting();\n\n    if (this.cacher) {\n      const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        countCursor\n      });\n    }\n\n    return countCursor.count();\n  }\n  /**\n   * Returns the cursor for counting\n   * This is most likely used for counts cursor\n   */\n\n\n  getCursorForCounting() {\n    let body = deepClone(this.body);\n    this.doEmbodimentIfItApplies(body);\n    body = prepareForProcess(body, this.params);\n    return this.collection.find(body.$filters || {}, {\n      fields: {\n        _id: 1\n      }\n    });\n  }\n  /**\n   * @param cacher\n   */\n\n\n  cacheResults(cacher) {\n    if (!cacher) {\n      cacher = new MemoryResultCacher();\n    }\n\n    this.cacher = cacher;\n  }\n  /**\n   * Configure resolve. This doesn't actually call the resolver, it just sets it\n   * @param fn\n   */\n\n\n  resolve(fn) {\n    if (!this.isResolver) {\n      throw new Meteor.Error('invalid-call', \"You cannot use resolve() on a non resolver NamedQuery\");\n    }\n\n    this.resolver = fn;\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchResolverData(context) {\n    const resolver = this.resolver;\n    const self = this;\n    const query = {\n      fetch() {\n        return resolver.call(context, self.params);\n      }\n\n    };\n\n    if (this.cacher) {\n      const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        query\n      });\n    }\n\n    return query.fetch();\n  }\n  /**\n   * @param context Meteor method/publish context\n   * @param params\n   *\n   * @private\n   */\n\n\n  _performSecurityChecks(context, params) {\n    if (context && this.exposeConfig) {\n      this._callFirewall(context, context.userId, params);\n    }\n\n    this.doValidateParams(params);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"store.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/store.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(new class {\n  constructor() {\n    this.storage = {};\n  }\n\n  add(key, value) {\n    if (this.storage[key]) {\n      throw new Meteor.Error('invalid-name', \"You have previously defined another namedQuery with the same name: \\\"\".concat(key, \"\\\". Named Query names should be unique.\"));\n    }\n\n    this.storage[key] = value;\n  }\n\n  get(key) {\n    return this.storage[key];\n  }\n\n  getAll() {\n    return this.storage;\n  }\n\n}());\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache\":{\"BaseResultCacher.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/BaseResultCacher.js                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => BaseResultCacher\n});\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nclass BaseResultCacher {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.config = config;\n  }\n  /**\n   * @param queryName\n   * @param params\n   * @returns {string}\n   */\n\n\n  generateQueryId(queryName, params) {\n    return \"\".concat(queryName, \"::\").concat(EJSON.stringify(params));\n  }\n  /**\n   * Dummy function\n   */\n\n\n  fetch(cacheId, _ref) {\n    let {\n      query,\n      countCursor\n    } = _ref;\n    throw 'Not implemented';\n  }\n  /**\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  static fetchData(_ref2) {\n    let {\n      query,\n      countCursor\n    } = _ref2;\n\n    if (query) {\n      return query.fetch();\n    } else {\n      return countCursor.count();\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MemoryResultCacher.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/MemoryResultCacher.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet cloneDeep;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 1);\nlet BaseResultCacher;\nmodule.link(\"./BaseResultCacher\", {\n  default(v) {\n    BaseResultCacher = v;\n  }\n\n}, 2);\nconst DEFAULT_TTL = 60000;\n/**\n * This is a very basic in-memory result caching functionality\n */\n\nclass MemoryResultCacher extends BaseResultCacher {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(config);\n    this.store = {};\n  }\n  /**\n   * @param cacheId\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  fetch(cacheId, _ref) {\n    let {\n      query,\n      countCursor\n    } = _ref;\n    const cacheData = this.store[cacheId];\n\n    if (cacheData !== undefined) {\n      return cloneDeep(cacheData);\n    }\n\n    const data = BaseResultCacher.fetchData({\n      query,\n      countCursor\n    });\n    this.storeData(cacheId, data);\n    return data;\n  }\n  /**\n   * @param cacheId\n   * @param data\n   */\n\n\n  storeData(cacheId, data) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.store[cacheId] = cloneDeep(data);\n    Meteor.setTimeout(() => {\n      delete this.store[cacheId];\n    }, ttl);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"query\":{\"query.base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.base.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => QueryBase\n});\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nclass QueryBase {\n  constructor(collection, body) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.isGlobalQuery = true;\n    this.collection = collection;\n    this.body = deepClone(body);\n    this.params = options.params || {};\n    this.options = options;\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    return new this.constructor(this.collection, deepClone(this.body), (0, _objectSpread2.default)({\n      params\n    }, this.options));\n  }\n\n  get name() {\n    return \"exposure_\".concat(this.collection._name);\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams() {\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    if (_.isFunction(validateParams)) {\n      validateParams.call(null, this.params);\n    } else {\n      check(this.params);\n    }\n  }\n  /**\n   * Merges the params with previous params.\n   *\n   * @param params\n   * @returns {Query}\n   */\n\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.client.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.link(\"./counts/countSubscription\", {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.link(\"./lib/recursiveFetch.js\", {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.link(\"./lib/callWithPromise\", {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  async fetchSync() {\n    this.doValidateParams();\n\n    if (this.subscriptionHandle) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  async fetchOneSync() {\n    return _.first((await this.fetchSync()));\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    if (!this.subscriptionHandle) {\n      const callback = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...arguments));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  async getCountSync() {\n    if (this._counter) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet QueryClient;\nmodule.link(\"./query.client\", {\n  default(v) {\n    QueryClient = v;\n  }\n\n}, 0);\nlet QueryServer;\nmodule.link(\"./query.server\", {\n  default(v) {\n    QueryServer = v;\n  }\n\n}, 1);\nlet Query;\n\nif (Meteor.isServer) {\n  Query = QueryServer;\n} else {\n  Query = QueryClient;\n}\n\nmodule.exportDefault(Query);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.server.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Query\n});\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 1);\nlet hypernova;\nmodule.link(\"./hypernova/hypernova.js\", {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 2);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 3);\n\nclass Query extends Base {\n  /**\n   * Retrieves the data.\n   * @param context\n   * @returns {*}\n   */\n  fetch() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n    return hypernova(node, context.userId, {\n      params: this.params\n    });\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    return _.first(this.fetch(...arguments));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @returns {integer}\n   */\n\n\n  getCount() {\n    return this.collection.find(this.body.$filters || {}, {}).count();\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"counts\":{\"collection.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/collection.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.link(\"./constants\", {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(new Mongo.Collection(COUNTS_COLLECTION_CLIENT));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/constants.js                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  COUNTS_COLLECTION_CLIENT: () => COUNTS_COLLECTION_CLIENT\n});\nconst COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"countSubscription.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/countSubscription.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => CountSubscription\n});\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Counts;\nmodule.link(\"./collection\", {\n  default(v) {\n    Counts = v;\n  }\n\n}, 4);\nlet createFauxSubscription;\nmodule.link(\"./createFauxSubscription\", {\n  default(v) {\n    createFauxSubscription = v;\n  }\n\n}, 5);\nlet prepareForProcess;\nmodule.link(\"../lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 6);\nlet NamedQueryBase;\nmodule.link(\"../../namedQuery/namedQuery.base\", {\n  default(v) {\n    NamedQueryBase = v;\n  }\n\n}, 7);\n\nclass CountSubscription {\n  /**\n   * @param {*} query - The query to use when fetching counts\n   */\n  constructor(query) {\n    this.accessToken = new ReactiveVar(null);\n    this.fauxHandle = null;\n    this.query = query;\n  }\n  /**\n   * Starts a subscription request for reactive counts.\n   *\n   * @param {*} arg - The argument to pass to {name}.count.subscribe\n   * @param {*} callback\n   */\n\n\n  subscribe(arg, callback) {\n    // Don't try to resubscribe if arg hasn't changed\n    if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n      return this.fauxHandle;\n    }\n\n    this.accessToken.set(null);\n    this.lastArgs = arg;\n    Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n      if (!this._markedForUnsubscribe) {\n        this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n        this.accessToken.set(token);\n        this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n      }\n\n      this._markedForUnsubscribe = false;\n    });\n    this.fauxHandle = createFauxSubscription(this);\n    return this.fauxHandle;\n  }\n  /**\n   * Unsubscribes from the count endpoint, if there is such a subscription.\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.disconnectComputation.stop();\n      this.subscriptionHandle.stop();\n    } else {\n      // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n      // so set a flag to stop the subscription from being created\n      this._markedForUnsubscribe = true;\n    }\n\n    this.accessToken.set(null);\n    this.fauxHandle = null;\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n   *\n   * @returns {Number|null} - Current document count\n   */\n\n\n  getCount() {\n    const id = this.accessToken.get();\n    if (id === null) return null;\n    const doc = Counts.findOne(id);\n    return doc.count;\n  }\n  /**\n   * All session info gets deleted when the server goes down, so when the client attempts to\n   * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n   *\n   * This function prevents that by manually stopping and restarting the subscription when the\n   * connection to the server is lost.\n   */\n\n\n  handleDisconnect() {\n    const status = Meteor.status();\n\n    if (!status.connected) {\n      this._markedForResume = true;\n      this.fauxHandle = null;\n      this.subscriptionHandle.stop();\n    }\n\n    if (status.connected && this._markedForResume) {\n      this._markedForResume = false;\n      this.subscribe(this.lastArgs);\n    }\n  }\n  /**\n   * Returns whether or not a subscription request has been made.\n   */\n\n\n  isSubscribed() {\n    return this.accessToken.get() !== null;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createFauxSubscription.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/createFauxSubscription.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(countManager => ({\n  ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n  stop: () => countManager.unsubscribe()\n}));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hypernova\":{\"aggregateSearchFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/aggregateSearchFilters.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(\"Invalid linker type: \".concat(this.linker.type));\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n      return {\n        _id: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembleAggregateResults.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembleAggregateResults.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.link(\"./lib/cleanObjectForMetaFilters\", {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, aggregateResults, metaFilters) {\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const linkName = childCollectionNode.linkName;\n  const isMeta = linker.isMeta();\n  const isMany = linker.isMany();\n  let allResults = [];\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(childCollectionNode.parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n    });\n  }\n\n  if (isMeta && isMany) {\n    // This case is treated differently because we get an array response from the pipeline.\n    _.each(childCollectionNode.parent.results, parentResult => {\n      parentResult[linkName] = parentResult[linkName] || [];\n\n      const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n        return _.contains(aggregateResult._id, parentResult._id);\n      });\n\n      if (eligibleAggregateResults.length) {\n        const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n\n        _.each(datas, data => {\n          _.each(data, item => {\n            parentResult[linkName].push(item);\n          });\n        });\n      }\n    });\n\n    _.each(aggregateResults, aggregateResult => {\n      _.each(aggregateResult.data, item => allResults.push(item));\n    });\n  } else {\n    let comparator;\n\n    if (isMany) {\n      comparator = (aggregateResult, result) => _.contains(aggregateResult._id, result._id);\n    } else {\n      comparator = (aggregateResult, result) => aggregateResult._id == result._id;\n    }\n\n    const childLinkName = childCollectionNode.linkName;\n    const parentResults = childCollectionNode.parent.results;\n    parentResults.forEach(parentResult => {\n      // We are now finding the data from the pipeline that is related to the _id of the parent\n      const eligibleAggregateResults = aggregateResults.filter(aggregateResult => comparator(aggregateResult, parentResult));\n      eligibleAggregateResults.forEach(aggregateResult => {\n        if (Array.isArray(parentResult[childLinkName])) {\n          parentResult[childLinkName].push(...aggregateResult.data);\n        } else {\n          parentResult[childLinkName] = [...aggregateResult.data];\n        }\n      });\n    });\n    aggregateResults.forEach(aggregateResult => {\n      allResults.push(...aggregateResult.data);\n    });\n  }\n\n  childCollectionNode.results = allResults;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembler.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembler.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet createSearchFilters;\nmodule.link(\"../../links/lib/createSearchFilters\", {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.link(\"./lib/cleanObjectForMetaFilters\", {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nmodule.exportDefault((childCollectionNode, _ref) => {\n  let {\n    limit,\n    skip,\n    metaFilters\n  } = _ref;\n\n  if (childCollectionNode.results.length === 0) {\n    return;\n  }\n\n  const parent = childCollectionNode.parent;\n  const linker = childCollectionNode.linker;\n  const strategy = linker.strategy;\n  const isSingle = linker.isSingle();\n  const isMeta = linker.isMeta();\n  const fieldStorage = linker.linkStorageField; // cleaning the parent results from a child\n  // this may be the wrong approach but it works for now\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n    });\n  }\n\n  const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n  if (strategy === 'one') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[parentResult[fieldStorage]], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      let data = [];\n      parentResult[fieldStorage].forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'one-meta') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      const _id = parentResult[fieldStorage]._id;\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[_id], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many-meta') {\n    parent.results.forEach(parentResult => {\n      const _ids = _.pluck(parentResult[fieldStorage], '_id');\n\n      let data = [];\n\n      _ids.forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n});\n\nfunction filterAssembledData(data, _ref2) {\n  let {\n    limit,\n    skip\n  } = _ref2;\n\n  if (limit && Array.isArray(data)) {\n    return data.slice(skip, limit);\n  }\n\n  return data;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buildAggregatePipeline.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/buildAggregatePipeline.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.link(\"./constants\", {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  let containsDottedFields = false;\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const collection = childCollectionNode.collection;\n  let pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  let _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  let dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, (value, field) => {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    let $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice\n        }\n      }\n    });\n  }\n\n  return {\n    pipeline,\n    containsDottedFields\n  };\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/constants.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  SAFE_DOTTED_FIELD_REPLACEMENT: () => SAFE_DOTTED_FIELD_REPLACEMENT\n});\nconst SAFE_DOTTED_FIELD_REPLACEMENT = '___';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hypernova.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/hypernova.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => hypernovaInit\n});\nlet applyProps;\nmodule.link(\"../lib/applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet prepareForDelivery;\nmodule.link(\"../lib/prepareForDelivery.js\", {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 1);\nlet storeHypernovaResults;\nmodule.link(\"./storeHypernovaResults.js\", {\n  default(v) {\n    storeHypernovaResults = v;\n  }\n\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n  _.each(collectionNode.collectionNodes, childCollectionNode => {\n    let {\n      filters,\n      options\n    } = applyProps(childCollectionNode);\n    storeHypernovaResults(childCollectionNode, userId);\n    hypernova(childCollectionNode, userId);\n  });\n}\n\nfunction hypernovaInit(collectionNode, userId) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const bypassFirewalls = config.bypassFirewalls || false;\n  const params = config.params || {};\n  let {\n    filters,\n    options\n  } = applyProps(collectionNode);\n  const collection = collectionNode.collection;\n  collectionNode.results = collection.find(filters, options, userId).fetch();\n  const userIdToPass = config.bypassFirewalls ? undefined : userId;\n  hypernova(collectionNode, userIdToPass);\n  prepareForDelivery(collectionNode, params);\n  return collectionNode.results;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"storeHypernovaResults.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/storeHypernovaResults.js                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => storeHypernovaResults\n});\nlet applyProps;\nmodule.link(\"../lib/applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet AggregateFilters;\nmodule.link(\"./aggregateSearchFilters.js\", {\n  default(v) {\n    AggregateFilters = v;\n  }\n\n}, 1);\nlet assemble;\nmodule.link(\"./assembler.js\", {\n  default(v) {\n    assemble = v;\n  }\n\n}, 2);\nlet assembleAggregateResults;\nmodule.link(\"./assembleAggregateResults.js\", {\n  default(v) {\n    assembleAggregateResults = v;\n  }\n\n}, 3);\nlet buildAggregatePipeline;\nmodule.link(\"./buildAggregatePipeline.js\", {\n  default(v) {\n    buildAggregatePipeline = v;\n  }\n\n}, 4);\nlet snapBackDottedFields;\nmodule.link(\"./lib/snapBackDottedFields\", {\n  default(v) {\n    snapBackDottedFields = v;\n  }\n\n}, 5);\n\nfunction storeHypernovaResults(childCollectionNode, userId) {\n  if (childCollectionNode.parent.results.length === 0) {\n    return childCollectionNode.results = [];\n  }\n\n  let {\n    filters,\n    options\n  } = applyProps(childCollectionNode);\n  const metaFilters = filters.$meta;\n  const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n  delete filters.$meta;\n  const linker = childCollectionNode.linker;\n  const isVirtual = linker.isVirtual();\n  const collection = childCollectionNode.collection;\n\n  _.extend(filters, aggregateFilters.create()); // if it's not virtual then we retrieve them and assemble them here.\n\n\n  if (!isVirtual) {\n    const filteredOptions = _.omit(options, 'limit');\n\n    childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n    assemble(childCollectionNode, (0, _objectSpread2.default)({}, options, {\n      metaFilters\n    }));\n  } else {\n    // virtuals arrive here\n    let {\n      pipeline,\n      containsDottedFields\n    } = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n    let aggregateResults = collection.aggregate(pipeline);\n    /**\n     * If in aggregation it contains '.', we replace it with a custom string '___'\n     * And then after aggregation is complete we need to snap-it back to how it was.\n     */\n\n    if (containsDottedFields) {\n      snapBackDottedFields(aggregateResults);\n    }\n\n    assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanObjectForMetaFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(function (object, field, metaFiltersTest) {\n  if (object[field]) {\n    if (_.isArray(object[field])) {\n      object[field] = object[field].filter(metaFiltersTest);\n    } else {\n      if (!metaFiltersTest(object[field])) {\n        object[field] = null;\n      }\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"snapBackDottedFields.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/snapBackDottedFields.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.link(\"../constants\", {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n  aggregationResult.forEach(result => {\n    result.data = result.data.map(document => {\n      _.each(document, (value, key) => {\n        if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n          document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n          delete document[key];\n        }\n      });\n\n      return dot.object(document);\n    });\n  });\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"applyProps.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/applyProps.js                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n  let filters = _.extend({}, node.props.$filters);\n\n  let options = _.extend({}, node.props.$options);\n\n  options = _.omit(options, ...restrictOptions);\n  options.fields = options.fields || {};\n  node.applyFields(filters, options);\n  return {\n    filters,\n    options\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callWithPromise.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/callWithPromise.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault((method, myParameters) => {\n  return new Promise((resolve, reject) => {\n    Meteor.call(method, myParameters, (err, res) => {\n      if (err) reject(err.reason || 'Something went wrong.');\n      resolve(res);\n    });\n  });\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createGraph.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/createGraph.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  specialFields: () => specialFields,\n  createNodes: () => createNodes,\n  addFieldNode: () => addFieldNode,\n  getNodeNamespace: () => getNodeNamespace\n});\nlet CollectionNode;\nmodule.link(\"../nodes/collectionNode.js\", {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 0);\nlet FieldNode;\nmodule.link(\"../nodes/fieldNode.js\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 1);\nlet ReducerNode;\nmodule.link(\"../nodes/reducerNode.js\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 2);\nlet dotize;\nmodule.link(\"./dotize.js\", {\n  default(v) {\n    dotize = v;\n  }\n\n}, 3);\nlet createReducers;\nmodule.link(\"../reducers/lib/createReducers\", {\n  default(v) {\n    createReducers = v;\n  }\n\n}, 4);\nconst specialFields = ['$filters', '$options', '$postFilters', '$postOptions', '$postFilter'];\n\nfunction createNodes(root) {\n  // this is a fix for phantomjs tests (don't really understand it.)\n  if (!_.isObject(root.body)) {\n    return;\n  }\n\n  _.each(root.body, (body, fieldName) => {\n    if (!body) {\n      return;\n    } // if it's a prop\n\n\n    if (_.contains(specialFields, fieldName)) {\n      root.addProp(fieldName, body);\n      return;\n    } // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n    // TODO: find another way to do this\n\n\n    if (root.collection.default) {\n      root.collection = root.collection.default;\n    } // checking if it is a link.\n\n\n    let linker = root.collection.getLinker(fieldName);\n\n    if (linker) {\n      // check if it is a cached link\n      // if yes, then we need to explicitly define this at collection level\n      // so when we transform the data for delivery, we move it to the link name\n      if (linker.isDenormalized()) {\n        if (linker.isSubBodyDenormalized(body)) {\n          handleDenormalized(root, linker, body, fieldName);\n          return;\n        }\n      }\n\n      let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n      root.add(subroot, linker);\n      createNodes(subroot);\n      return;\n    } // checking if it's a reducer\n\n\n    const reducer = root.collection.getReducer(fieldName);\n\n    if (reducer) {\n      let reducerNode = new ReducerNode(fieldName, reducer);\n      root.add(reducerNode);\n    } // it's most likely a field then\n\n\n    addFieldNode(body, fieldName, root);\n  });\n\n  createReducers(root);\n\n  if (root.fieldNodes.length === 0) {\n    root.add(new FieldNode('_id', 1));\n  }\n}\n\nfunction isProjectionOperatorExpression(body) {\n  if (_.isObject(body)) {\n    const keys = _.keys(body);\n\n    return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\n  }\n\n  return false;\n}\n/**\n * @param body\n * @param fieldName\n * @param root\n */\n\n\nfunction addFieldNode(body, fieldName, root) {\n  // it's not a link and not a special variable => we assume it's a field\n  if (_.isObject(body)) {\n    if (!isProjectionOperatorExpression(body)) {\n      let dotted = dotize.convert({\n        [fieldName]: body\n      });\n\n      _.each(dotted, (value, key) => {\n        root.add(new FieldNode(key, value));\n      });\n    } else {\n      root.add(new FieldNode(fieldName, body, true));\n    }\n  } else {\n    let fieldNode = new FieldNode(fieldName, body);\n    root.add(fieldNode);\n  }\n}\n\nfunction getNodeNamespace(node) {\n  const parts = [];\n  let n = node;\n\n  while (n) {\n    const name = n.linker ? n.linker.linkName : n.collection._name;\n    parts.push(name); // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\n\n    n = n.parent;\n  }\n\n  return parts.reverse().join('_');\n}\n\nmodule.exportDefault(function (collection, body) {\n  let root = new CollectionNode(collection, body);\n  createNodes(root);\n  return root;\n});\n;\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\n\nfunction handleDenormalized(root, linker, body, fieldName) {\n  Object.assign(body, {\n    _id: 1\n  });\n  const cacheField = linker.linkConfig.denormalize.field;\n  root.snapCache(cacheField, fieldName); // if it's one and direct also include the link storage\n\n  if (!linker.isMany() && !linker.isVirtual()) {\n    addFieldNode(1, linker.linkStorageField, root);\n  }\n\n  addFieldNode(body, cacheField, root);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"dotize.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/dotize.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(dotize = {});\n\ndotize.convert = function (obj, prefix) {\n  if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n    if (prefix) {\n      var newObj = {};\n      newObj[prefix] = obj;\n      return newObj;\n    } else {\n      return obj;\n    }\n  }\n\n  var newObj = {};\n\n  function recurse(o, p, isArrayItem) {\n    for (var f in o) {\n      if (o[f] && typeof o[f] === \"object\") {\n        if (Array.isArray(o[f])) {\n          if (isEmptyArray(o[f])) {\n            newObj[getFieldName(f, p, true)] = o[f]; // empty array\n          } else {\n            newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n          }\n        } else {\n          if (isArrayItem) {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p, true)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n            }\n          } else {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p)); // object\n            }\n          }\n        }\n      } else {\n        if (isArrayItem || isNumber(f)) {\n          newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n        } else {\n          newObj[getFieldName(f, p)] = o[f]; // primitive\n        }\n      }\n    }\n\n    if (isEmptyObj(newObj)) return obj;\n    return newObj;\n  }\n\n  function isNumber(f) {\n    return !isNaN(parseInt(f));\n  }\n\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      if (Object.hasOwnProperty.call(obj, prop)) return false;\n    }\n\n    return true;\n  }\n\n  function isEmptyArray(o) {\n    if (Array.isArray(o) && o.length == 0) return true;\n    return false;\n  }\n\n  function getFieldName(field, prefix, isArrayItem, isArray) {\n    if (isArray) return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);else if (isArrayItem) return (prefix ? prefix : \"\") + \"[\" + field + \"]\";else return (prefix ? prefix + \".\" : \"\") + field;\n  }\n\n  return recurse(obj, prefix, Array.isArray(obj));\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersectDeep.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/intersectDeep.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (allowedBody, clientBody) {\n  const allowedBodyDot = _.keys(dot.dot(allowedBody));\n\n  const clientBodyDot = _.keys(dot.dot(clientBody));\n\n  const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n  const build = {};\n  intersection.forEach(intersectedField => {\n    build[intersectedField] = 1;\n  });\n  return dot.object(build);\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForDelivery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForDelivery.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  applyPostFilters: () => applyPostFilters,\n  applyPostOptions: () => applyPostOptions,\n  getResultsArray: () => getResultsArray,\n  removeLinkStorages: () => removeLinkStorages,\n  storeOneResults: () => storeOneResults,\n  assembleMetadata: () => assembleMetadata\n});\nlet applyReducers;\nmodule.link(\"../reducers/lib/applyReducers\", {\n  default(v) {\n    applyReducers = v;\n  }\n\n}, 0);\nlet cleanReducerLeftovers;\nmodule.link(\"../reducers/lib/cleanReducerLeftovers\", {\n  default(v) {\n    cleanReducerLeftovers = v;\n  }\n\n}, 1);\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nlet Minimongo;\nmodule.link(\"meteor/minimongo\", {\n  Minimongo(v) {\n    Minimongo = v;\n  }\n\n}, 3);\nmodule.exportDefault((node, params) => {\n  snapBackCaches(node);\n  storeOneResults(node, node.results);\n  applyReducers(node, params);\n\n  _.each(node.collectionNodes, collectionNode => {\n    cloneMetaChildren(collectionNode, node.results);\n  });\n\n  _.each(node.collectionNodes, collectionNode => {\n    assembleMetadata(collectionNode, node.results);\n  });\n\n  cleanReducerLeftovers(node, node.results);\n  removeLinkStorages(node, node.results);\n  applyPostFilters(node);\n  applyPostOptions(node);\n  applyPostFilter(node, params);\n});\n\nfunction applyPostFilters(node) {\n  const postFilters = node.props.$postFilters;\n\n  if (postFilters) {\n    node.results = sift(postFilters, node.results);\n  }\n}\n\nfunction applyPostOptions(node) {\n  const options = node.props.$postOptions;\n\n  if (options) {\n    if (options.sort) {\n      const sorter = new Minimongo.Sorter(options.sort);\n      node.results.sort(sorter.getComparator());\n    }\n\n    if (options.limit || options.skip) {\n      const start = options.skip || 0;\n      const end = options.limit ? options.limit + start : node.results.length;\n      node.results = node.results.slice(start, end);\n    }\n  }\n}\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n  if (node.props.$postFilter) {\n    const filter = node.props.$postFilter;\n\n    if (_.isArray(filter)) {\n      filter.forEach(f => {\n        node.results = f(node.results, params);\n      });\n    } else {\n      node.results = filter(node.results, params);\n    }\n  }\n}\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\n\n\nfunction getResultsArray(results) {\n  if (_.isArray(results)) {\n    return results;\n  } else if (_.isUndefined(results)) {\n    return [];\n  }\n\n  return [results];\n}\n\nfunction removeLinkStorages(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  sameLevelResults = getResultsArray(sameLevelResults);\n\n  _.each(node.collectionNodes, collectionNode => {\n    const removeStorageField = collectionNode.shouldCleanStorage;\n\n    _.each(sameLevelResults, result => {\n      if (removeStorageField) {\n        if (collectionNode.isVirtual) {\n          const childResults = getResultsArray(result[collectionNode.linkName]);\n\n          _.each(childResults, childResult => {\n            delete childResult[collectionNode.linkStorageField];\n          });\n        } else {\n          delete result[collectionNode.linkStorageField];\n        }\n      }\n\n      removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n    });\n  });\n}\n\nfunction storeOneResults(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(sameLevelResults, result => {\n      // The reason we are doing this is that if the requested link does not exist\n      // It will fail when we try to get undefined[something] below\n      if (result === undefined) {\n        return;\n      }\n\n      storeOneResults(collectionNode, result[collectionNode.linkName]);\n    });\n\n    if (collectionNode.isOneResult) {\n      _.each(sameLevelResults, result => {\n        if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n          result[collectionNode.linkName] = result[collectionNode.linkName] ? _.first(result[collectionNode.linkName]) : undefined;\n        }\n      });\n    }\n  });\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n  if (!parentResults) {\n    return;\n  }\n\n  const linkName = node.linkName;\n  const isMeta = node.isMeta; // parentResults might be an object (for type==one links)\n\n  parentResults = getResultsArray(parentResults);\n  parentResults.forEach(parentResult => {\n    if (isMeta && parentResult[linkName]) {\n      if (node.isOneResult) {\n        parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n      } else {\n        parentResult[linkName] = parentResult[linkName].map(object => {\n          return Object.assign({}, object);\n        });\n      }\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n      cloneMetaChildren(collectionNode, parentResult[linkName]);\n    });\n  });\n}\n\nfunction assembleMetadata(node, parentResults) {\n  parentResults = getResultsArray(parentResults); // assembling metadata is depth first\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(parentResults, result => {\n      assembleMetadata(collectionNode, result[node.linkName]);\n    });\n  });\n\n  if (node.isMeta) {\n    if (node.isVirtual) {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n\n        if (node.isOneResult) {\n          if (_.isObject(childResult)) {\n            const storage = childResult[node.linkStorageField];\n            storeMetadata(childResult, parentResult, storage, true);\n          }\n        } else {\n          _.each(childResult, object => {\n            const storage = object[node.linkStorageField];\n            storeMetadata(object, parentResult, storage, true);\n          });\n        }\n      });\n    } else {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n        const storage = parentResult[node.linkStorageField];\n\n        if (node.isOneResult) {\n          if (childResult) {\n            storeMetadata(childResult, parentResult, storage, false);\n          }\n        } else {\n          _.each(childResult, object => {\n            storeMetadata(object, parentResult, storage, false);\n          });\n        }\n      });\n    }\n  }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n  if (isVirtual) {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  } else {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  }\n}\n\nfunction snapBackCaches(node) {\n  node.collectionNodes.forEach(collectionNode => {\n    snapBackCaches(collectionNode);\n  });\n\n  if (!_.isEmpty(node.snapCaches)) {\n    // process stuff\n    _.each(node.snapCaches, (linkName, cacheField) => {\n      const isSingle = _.contains(node.snapCachesSingles, cacheField);\n\n      const linker = node.collection.getLinker(linkName); // we do this because for one direct and one meta direct, id is not stored\n\n      const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n      node.results.forEach(result => {\n        if (result[cacheField]) {\n          if (shoudStoreLinkStorage) {\n            Object.assign(result[cacheField], {\n              _id: linker.isMeta() ? result[linker.linkStorageField]._id : result[linker.linkStorageField]\n            });\n          }\n\n          if (isSingle && _.isArray(result[cacheField])) {\n            result[linkName] = _.first(result[cacheField]);\n          } else {\n            result[linkName] = result[cacheField];\n          }\n\n          delete result[cacheField];\n        }\n      });\n    });\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForProcess.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForProcess.js                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 1);\n\nfunction defaultFilterFunction(_ref) {\n  let {\n    filters,\n    options,\n    params\n  } = _ref;\n\n  if (params.filters) {\n    Object.assign(filters, params.filters);\n  }\n\n  if (params.options) {\n    Object.assign(options, params.options);\n  }\n}\n\nfunction applyFilterRecursive(data) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (isRoot && !_.isFunction(data.$filter)) {\n    data.$filter = defaultFilterFunction;\n  }\n\n  if (data.$filter) {\n    check(data.$filter, Match.OneOf(Function, [Function]));\n    data.$filters = data.$filters || {};\n    data.$options = data.$options || {};\n\n    if (_.isArray(data.$filter)) {\n      data.$filter.forEach(filter => {\n        filter.call(null, {\n          filters: data.$filters,\n          options: data.$options,\n          params: params\n        });\n      });\n    } else {\n      data.$filter({\n        filters: data.$filters,\n        options: data.$options,\n        params: params\n      });\n    }\n\n    data.$filter = null;\n    delete data.$filter;\n  }\n\n  _.each(data, (value, key) => {\n    if (_.isObject(value)) {\n      return applyFilterRecursive(value, params);\n    }\n  });\n}\n\nfunction applyPagination(body, _params) {\n  if (body['$paginate'] && _params) {\n    if (!body.$options) {\n      body.$options = {};\n    }\n\n    if (_params.limit) {\n      _.extend(body.$options, {\n        limit: _params.limit\n      });\n    }\n\n    if (_params.skip) {\n      _.extend(body.$options, {\n        skip: _params.skip\n      });\n    }\n\n    delete body['$paginate'];\n  }\n}\n\nmodule.exportDefault(function (_body) {\n  let _params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let body = deepClone(_body);\n  let params = deepClone(_params);\n  applyPagination(body, params);\n  applyFilterRecursive(body, params, true);\n  return body;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveFetch.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveFetch.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet applyProps;\nmodule.link(\"./applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet assembleMetadata, removeLinkStorages, storeOneResults;\nmodule.link(\"./prepareForDelivery\", {\n  assembleMetadata(v) {\n    assembleMetadata = v;\n  },\n\n  removeLinkStorages(v) {\n    removeLinkStorages = v;\n  },\n\n  storeOneResults(v) {\n    storeOneResults = v;\n  }\n\n}, 1);\nlet prepareForDelivery;\nmodule.link(\"./prepareForDelivery\", {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 2);\nlet getNodeNamespace;\nmodule.link(\"./createGraph\", {\n  getNodeNamespace(v) {\n    getNodeNamespace = v;\n  }\n\n}, 3);\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @param fetchOptions\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n  let fetchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let {\n    filters,\n    options\n  } = applyProps(node); // add subscription filter\n\n  if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\n    _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\n  } // add query path filter\n\n\n  if (fetchOptions.scoped) {\n    _.extend(filters, {\n      [\"_query_path_\".concat(getNodeNamespace(node))]: {\n        $exists: true\n      }\n    });\n  }\n\n  let results = [];\n\n  if (parentObject) {\n    let accessor = node.linker.createLink(parentObject, node.collection);\n\n    if (node.isVirtual) {\n      options.fields = options.fields || {};\n\n      _.extend(options.fields, {\n        [node.linkStorageField]: 1\n      });\n    }\n\n    results = accessor.find(filters, options).fetch();\n  } else {\n    results = node.collection.find(filters, options).fetch();\n  }\n\n  _.each(node.collectionNodes, collectionNode => {\n    _.each(results, result => {\n      const collectionNodeResults = fetch(collectionNode, result);\n      result[collectionNode.linkName] = collectionNodeResults; //delete result[node.linker.linkStorageField];\n\n      /**\n       * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n       * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n       * the results?\n       *\n       * Other possible ways:\n       * - do something like assemble() in storeHypernovaResults\n       * - pass node.results to accessor above and find with sift\n       */\n\n      collectionNode.results.push(...collectionNodeResults); // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \n      // found first\n      // const currentIds = _.pluck(collectionNode.results, '_id');\n      // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n    });\n  });\n\n  return results;\n}\n\nmodule.exportDefault((node, params, fetchOptions) => {\n  node.results = fetch(node, null, fetchOptions);\n  prepareForDelivery(node, params);\n  return node.results;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nodes\":{\"collectionNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/collectionNode.js                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => CollectionNode,\n  runFieldSanityChecks: () => runFieldSanityChecks\n});\nlet FieldNode;\nmodule.link(\"./fieldNode.js\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 0);\nlet ReducerNode;\nmodule.link(\"./reducerNode.js\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\n\nclass CollectionNode {\n  constructor(collection) {\n    let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let linkName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (collection && !_.isObject(body)) {\n      throw new Meteor.Error('invalid-body', \"The field \\\"\".concat(linkName, \"\\\" is a collection link, and should have its body defined as an object.\"));\n    }\n\n    this.body = deepClone(body);\n    this.linkName = linkName;\n    this.collection = collection;\n    this.nodes = [];\n    this.props = {};\n    this.parent = null;\n    this.linker = null;\n    this.linkStorageField = null;\n    this.scheduledForDeletion = false;\n    this.reducers = [];\n    this.results = [];\n    this.snapCaches = {}; // {cacheField: linkName}\n\n    this.snapCachesSingles = []; // [cacheField1, cacheField2]\n  }\n\n  get collectionNodes() {\n    return _.filter(this.nodes, n => n instanceof CollectionNode);\n  }\n\n  get fieldNodes() {\n    return _.filter(this.nodes, n => n instanceof FieldNode);\n  }\n\n  get reducerNodes() {\n    return _.filter(this.nodes, n => n instanceof ReducerNode);\n  }\n  /**\n   * Adds children to itself\n   *\n   * @param node\n   * @param linker\n   */\n\n\n  add(node, linker) {\n    node.parent = this;\n\n    if (node instanceof FieldNode) {\n      runFieldSanityChecks(node.name);\n    }\n\n    if (linker) {\n      node.linker = linker;\n      node.linkStorageField = linker.linkStorageField;\n      node.isMeta = linker.isMeta();\n      node.isVirtual = linker.isVirtual();\n      node.isOneResult = linker.isOneResult();\n      node.shouldCleanStorage = this._shouldCleanStorage(node);\n    }\n\n    this.nodes.push(node);\n  }\n  /**\n   * @param prop\n   * @param value\n   */\n\n\n  addProp(prop, value) {\n    if (prop === '$postFilter') {\n      check(value, Match.OneOf(Function, [Function]));\n    }\n\n    _.extend(this.props, {\n      [prop]: value\n    });\n  }\n  /**\n   * @param _node\n   */\n\n\n  remove(_node) {\n    this.nodes = _.filter(this.nodes, node => _node !== node);\n  }\n  /**\n   * @param filters\n   * @param options\n   */\n\n\n  applyFields(filters, options) {\n    let hasAddedAnyField = false;\n\n    _.each(this.fieldNodes, n => {\n      /**\n       * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\n       * Therefore, we do not count this as a field addition.\n       * \n       * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\n       * The $meta expression specifies the inclusion of the field to the result set \n       * and does not specify the exclusion of the other fields.\n       */\n      if (n.projectionOperator !== '$meta') {\n        hasAddedAnyField = true;\n      }\n\n      n.applyFields(options.fields);\n    }); // it will only get here if it has collectionNodes children\n\n\n    _.each(this.collectionNodes, collectionNode => {\n      let linker = collectionNode.linker;\n\n      if (linker && !linker.isVirtual()) {\n        options.fields[linker.linkStorageField] = 1;\n        hasAddedAnyField = true;\n      }\n    }); // if he selected filters, we should automatically add those fields\n\n\n    _.each(filters, (value, field) => {\n      // special handling for the $meta filter, conditional operators and text search\n      if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\n        // if the field or the parent of the field already exists, don't add it\n        if (!_.has(options.fields, field.split('.')[0])) {\n          hasAddedAnyField = true;\n          options.fields[field] = 1;\n        }\n      }\n    });\n\n    if (!hasAddedAnyField) {\n      options.fields = (0, _objectSpread2.default)({\n        _id: 1\n      }, options.fields);\n    }\n  }\n  /**\n   * @param fieldName\n   * @returns {boolean}\n   */\n\n\n  hasField(fieldName) {\n    let checkNested = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // for checkNested flag it expands profile.phone.verified into \n    // ['profile', 'profile.phone', 'profile.phone.verified']\n    // if any of these fields match it means that field exists\n    const options = checkNested ? fieldName.split('.').reduce((acc, key) => {\n      if (acc.length === 0) {\n        return [key];\n      }\n\n      const [last] = acc;\n      return [...acc, \"\".concat(last, \".\").concat(key)];\n    }, []) : [fieldName];\n    return !!_.find(this.fieldNodes, fieldNode => {\n      return _.contains(options, fieldNode.name);\n    });\n  }\n  /**\n   * @param fieldName\n   * @returns {FieldNode}\n   */\n\n\n  getField(fieldName) {\n    return _.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasCollectionNode(name) {\n    return !!_.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasReducerNode(name) {\n    return !!_.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {ReducerNode}\n   */\n\n\n  getReducerNode(name) {\n    return _.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {CollectionNode}\n   */\n\n\n  getCollectionNode(name) {\n    return _.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @returns {*}\n   */\n\n\n  getName() {\n    return this.linkName ? this.linkName : this.collection ? this.collection._name : 'N/A';\n  }\n  /**\n   * This is used for caching links\n   *\n   * @param cacheField\n   * @param subLinkName\n   */\n\n\n  snapCache(cacheField, subLinkName) {\n    this.snapCaches[cacheField] = subLinkName;\n\n    if (this.collection.getLinker(subLinkName).isOneResult()) {\n      this.snapCachesSingles.push(cacheField);\n    }\n  }\n  /**\n   * This method verifies whether to remove the linkStorageField form the results\n   * unless you specify it in your query.\n   *\n   * @param node\n   * @returns {boolean}\n   * @private\n   */\n\n\n  _shouldCleanStorage(node) {\n    if (node.linkStorageField === '_id') {\n      return false;\n    } else {\n      if (node.isVirtual) {\n        return !node.hasField(node.linkStorageField);\n      } else {\n        return !this.hasField(node.linkStorageField);\n      }\n    }\n  }\n\n}\n\nfunction runFieldSanityChecks(fieldName) {\n  // Run sanity checks on the field\n  if (fieldName[0] === '$') {\n    throw new Error(\"You are not allowed to use fields that start with $ inside a reducer's body: \".concat(fieldName));\n  }\n\n  return true;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/fieldNode.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => FieldNode\n});\n\nclass FieldNode {\n  constructor(name, body) {\n    let isProjectionOperator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.name = name;\n    this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\n    this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\n    this.scheduledForDeletion = false;\n  }\n\n  applyFields(fields) {\n    fields[this.name] = this.body;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducerNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/reducerNode.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => ReducerNode\n});\n\nclass ReducerNode {\n  constructor(name, _ref) {\n    let {\n      body,\n      reduce\n    } = _ref;\n    this.name = name;\n    this.body = body;\n    this.reduceFunction = reduce;\n    this.dependencies = []; // This is a list of the reducer this reducer uses.\n  }\n  /**\n   * When computing we also pass the parameters\n   * \n   * @param {*} object \n   * @param {*} args \n   */\n\n\n  compute(object) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    object[this.name] = this.reduce.call(this, object, ...args);\n  }\n\n  reduce(object) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return this.reduceFunction.call(this, object, ...args);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/extension.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet addFieldMap;\nmodule.link(\"./lib/addFieldMap\", {\n  default(v) {\n    addFieldMap = v;\n  }\n\n}, 1);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * @param data\n   */\n  addReducers(data) {\n    if (!this[storage]) {\n      this[storage] = {};\n    }\n\n    _.each(data, (reducerConfig, reducerName) => {\n      if (!this[reducerConfig]) {\n        this[reducerConfig] = {};\n      }\n\n      if (this.getLinker(reducerName)) {\n        throw new Meteor.Error(\"You cannot add the reducer with name: \".concat(reducerName, \" because it is already defined as a link in \").concat(this._name, \" collection\"));\n      }\n\n      if (this[reducerConfig][reducerName]) {\n        throw new Meteor.Error(\"You cannot add the reducer with name: \".concat(reducerName, \" because it was already added to \").concat(this._name, \" collection\"));\n      }\n\n      check(reducerConfig, {\n        body: Object,\n        reduce: Function\n      });\n\n      _.extend(this[storage], {\n        [reducerName]: reducerConfig\n      });\n    });\n  },\n\n  /**\n   * @param name\n   * @returns {*}\n   */\n  getReducer(name) {\n    if (this[storage]) {\n      return this[storage][name];\n    }\n  },\n\n  /**\n   * This creates reducers that makes sort of aliases for the database fields we use\n   */\n  addFieldMap\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"addFieldMap.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/addFieldMap.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => addFieldMap\n});\n\nfunction addFieldMap(map) {\n  const collection = this;\n  let reducers = {};\n\n  for (let key in map) {\n    const dbField = map[key];\n    reducers[key] = {\n      body: {\n        [dbField]: 1\n      },\n\n      reduce(obj) {\n        return obj[dbField];\n      }\n\n    };\n  }\n\n  collection.addReducers(reducers);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"applyReducers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/applyReducers.js                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n  _.each(root.collectionNodes, node => {\n    applyReducers(node, params);\n  });\n\n  const processedReducers = [];\n  let reducersQueue = [...root.reducerNodes]; // TODO: find out if there's an infinite reducer inter-deendency\n\n  while (reducersQueue.length) {\n    const reducerNode = reducersQueue.shift(); // If this reducer depends on other reducers\n\n    if (reducerNode.dependencies.length) {\n      // If there is an unprocessed reducer, move it at the end of the queue\n      const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n\n      if (allDependenciesComputed) {\n        root.results.forEach(result => {\n          reducerNode.compute(result, params);\n        });\n        processedReducers.push(reducerNode.name);\n      } else {\n        // Move it at the end of the queue\n        reducersQueue.push(reducerNode);\n      }\n    } else {\n      root.results.forEach(result => {\n        reducerNode.compute(result, params);\n      });\n      processedReducers.push(reducerNode.name);\n    }\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanReducerLeftovers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/cleanReducerLeftovers.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root, results) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    let childResults;\n\n    if (node.isOneResult) {\n      childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n    } else {\n      childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n    }\n\n    cleanReducerLeftovers(node, childResults);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.filter(result => !!result[fieldName]).map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createReducers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/createReducers.js                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => addReducers,\n  handleAddElement: () => handleAddElement,\n  handleAddReducer: () => handleAddReducer,\n  handleAddLink: () => handleAddLink,\n  handleAddField: () => handleAddField\n});\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\nlet createNodes;\nmodule.link(\"../../lib/createGraph\", {\n  createNodes(v) {\n    createNodes = v;\n  }\n\n}, 1);\nlet CollectionNode;\nmodule.link(\"../../nodes/collectionNode\", {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 2);\nlet FieldNode;\nmodule.link(\"../../nodes/fieldNode\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 3);\nlet ReducerNode;\nmodule.link(\"../../nodes/reducerNode\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 4);\nlet embedReducerWithLink;\nmodule.link(\"./embedReducerWithLink\", {\n  default(v) {\n    embedReducerWithLink = v;\n  }\n\n}, 5);\nlet specialFields;\nmodule.link(\"../../lib/createGraph\", {\n  specialFields(v) {\n    specialFields = v;\n  }\n\n}, 6);\n\nfunction addReducers(root) {\n  // we add reducers last, after we have added all the fields.\n  root.reducerNodes.forEach(reducer => {\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(reducer, root, fieldName, body);\n    });\n  });\n}\n\nfunction handleAddElement(reducerNode, root, fieldName, body) {\n  // if it's a link\n  const collection = root.collection;\n  const linker = collection.getLinker(fieldName);\n\n  if (linker) {\n    return handleAddLink(reducerNode, fieldName, body, root, linker);\n  }\n\n  const reducer = collection.getReducer(fieldName);\n\n  if (reducer) {\n    reducerNode.dependencies.push(fieldName);\n    return handleAddReducer(fieldName, reducer, root);\n  } // we assume it's a field in this case\n\n\n  return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, _ref, root) {\n  let {\n    body,\n    reduce\n  } = _ref;\n\n  if (!root.hasReducerNode(fieldName)) {\n    let childReducerNode = new ReducerNode(fieldName, {\n      body,\n      reduce\n    });\n    root.add(childReducerNode);\n    childReducerNode.scheduledForDeletion = true;\n\n    _.each(childReducerNode.body, (body, fieldName) => {\n      handleAddElement(childReducerNode, root, fieldName, body);\n    });\n  }\n}\n\nfunction handleAddLink(reducerNode, fieldName, body, parent, linker) {\n  if (parent.hasCollectionNode(fieldName)) {\n    const collectionNode = parent.getCollectionNode(fieldName);\n    embedReducerWithLink(reducerNode, body, collectionNode);\n  } else {\n    // add\n    let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n    collectionNode.scheduledForDeletion = true;\n    parent.add(collectionNode, linker);\n    createNodes(collectionNode);\n  }\n}\n\nfunction handleAddField(fieldName, body, root) {\n  if (_.contains(specialFields, fieldName)) {\n    root.addProp(fieldName, body);\n    return;\n  }\n\n  if (_.isObject(body)) {\n    // if reducer specifies a nested field\n    // if it's a prop\n    const dots = dot.dot({\n      [fieldName]: body\n    });\n\n    _.each(dots, (value, key) => {\n      addFieldIfRequired(root, key, value);\n    });\n  } else {\n    // if reducer does not specify a nested field, and the field does not exist.\n    addFieldIfRequired(root, fieldName, body);\n  }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n  if (!root.hasField(fieldName, true)) {\n    /**\n     * Check if there are any nested fields for this field.\n     * Adding root field here and scheduling for deletion would not work if there is already nested field, \n     * for example:\n     * when trying to add meta: 1, it should be checked that there are no meta.* fields\n     * */\n    const nestedFields = root.fieldNodes.filter((_ref2) => {\n      let {\n        name\n      } = _ref2;\n      return name.startsWith(\"\".concat(fieldName, \".\"));\n    }); // remove nested fields - important for minimongo which complains for these situations\n    // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n    // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n    // and removing anything else\n\n    nestedFields.forEach(node => root.remove(node));\n    let fieldNode = new FieldNode(fieldName, body); // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n\n    fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n    root.add(fieldNode);\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"embedReducerWithLink.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/embedReducerWithLink.js                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => embedReducerWithLink\n});\nlet handleAddField, handleAddElement, handleAddReducer;\nmodule.link(\"./createReducers\", {\n  handleAddField(v) {\n    handleAddField = v;\n  },\n\n  handleAddElement(v) {\n    handleAddElement = v;\n  },\n\n  handleAddReducer(v) {\n    handleAddReducer = v;\n  }\n\n}, 0);\n\nfunction embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\n  _.each(reducerBody, (value, key) => {\n    const collection = collectionNode.collection;\n\n    if (_.isObject(value)) {\n      // nested field or link\n      if (collectionNode.body[key]) {\n        // if it exists\n        const linker = collection.getLinker(key); // if it's a link\n\n        if (linker) {\n          if (linker.isDenormalized()) {\n            if (linker.isSubBodyDenormalized(value)) {\n              const cacheField = linker.linkConfig.denormalize.field;\n              handleAddField(cacheField, value, collectionNode);\n              return;\n            }\n          }\n\n          embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\n          return;\n        }\n\n        handleAddField(key, value, collectionNode);\n      } else {\n        // does not exist, so it may be a link/reducer/field\n        handleAddElement(reducerNode, collectionNode, key, value);\n      }\n    } else {\n      // if this field or other reducer exists within the collection\n      if (!collectionNode.body[key]) {\n        // can only be field or another reducer for this.\n        const reducer = collection.getReducer(key);\n\n        if (reducer) {\n          // if it's another reducer\n          return handleAddReducer(key, reducer, collectionNode);\n        }\n\n        return handleAddField(key, value, collectionNode);\n      }\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},\"node_modules\":{\"lodash.clonedeep\":{\"package.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/package.json                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = {\n  \"name\": \"lodash.clonedeep\",\n  \"version\": \"4.5.0\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/index.js                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"dot-object\":{\"package.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/package.json                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = {\n  \"name\": \"dot-object\",\n  \"version\": \"1.5.4\",\n  \"main\": \"index\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/index.js                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n'use strict'\n\nfunction _process (v, mod) {\n  var i\n  var r\n\n  if (typeof mod === 'function') {\n    r = mod(v)\n    if (r !== undefined) {\n      v = r\n    }\n  } else if (Array.isArray(mod)) {\n    for (i = 0; i < mod.length; i++) {\n      r = mod[i](v)\n      if (r !== undefined) {\n        v = r\n      }\n    }\n  }\n\n  return v\n}\n\nfunction parseKey (key, val) {\n  // detect negative index notation\n  if (key[0] === '-' && Array.isArray(val) && /^-\\d+$/.test(key)) {\n    return val.length + parseInt(key, 10)\n  }\n  return key\n}\n\nfunction isIndex (k) {\n  return /^\\d+/.test(k)\n}\n\nfunction parsePath (path, sep) {\n  if (path.indexOf('[') >= 0) {\n    path = path.replace(/\\[/g, '.').replace(/]/g, '')\n  }\n  return path.split(sep)\n}\n\nfunction DotObject (seperator, override, useArray) {\n  if (!(this instanceof DotObject)) {\n    return new DotObject(seperator, override, useArray)\n  }\n\n  if (typeof seperator === 'undefined') seperator = '.'\n  if (typeof override === 'undefined') override = false\n  if (typeof useArray === 'undefined') useArray = true\n  this.seperator = seperator\n  this.override = override\n  this.useArray = useArray\n\n  // contains touched arrays\n  this.cleanup = []\n}\n\nvar dotDefault = new DotObject('.', false, true)\nfunction wrap (method) {\n  return function () {\n    return dotDefault[method].apply(dotDefault, arguments)\n  }\n}\n\nDotObject.prototype._fill = function (a, obj, v, mod) {\n  var k = a.shift()\n\n  if (a.length > 0) {\n    obj[k] = obj[k] ||\n      (this.useArray && isIndex(a[0]) ? [] : {})\n\n    if (obj[k] !== Object(obj[k])) {\n      if (this.override) {\n        obj[k] = {}\n      } else {\n        throw new Error(\n          'Trying to redefine `' + k + '` which is a ' + typeof obj[k]\n        )\n      }\n    }\n\n    this._fill(a, obj[k], v, mod)\n  } else {\n    if (!this.override &&\n      obj[k] === Object(obj[k]) && Object.keys(obj[k]).length) {\n      throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\")\n    }\n\n    obj[k] = _process(v, mod)\n  }\n}\n\n/**\n *\n * Converts an object with dotted-key/value pairs to it's expanded version\n *\n * Optionally transformed by a set of modifiers.\n *\n * Usage:\n *\n *   var row = {\n *     'nr': 200,\n *     'doc.name': '  My Document  '\n *   }\n *\n *   var mods = {\n *     'doc.name': [_s.trim, _s.underscored]\n *   }\n *\n *   dot.object(row, mods)\n *\n * @param {Object} obj\n * @param {Object} mods\n */\nDotObject.prototype.object = function (obj, mods) {\n  var self = this\n\n  Object.keys(obj).forEach(function (k) {\n    var mod = mods === undefined ? null : mods[k]\n    // normalize array notation.\n    var ok = parsePath(k, self.seperator).join(self.seperator)\n\n    if (ok.indexOf(self.seperator) !== -1) {\n      self._fill(ok.split(self.seperator), obj, obj[k], mod)\n      delete obj[k]\n    } else if (self.override) {\n      obj[k] = _process(obj[k], mod)\n    }\n  })\n\n  return obj\n}\n\n/**\n * @param {String} path dotted path\n * @param {String} v value to be set\n * @param {Object} obj object to be modified\n * @param {Function|Array} mod optional modifier\n */\nDotObject.prototype.str = function (path, v, obj, mod) {\n  if (path.indexOf(this.seperator) !== -1) {\n    this._fill(path.split(this.seperator), obj, v, mod)\n  } else if (!obj.hasOwnProperty(path) || this.override) {\n    obj[path] = _process(v, mod)\n  }\n\n  return obj\n}\n\n/**\n *\n * Pick a value from an object using dot notation.\n *\n * Optionally remove the value\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Boolean} remove\n */\nDotObject.prototype.pick = function (path, obj, remove) {\n  var i\n  var keys\n  var val\n  var key\n  var cp\n\n  keys = parsePath(path, this.seperator)\n  for (i = 0; i < keys.length; i++) {\n    key = parseKey(keys[i], obj)\n    if (obj && typeof obj === 'object' && key in obj) {\n      if (i === (keys.length - 1)) {\n        if (remove) {\n          val = obj[key]\n          delete obj[key]\n          if (Array.isArray(obj)) {\n            cp = keys.slice(0, -1).join('.')\n            if (this.cleanup.indexOf(cp) === -1) {\n              this.cleanup.push(cp)\n            }\n          }\n          return val\n        } else {\n          return obj[key]\n        }\n      } else {\n        obj = obj[key]\n      }\n    } else {\n      return undefined\n    }\n  }\n  if (remove && Array.isArray(obj)) {\n    obj = obj.filter(function (n) { return n !== undefined })\n  }\n  return obj\n}\n\n/**\n *\n * Remove value from an object using dot notation.\n *\n * @param {String} path\n * @param {Object} obj\n * @return {Mixed} The removed value\n */\nDotObject.prototype.remove = function (path, obj) {\n  var i\n\n  this.cleanup = []\n  if (Array.isArray(path)) {\n    for (i = 0; i < path.length; i++) {\n      this.pick(path[i], obj, true)\n    }\n    this._cleanup(obj)\n    return obj\n  } else {\n    return this.pick(path, obj, true)\n  }\n}\n\nDotObject.prototype._cleanup = function (obj) {\n  var ret\n  var i\n  var keys\n  var root\n  if (this.cleanup.length) {\n    for (i = 0; i < this.cleanup.length; i++) {\n      keys = this.cleanup[i].split('.')\n      root = keys.splice(0, -1).join('.')\n      ret = root ? this.pick(root, obj) : obj\n      ret = ret[keys[0]].filter(function (v) { return v !== undefined })\n      this.set(this.cleanup[i], ret, obj)\n    }\n    this.cleanup = []\n  }\n}\n\n// alias method\nDotObject.prototype.del = DotObject.prototype.remove\n\n/**\n *\n * Move a property from one place to the other.\n *\n * If the source path does not exist (undefined)\n * the target property will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.move = function (source, target, obj, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(this.pick(source, obj, true), mods), obj, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj, true), obj, merge)\n  }\n\n  return obj\n}\n\n/**\n *\n * Transfer a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target,\n      _process(\n        this.pick(source, obj1, true),\n        mods\n      ), obj2, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, true), obj2, merge)\n  }\n\n  return obj2\n}\n\n/**\n *\n * Copy a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target,\n      _process(\n        // clone what is picked\n        JSON.parse(\n          JSON.stringify(\n            this.pick(source, obj1, false)\n          )\n        ),\n        mods\n      ), obj2, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, false), obj2, merge)\n  }\n\n  return obj2\n}\n\nfunction isObject (val) {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\n/**\n *\n * Set a property on an object using dot notation.\n *\n * @param {String} path\n * @param {Mixed} val\n * @param {Object} obj\n * @param {Boolean} merge\n */\nDotObject.prototype.set = function (path, val, obj, merge) {\n  var i\n  var k\n  var keys\n  var key\n\n  // Do not operate if the value is undefined.\n  if (typeof val === 'undefined') {\n    return obj\n  }\n  keys = parsePath(path, this.seperator)\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i]\n    if (i === (keys.length - 1)) {\n      if (merge && isObject(val) && isObject(obj[key])) {\n        for (k in val) {\n          if (val.hasOwnProperty(k)) {\n            obj[key][k] = val[k]\n          }\n        }\n      } else if (merge && Array.isArray(obj[key]) && Array.isArray(val)) {\n        for (var j = 0; j < val.length; j++) {\n          obj[keys[i]].push(val[j])\n        }\n      } else {\n        obj[key] = val\n      }\n    } else if (\n      // force the value to be an object\n      !obj.hasOwnProperty(key) ||\n      (!isObject(obj[key]) && !Array.isArray(obj[key]))\n    ) {\n      // initialize as array if next key is numeric\n      if (/^\\d+$/.test(keys[i + 1])) {\n        obj[key] = []\n      } else {\n        obj[key] = {}\n      }\n    }\n    obj = obj[key]\n  }\n  return obj\n}\n\n/**\n *\n * Transform an object\n *\n * Usage:\n *\n *   var obj = {\n *     \"id\": 1,\n  *    \"some\": {\n  *      \"thing\": \"else\"\n  *    }\n *   }\n *\n *   var transform = {\n *     \"id\": \"nr\",\n  *    \"some.thing\": \"name\"\n *   }\n *\n *   var tgt = dot.transform(transform, obj)\n *\n * @param {Object} recipe Transform recipe\n * @param {Object} obj Object to be transformed\n * @param {Array} mods modifiers for the target\n */\nDotObject.prototype.transform = function (recipe, obj, tgt) {\n  obj = obj || {}\n  tgt = tgt || {}\n  Object.keys(recipe).forEach(function (key) {\n    this.set(recipe[key], this.pick(key, obj), tgt)\n  }.bind(this))\n  return tgt\n}\n\n/**\n *\n * Convert object to dotted-key/value pair\n *\n * Usage:\n *\n *   var tgt = dot.dot(obj)\n *\n *   or\n *\n *   var tgt = {}\n *   dot.dot(obj, tgt)\n *\n * @param {Object} obj source object\n * @param {Object} tgt target object\n * @param {Array} path path array (internal)\n */\nDotObject.prototype.dot = function (obj, tgt, path) {\n  tgt = tgt || {}\n  path = path || []\n  Object.keys(obj).forEach(function (key) {\n    if (Object(obj[key]) === obj[key] && (Object.prototype.toString.call(obj[key]) === '[object Object]') || Object.prototype.toString.call(obj[key]) === '[object Array]') {\n      return this.dot(obj[key], tgt, path.concat(key))\n    } else {\n      tgt[path.concat(key).join(this.seperator)] = obj[key]\n    }\n  }.bind(this))\n  return tgt\n}\n\nDotObject.pick = wrap('pick')\nDotObject.move = wrap('move')\nDotObject.transfer = wrap('transfer')\nDotObject.transform = wrap('transform')\nDotObject.copy = wrap('copy')\nDotObject.object = wrap('object')\nDotObject.str = wrap('str')\nDotObject.set = wrap('set')\nDotObject.del = DotObject.remove = wrap('remove')\nDotObject.dot = wrap('dot')\n\n;['override', 'overwrite'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault.override\n    },\n    set: function (val) {\n      dotDefault.override = !!val\n    }\n  })\n})\n\nObject.defineProperty(DotObject, 'useArray', {\n  get: function () {\n    return dotDefault.useArray\n  },\n  set: function (val) {\n    dotDefault.useArray = val\n  }\n})\n\nDotObject._process = _process\n\nmodule.exports = DotObject;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"sift\":{\"package.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/package.json                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = {\n  \"name\": \"sift\",\n  \"version\": \"3.2.6\",\n  \"main\": \"./sift.js\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sift.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/sift.js                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/*\n * Sift 3.x\n *\n * Copryright 2015, Craig Condon\n * Licensed under MIT\n *\n * Filter JavaScript objects with mongodb queries\n */\n\n(function() {\n\n  'use strict';\n\n  /**\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  /**\n   */\n\n  function isArray(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  }\n\n  /**\n   */\n\n  function comparable(value) {\n    if (value instanceof Date) {\n      return value.getTime();\n    } else if (value instanceof Array) {\n      return value.map(comparable);\n    } else {\n      return value;\n    }\n  }\n\n  function get(obj, key) {\n    if (obj.get) return obj.get(key);\n    return obj[key];\n  }\n\n  /**\n   */\n\n  function or(validator) {\n    return function(a, b) {\n      if (!isArray(b) || !b.length) return validator(a, b);\n      for (var i = 0, n = b.length; i < n; i++) if (validator(a, get(b,i))) return true;\n      return false;\n    }\n  }\n\n  /**\n   */\n\n  function and(validator) {\n    return function(a, b) {\n      if (!isArray(b) || !b.length) return validator(a, b);\n      for (var i = 0, n = b.length; i < n; i++) if (!validator(a, get(b, i))) return false;\n      return true;\n    };\n  }\n\n  function validate(validator, b) {\n    return validator.v(validator.a, b);\n  }\n\n\n  var operator = {\n\n    /**\n     */\n\n    $eq: or(function(a, b) {\n      return a(b);\n    }),\n\n    /**\n     */\n\n    $ne: and(function(a, b) {\n      return !a(b);\n    }),\n\n    /**\n     */\n\n    $or: function(a, b) {\n      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b)) return true;\n      return false;\n    },\n\n    /**\n     */\n\n    $gt: or(function(a, b) {\n      return sift.compare(comparable(b), a) > 0;\n    }),\n\n    /**\n     */\n\n    $gte: or(function(a, b) {\n      return sift.compare(comparable(b), a) >= 0;\n    }),\n\n    /**\n     */\n\n    $lt: or(function(a, b) {\n      return sift.compare(comparable(b), a) < 0;\n    }),\n\n    /**\n     */\n\n    $lte: or(function(a, b) {\n      return sift.compare(comparable(b), a) <= 0;\n    }),\n\n    /**\n     */\n\n    $mod: or(function(a, b) {\n      return b % a[0] == a[1];\n    }),\n\n    /**\n     */\n\n    $in: function(a, b) {\n\n      if (b instanceof Array) {\n        for (var i = b.length; i--;) {\n          if (~a.indexOf(comparable(get(b, i)))) return true;\n        }\n      } else {\n        return !!~a.indexOf(comparable(b));\n      }\n\n      return false;\n    },\n\n    /**\n     */\n\n    $nin: function(a, b) {\n      return !operator.$in(a, b);\n    },\n\n    /**\n     */\n\n    $not: function(a, b) {\n      return !validate(a, b);\n    },\n\n    /**\n     */\n\n    $type: function(a, b) {\n      return b != void 0 ? b instanceof a || b.constructor == a : false;\n     },\n\n    /**\n     */\n\n    $all: function(a, b) {\n      if (!b) b = [];\n      for (var i = a.length; i--;) {\n        if (!~comparable(b).indexOf(get(a, i))) return false;\n      }\n      return true;\n    },\n\n    /**\n     */\n\n    $size: function(a, b) {\n      return b ? a === b.length : false;\n    },\n\n    /**\n     */\n\n    $nor: function(a, b) {\n      // todo - this suffice? return !operator.$in(a)\n      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b)) return false;\n      return true;\n    },\n\n    /**\n     */\n\n    $and: function(a, b) {\n      for (var i = 0, n = a.length; i < n; i++) if (!validate(get(a, i), b)) return false;\n      return true;\n    },\n\n    /**\n     */\n\n    $regex: or(function(a, b) {\n      return typeof b === 'string' && a.test(b);\n    }),\n\n    /**\n     */\n\n    $where: function(a, b) {\n      return a.call(b, b);\n    },\n\n    /**\n     */\n\n    $elemMatch: function(a, b) {\n      if (isArray(b)) return !!~search(b, a);\n      return validate(a, b);\n    },\n\n    /**\n     */\n\n    $exists: function(a, b) {\n      return (b != void 0) === a;\n    }\n  };\n\n  /**\n   */\n\n  var prepare = {\n\n    /**\n     */\n\n    $eq: function(a) {\n\n      if (a instanceof RegExp) {\n        return function(b) {\n          return typeof b === 'string' && a.test(b);\n        };\n      } else if (a instanceof Function) {\n        return a;\n      } else if (isArray(a) && !a.length) {\n        // Special case of a == []\n        return function(b) {\n          return (isArray(b) && !b.length);\n        };\n      } else if (a === null){\n        return function(b){\n          //will match both null and undefined\n          return b == null;\n        }\n      }\n\n      return function(b) {\n        return sift.compare(comparable(b), a) === 0;\n      };\n    },\n\n    /**\n     */\n\n    $ne: function(a) {\n      return prepare.$eq(a);\n    },\n\n    /**\n     */\n\n    $and: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $or: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $nor: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $not: function(a) {\n      return parse(a);\n    },\n\n    /**\n     */\n\n    $regex: function(a, query) {\n      return new RegExp(a, query.$options);\n    },\n\n    /**\n     */\n\n    $where: function(a) {\n      return typeof a === 'string' ? new Function('obj', 'return ' + a) : a;\n    },\n\n    /**\n     */\n\n    $elemMatch: function(a) {\n      return parse(a);\n    },\n\n    /**\n     */\n\n    $exists: function(a) {\n      return !!a;\n    }\n  };\n\n  /**\n   */\n\n  function search(array, validator) {\n\n    for (var i = 0; i < array.length; i++) {\n      if (validate(validator, get(array, i))) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   */\n\n  function createValidator(a, validate) {\n    return { a: a, v: validate };\n  }\n\n  /**\n   */\n\n  function nestedValidator(a, b) {\n    var values  = [];\n    findValues(b, a.k, 0, values);\n\n    if (values.length === 1) {\n      return validate(a.nv, values[0]);\n    }\n\n    return !!~search(values, a.nv);\n  }\n\n  /**\n   */\n\n  function findValues(current, keypath, index, values) {\n\n    if (index === keypath.length || current == void 0) {\n      values.push(current);\n      return;\n    }\n\n    var k = get(keypath, index);\n\n    // ensure that if current is an array, that the current key\n    // is NOT an array index. This sort of thing needs to work:\n    // sift({'foo.0':42}, [{foo: [42]}]);\n    if (isArray(current) && isNaN(Number(k))) {\n      for (var i = 0, n = current.length; i < n; i++) {\n        findValues(get(current, i), keypath, index, values);\n      }\n    } else {\n      findValues(get(current, k), keypath, index + 1, values);\n    }\n  }\n\n  /**\n   */\n\n  function createNestedValidator(keypath, a) {\n    return { a: { k: keypath, nv: a }, v: nestedValidator };\n  }\n\n  /**\n   * flatten the query\n   */\n\n  function parse(query) {\n    query = comparable(query);\n\n    if (!query || (query.constructor.toString() !== 'Object' &&\n        query.constructor.toString().replace(/\\n/g,'').replace(/ /g, '') !== 'functionObject(){[nativecode]}')) { // cross browser support\n      query = { $eq: query };\n    }\n\n    var validators = [];\n\n    for (var key in query) {\n      var a = query[key];\n\n      if (key === '$options') continue;\n\n      if (operator[key]) {\n        if (prepare[key]) a = prepare[key](a, query);\n        validators.push(createValidator(comparable(a), operator[key]));\n      } else {\n\n        if (key.charCodeAt(0) === 36) {\n          throw new Error('Unknown operation ' + key);\n        }\n\n        validators.push(createNestedValidator(key.split('.'), parse(a)));\n      }\n    }\n\n    return validators.length === 1 ? validators[0] : createValidator(validators, operator.$and);\n  }\n\n  /**\n   */\n\n  function createRootValidator(query, getter) {\n    var validator = parse(query);\n    if (getter) {\n      validator = {\n        a: validator,\n        v: function(a, b) {\n          return validate(a, getter(b));\n        }\n      };\n    }\n    return validator;\n  }\n\n  /**\n   */\n\n  function sift(query, array, getter) {\n\n    if (isFunction(array)) {\n      getter = array;\n      array  = void 0;\n    }\n\n    var validator = createRootValidator(query, getter);\n\n    function filter(b) {\n      return validate(validator, b);\n    }\n\n    if (array) {\n      return array.filter(filter);\n    }\n\n    return filter;\n  }\n\n  /**\n   */\n\n  sift.use = function(plugin) {\n    if (isFunction(plugin)) return plugin(sift);\n    for (var key in plugin) {\n      if (key.charCodeAt(0) === 36) operator[key] = plugin[key];\n    }\n  };\n\n  /**\n   */\n\n  sift.indexOf = function(query, array, getter) {\n    return search(array, createRootValidator(query, getter));\n  };\n\n  /**\n   */\n\n  sift.compare = function(a, b) {\n    if(a===b) return 0;\n    if(typeof a === typeof b) {\n      if (a > b) return 1;\n      if (a < b) return -1;\n    }\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = sift;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.sift = sift;\n  }\n})();\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deep-extend\":{\"package.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/package.json                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = {\n  \"name\": \"deep-extend\",\n  \"version\": \"0.5.0\",\n  \"main\": \"lib/deep-extend.js\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"deep-extend.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/lib/deep-extend.js                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = target[key]; // source value\n\t\t\tval = obj[key]; // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/cultofcoders:grapher/main.client.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:grapher\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_grapher.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:grapher/main.client.js","packages/cultofcoders:grapher/lib/compose.js","packages/cultofcoders:grapher/lib/createQuery.js","packages/cultofcoders:grapher/lib/extension.js","packages/cultofcoders:grapher/lib/links/config.schema.js","packages/cultofcoders:grapher/lib/links/constants.js","packages/cultofcoders:grapher/lib/links/extension.js","packages/cultofcoders:grapher/lib/links/linker.js","packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","packages/cultofcoders:grapher/lib/links/linkTypes/base.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","packages/cultofcoders:grapher/lib/namedQuery/store.js","packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","packages/cultofcoders:grapher/lib/query/query.base.js","packages/cultofcoders:grapher/lib/query/query.client.js","packages/cultofcoders:grapher/lib/query/query.js","packages/cultofcoders:grapher/lib/query/query.server.js","packages/cultofcoders:grapher/lib/query/counts/collection.js","packages/cultofcoders:grapher/lib/query/counts/constants.js","packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","packages/cultofcoders:grapher/lib/query/hypernova/constants.js","packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","packages/cultofcoders:grapher/lib/query/lib/applyProps.js","packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","packages/cultofcoders:grapher/lib/query/lib/createGraph.js","packages/cultofcoders:grapher/lib/query/lib/dotize.js","packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","packages/cultofcoders:grapher/lib/query/reducers/extension.js","packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js","packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","link","default","deepExtend","v","exportDefault","args","Query","NamedQuery","NamedQueryStore","name","body","options","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","Mongo","Collection","get","Meteor","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","extend","prototype","createQuery","export","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","Match","field","String","Object","bypassSchema","Maybe","Boolean","type","OneOf","Where","isObject","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","assign","addLinks","data","each","linkConfig","linkName","_name","linker","getLinks","getLinker","hasLink","getLink","objectOrId","linkData","object","isVirtual","findOne","fields","linkStorageField","_id","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","check","access","constructor","mainCollection","_validateAndClean","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","relatedLinker","getLinkedCollection","isSingle","isMeta","contains","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","accessor","fetchAsArray","linkedObj","unset","isServer","_ensureIndex","sparse","$in","getIds","ids","find","fetch","map","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","length","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","value","undefined","filters","key","pluck","$elemMatch","Link","SmartArgs","config","linkedCollection","$metaFilters","$meta","searchFilters","appliedFilters","others","result","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","isArray","validIds","join","_virtualAction","action","reversedLink","element","elementId","insert","set","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","push","extendMetadata","existingMetadata","subfield","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","deepClone","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","isResolver","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","cacher","exposeConfig","validator","call","CountSubscription","createGraph","recursiveFetch","prepareForProcess","callWithPromise","Base","LocalCollection","intersectDeep","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","allowSkip","$options","skip","scoped","NamedQueryClient","NamedQueryServer","MemoryResultCacher","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","count","$filters","cacheResults","resolve","fn","self","_callFirewall","storage","getAll","BaseResultCacher","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","QueryBase","isGlobalQuery","QueryClient","QueryServer","hypernova","node","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","arg","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","AggregateFilters","collectionNode","parentObjects","parent","results","create","uniq","eligibleObjects","storages","arrayOfIds","isValid","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","comparator","childLinkName","parentResults","forEach","Array","limit","resultsByKeyId","groupBy","filterAssembledData","slice","SAFE_DOTTED_FIELD_REPLACEMENT","containsDottedFields","pipeline","firewall","$match","sort","$sort","dataPush","indexOf","safeField","$group","$push","$slice","$project","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","collectionNodes","bypassFirewalls","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregate","aggregationResult","document","RegExp","restrictOptions","props","applyFields","method","myParameters","Promise","reject","reason","specialFields","createNodes","addFieldNode","getNodeNamespace","CollectionNode","FieldNode","ReducerNode","dotize","createReducers","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","fieldNodes","isProjectionOperatorExpression","dotted","convert","fieldNode","parts","n","reverse","snapCache","obj","prefix","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","prop","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","getResultsArray","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","isUndefined","sameLevelResults","removeStorageField","shouldCleanStorage","childResults","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","Function","applyPagination","_params","_body","parentObject","fetchOptions","scopeQuery","$exists","collectionNodeResults","runFieldSanityChecks","nodes","scheduledForDeletion","reducers","reducerNodes","_shouldCleanStorage","_node","hasAddedAnyField","projectionOperator","has","split","hasField","checkNested","reduce","acc","last","getField","hasCollectionNode","hasReducerNode","getReducerNode","getCollectionNode","getName","subLinkName","isProjectionOperator","reduceFunction","dependencies","compute","addFieldMap","addReducers","reducerConfig","reducerName","dbField","processedReducers","reducersQueue","shift","allDependenciesComputed","all","dep","includes","flatten","cleanNestedFields","snapCacheField","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","childReducerNode","dots","addFieldIfRequired","nestedFields","startsWith","every","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\n\nexport { default as createQuery } from './lib/createQuery.js';\n\nexport {\n    default as prepareForProcess,\n} from './lib/query/lib/prepareForProcess';\n\nexport { default as Query } from './lib/query/query.client';\n\nexport { default as NamedQuery } from './lib/namedQuery/namedQuery.client';\n\nexport { default as compose } from './lib/compose';\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    },\n});\n","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport { LINK_STORAGE } from './constants.js';\nimport Linker from './linker.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker,\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(\n                `There are no links defined for collection: ${this._name}`\n            );\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(\n                `There is no link ${name} for collection: ${this._name}`\n            );\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1,\n                    },\n                });\n            } else {\n                object = { _id: objectOrId };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(\n                    `We could not find any object with _id: \"${objectOrId}\" within the collection: ${\n                        this._name\n                    }`\n                );\n            }\n        }\n\n        return linkData[name].createLink(object);\n    },\n});\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport { LinkConfigSchema, LinkConfigDefaults } from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport { check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\nimport { access } from 'fs';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() &&\n                this.linkConfig.relatedLinker.linkConfig.unique) ||\n            (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error(\n                'invalid-config',\n                `For the link ${\n                    this.linkName\n                } you did not provide a collection.`\n            );\n        }\n\n        if (typeof this.linkConfig.collection === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error(\n                    'invalid-collection',\n                    `Could not find a collection with the name: ${collectionName}`\n                );\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error(\n                        'invalid-config',\n                        `For the link ${\n                            this.linkName\n                        } you must not use the same name for the field, otherwise it will cause conflicts when fetching data`\n                    );\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const { collection, inversedBy } = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(\n                        `You tried setting up an inversed link in \"${\n                            this.mainCollection._name\n                        }\" pointing to collection: \"${\n                            collection._name\n                        }\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`\n                    );\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            });\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(\n                `There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`\n            );\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker,\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error(\n            'invalid-strategy',\n            `${this.strategy} is not a valid strategy`\n        );\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(\n            /\\./g,\n            '_'\n        );\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(\n                    `There was an error finding the link for removal for collection: \"${\n                        this.mainCollection._name\n                    }\" with link: \"${\n                        this.linkName\n                    }\". This may occur when you do a .remove() before Meteor.startup()`\n                );\n                return;\n            }\n\n            const accessor = this.createLink(doc);\n\n            _.each(accessor.fetchAsArray(), linkedObj => {\n                const { relatedLinker } = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        });\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error(\n                        'You cannot set index on an inversed link.'\n                    );\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    options = { unique: true };\n                }\n\n                this.mainCollection._ensureIndex({ [field]: 1 }, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error(\n                            'You cannot set unique property on an inversed link.'\n                        );\n                    }\n\n                    this.mainCollection._ensureIndex(\n                        {\n                            [field]: 1,\n                        },\n                        { unique: true, sparse: true }\n                    );\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField]),\n                    },\n                });\n            });\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker\n                    .find({}, { fields: { _id: 1 } })\n                    .fetch()\n                    .map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: { $in: ids },\n                });\n            });\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error(\n                'missing-package',\n                `Please add the herteby:denormalize package to your Meteor application in order to make caching work`\n            );\n        }\n\n        const { field, body, bypassSchema } = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type =\n                inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            });\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}\n","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * This is just like fetch() but forces to get an array even if it's single result\n     * \n     * @param {*} filters \n     * @param {*} options \n     * @param  {...any} others \n     */\n    fetchAsArray(filters, options, ...others) {\n        return this.find(filters, options, ...others).fetch()\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    _id: {\n                        $in: _ids\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport {_} from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\nimport {LocalCollection} from 'meteor/minimongo';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            undefined, {\n                scoped: this.options.scoped,\n                subscriptionHandle: this.subscriptionHandle\n            });\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    const isMany = linker.isMany();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                linkStorageField,\n                metaFiltersTest\n            );\n        });\n    }\n\n    if (isMeta && isMany) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(\n                aggregateResults,\n                aggregateResult => {\n                    return _.contains(aggregateResult._id, parentResult._id);\n                }\n            );\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        let comparator;\n        if (isMany) {\n            comparator = (aggregateResult, result) =>\n                _.contains(aggregateResult._id, result._id);\n        } else {\n            comparator = (aggregateResult, result) =>\n                aggregateResult._id == result._id;\n        }\n\n        const childLinkName = childCollectionNode.linkName;\n        const parentResults = childCollectionNode.parent.results;\n\n        parentResults.forEach(parentResult => {\n            // We are now finding the data from the pipeline that is related to the _id of the parent\n            const eligibleAggregateResults = aggregateResults.filter(\n                aggregateResult => comparator(aggregateResult, parentResult)\n            );\n\n            eligibleAggregateResults.forEach(aggregateResult => {\n                if (Array.isArray(parentResult[childLinkName])) {\n                    parentResult[childLinkName].push(...aggregateResult.data);\n                } else {\n                    parentResult[childLinkName] = [...aggregateResult.data];\n                }\n            });\n        });\n\n        aggregateResults.forEach(aggregateResult => {\n            allResults.push(...aggregateResult.data);\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}\n","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\n    if (childCollectionNode.results.length === 0) {\n        return;\n    }\n\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                fieldStorage,\n                metaFiltersTest\n            );\n        });\n    }\n\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n    if (strategy === 'one') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[parentResult[fieldStorage]],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            let data = [];\n            parentResult[fieldStorage].forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'one-meta') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            const _id = parentResult[fieldStorage]._id;\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[_id],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many-meta') {\n        parent.results.forEach(parentResult => {\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\n            let data = [];\n            _ids.forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n};\n\nfunction filterAssembledData(data, { limit, skip }) {\n    if (limit && Array.isArray(data)) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n","import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return (childCollectionNode.results = []);\n    }\n\n    let { filters, options } = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(\n        childCollectionNode,\n        metaFilters\n    );\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection\n            .find(filters, filteredOptions, userId)\n            .fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters,\n        });\n    } else {\n        // virtuals arrive here\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\n            childCollectionNode,\n            filters,\n            options,\n            userId\n        );\n\n        let aggregateResults = collection.aggregate(pipeline);\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(\n            childCollectionNode,\n            aggregateResults,\n            metaFilters\n        );\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nexport const specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\nfunction isProjectionOperatorExpression(body) {\n    if (_.isObject(body)) {\n        const keys = _.keys(body);\n        return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\n    }\n    return false;\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        if (!isProjectionOperatorExpression(body)) {\n            let dotted = dotize.convert({[fieldName]: body});\n            _.each(dotted, (value, key) => {\n                root.add(new FieldNode(key, value));\n            });\n        }\n        else {\n            root.add(new FieldNode(fieldName, body, true));\n        }\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * Returns namespace for node when using query path scoping.\n *\n * @param node\n * @returns {String}\n */\nexport function getNodeNamespace(node) {\n    const parts = [];\n    let n = node;\n    while (n) {\n        const name = n.linker ? n.linker.linkName : n.collection._name;\n        parts.push(name);\n        // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\n        n = n.parent;\n    }\n    return parts.reverse().join('_');\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    storeOneResults(node, node.results);\n\n    applyReducers(node, params);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    cleanReducerLeftovers(node, node.results);\n\n    removeLinkStorages(node, node.results);\n\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\nexport function getResultsArray(results) {\n    if (_.isArray(results)) {\n        return results;\n    }\n    else if (_.isUndefined(results)) {\n        return [];\n    }\n    return [results];\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    sameLevelResults = getResultsArray(sameLevelResults);\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n     \n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                if (collectionNode.isVirtual) {\n                    const childResults = getResultsArray(result[collectionNode.linkName]);\n                    _.each(childResults, childResult => {\n                        delete childResult[collectionNode.linkStorageField];\n                    });\n                } else {\n                    delete result[collectionNode.linkStorageField];\n                }\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            // The reason we are doing this is that if the requested link does not exist\n            // It will fail when we try to get undefined[something] below\n            if (result === undefined) {\n                return;\n            }\n\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            _.each(sameLevelResults, result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    // parentResults might be an object (for type==one links)\n    parentResults = getResultsArray(parentResults);\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            if (node.isOneResult) {\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n            }\n            else {\n                parentResult[linkName] = parentResult[linkName].map(object => {\n                    return Object.assign({}, object);\n                });\n            }\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    parentResults = getResultsArray(parentResults);\n\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                if (node.isOneResult) {\n                    if (_.isObject(childResult)) {\n                        const storage = childResult[node.linkStorageField];\n                        storeMetadata(childResult, parentResult, storage, true);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        const storage = object[node.linkStorageField];\n                        storeMetadata(object, parentResult, storage, true);\n                    });\n                }\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                if (node.isOneResult) {\n                    if (childResult) {\n                        storeMetadata(childResult, parentResult, storage, false);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        storeMetadata(object, parentResult, storage, false);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\nimport {getNodeNamespace} from './createGraph';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @param fetchOptions\n * @returns {*}\n */\nfunction fetch(node, parentObject, fetchOptions = {}) {\n    let {filters, options} = applyProps(node);\n    // add subscription filter\n    if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\n        _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\n    }\n    // add query path filter\n    if (fetchOptions.scoped) {\n        _.extend(filters, {[`_query_path_${getNodeNamespace(node)}`]: {$exists: true}});\n    }\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            const collectionNodeResults = fetch(collectionNode, result);\n            result[collectionNode.linkName] = collectionNodeResults;\n            //delete result[node.linker.linkStorageField];\n\n            /**\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n             * the results?\n             *\n             * Other possible ways:\n             * - do something like assemble() in storeHypernovaResults\n             * - pass node.results to accessor above and find with sift\n             */\n\n            collectionNode.results.push(...collectionNodeResults);\n\n            // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \n            // found first\n            // const currentIds = _.pluck(collectionNode.results, '_id');\n            // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params, fetchOptions) => {\n    node.results = fetch(node, null, fetchOptions);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', `The field \"${linkName}\" is a collection link, and should have its body defined as an object.`);\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (node instanceof FieldNode) {\n            runFieldSanityChecks(node.name);\n        }\n        \n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            /**\n             * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\n             * Therefore, we do not count this as a field addition.\n             * \n             * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\n             * The $meta expression specifies the inclusion of the field to the result set \n             * and does not specify the exclusion of the other fields.\n             */\n            if (n.projectionOperator !== '$meta') {\n                hasAddedAnyField = true;\n            }\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter, conditional operators and text search\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {\n                _id: 1,\n                // fields might contain $meta expression, so it should be added here,\n                ...options.fields,\n            };\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName, checkNested = false) {\n        // for checkNested flag it expands profile.phone.verified into \n        // ['profile', 'profile.phone', 'profile.phone.verified']\n        // if any of these fields match it means that field exists\n        const options = checkNested ? fieldName.split('.').reduce((acc, key) => {\n            if (acc.length === 0) {\n                return [key];\n            }\n            const [last] = acc;\n            return [...acc, `${last}.${key}`];\n        }, []) : [fieldName];\n\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return _.contains(options, fieldNode.name);\n        });\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n\n/**\n * Make sure that the field is ok to be added\n * @param {*} fieldName \n */\nexport function runFieldSanityChecks(fieldName) {\n    // Run sanity checks on the field\n    if (fieldName[0] === '$') {\n        throw new Error(`You are not allowed to use fields that start with $ inside a reducer's body: ${fieldName}`);\n    }\n\n    return true;\n}\n","export default class FieldNode {\n    constructor(name, body, isProjectionOperator = false) {\n        this.name = name;\n        this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\n        this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n        this.dependencies = []; // This is a list of the reducer this reducer uses.\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n","/**\n * @param {[niceField: string]: dbField} map\n */\nexport default function addFieldMap(map) {\n    const collection = this;\n    let reducers = {};\n    for (let key in map) {\n        const dbField = map[key];\n        reducers[key] = {\n            body: {\n                [dbField]: 1,\n            },\n            reduce(obj) {\n                return obj[dbField];\n            },\n        };\n    }\n\n    collection.addReducers(reducers);\n}\n","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    const processedReducers = [];\n    let reducersQueue = [...root.reducerNodes];\n\n    // TODO: find out if there's an infinite reducer inter-deendency\n\n    while (reducersQueue.length) {\n        const reducerNode = reducersQueue.shift();\n\n        // If this reducer depends on other reducers\n        if (reducerNode.dependencies.length) {\n            // If there is an unprocessed reducer, move it at the end of the queue\n            const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n            if (allDependenciesComputed) {\n                root.results.forEach(result => {\n                    reducerNode.compute(result, params);\n                });\n                processedReducers.push(reducerNode.name);\n            } else {\n                // Move it at the end of the queue\n                reducersQueue.push(reducerNode);\n            }\n        } else {\n            root.results.forEach(result => {\n                reducerNode.compute(result, params);\n            });\n\n            processedReducers.push(reducerNode.name);\n        }\n    }\n}\n","import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root, results) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        let childResults;\n        if (node.isOneResult) {\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n        } else {\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n        }\n\n        cleanReducerLeftovers(node, childResults);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(\n        parts, \n        results\n            .filter(result => !!result[fieldName])\n            .map(result => result[fieldName]),\n        root\n    );\n    \n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\nimport { specialFields } from '../../lib/createGraph';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(reducer, root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(reducerNode, root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(reducerNode, fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        reducerNode.dependencies.push(fieldName);\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, {body, reduce}, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let childReducerNode = new ReducerNode(fieldName, {body, reduce});\n        root.add(childReducerNode);\n        childReducerNode.scheduledForDeletion = true;\n\n        _.each(childReducerNode.body, (body, fieldName) => {\n            handleAddElement(childReducerNode, root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(reducerNode, fieldName, body, parent, linker) {\n    if (parent.hasCollectionNode(fieldName)) {\n        const collectionNode = parent.getCollectionNode(fieldName);\n\n        embedReducerWithLink(reducerNode, body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        parent.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.contains(specialFields, fieldName)) {\n        root.addProp(fieldName, body);\n\n        return;\n    }\n\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        // if it's a prop\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            addFieldIfRequired(root, key, value);\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        addFieldIfRequired(root, fieldName, body);\n    }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n    if (!root.hasField(fieldName, true)) {\n        /**\n         * Check if there are any nested fields for this field.\n         * Adding root field here and scheduling for deletion would not work if there is already nested field, \n         * for example:\n         * when trying to add meta: 1, it should be checked that there are no meta.* fields\n         * */\n\n        const nestedFields = root.fieldNodes.filter(({name}) => name.startsWith(`${fieldName}.`));\n        // remove nested fields - important for minimongo which complains for these situations\n        // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n        // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n        // and removing anything else\n        nestedFields.forEach(node => root.remove(node));\n \n        let fieldNode = new FieldNode(fieldName, body);\n        // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n        fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n\n        root.add(fieldNode);\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    if (linker.isDenormalized()) {\n                        if (linker.isSubBodyDenormalized(value)) {\n                            const cacheField = linker.linkConfig.denormalize.field;\n                            handleAddField(cacheField, value, collectionNode);\n                            return;\n                        }\n                    }\n\n                    embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(reducerNode, collectionNode, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}}]