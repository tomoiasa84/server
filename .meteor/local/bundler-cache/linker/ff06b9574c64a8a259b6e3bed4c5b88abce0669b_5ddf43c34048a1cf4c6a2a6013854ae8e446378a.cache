[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"db\":{\"contacts\":{\"collection.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/db/contacts/collection.js                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet ContactsSchema;\nmodule.link(\"./schema\", {\n  default(v) {\n    ContactsSchema = v;\n  }\n\n}, 1);\nlet Contacts = new Mongo.Collection(\"contacts\");\nContacts.attachSchema(ContactsSchema);\nmodule.exportDefault(Contacts);\n///////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/db/contacts/schema.js                                     //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(new SimpleSchema({\n  _id: String,\n  emailAddresses: {\n    type: Array,\n    defaultValue: []\n  },\n  'emailAddresses.$': {\n    type: Object,\n    blackbox: true\n  },\n  company: String,\n  familyName: String,\n  givenName: String,\n  jobTitle: String,\n  middleName: String,\n  phoneNumbers: {\n    type: Array,\n    defaultValue: []\n  },\n  'phoneNumbers.$': {\n    type: Object,\n    blackbox: true\n  },\n  hasThumbnail: Boolean,\n  thumbnailPath: String,\n  postalAddresses: {\n    type: Array,\n    defaultValue: []\n  },\n  'postalAddresses.$': {\n    type: Object,\n    blackbox: true\n  },\n  birthday: {\n    type: Object,\n    blackbox: true\n  },\n  tags: {\n    type: Array,\n    defaultValue: []\n  },\n  'tags.$': {\n    type: String,\n    blackbox: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  }\n}, {\n  requiredByDefault: false\n}));\n///////////////////////////////////////////////////////////////////////\n\n}},\"recommandations\":{\"collection.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/db/recommandations/collection.js                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet RecommandationSchema;\nmodule.link(\"./schema\", {\n  default(v) {\n    RecommandationSchema = v;\n  }\n\n}, 1);\nlet Recommandations = new Mongo.Collection(\"recommandations\");\nRecommandations.attachSchema(RecommandationSchema);\nmodule.exportDefault(Recommandations);\n///////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/db/recommandations/schema.js                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(new SimpleSchema({\n  _id: String,\n  tags: {\n    type: Array,\n    defaultValue: []\n  },\n  'tags.$': {\n    type: String,\n    blackbox: true\n  },\n  text: String,\n  commentIds: {\n    type: Array\n  },\n  'commentIds.$': {\n    type: String,\n    blackbox: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  }\n}, {\n  requiredByDefault: false\n}));\n///////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/db/index.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"./contacts/collection\");\nmodule.link(\"./recommandations/collection\");\n///////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"server\":{\"graphql.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/graphql.js                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"../../api/load\");\n///////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/index.js                                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet initialize;\nmodule.link(\"meteor/cultofcoders:apollo\", {\n  initialize(v) {\n    initialize = v;\n  }\n\n}, 0);\nmodule.link(\"./graphql\");\nmodule.link(\"../../db\");\ninitialize();\n///////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"User.gql\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.gql                                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"./User.gql.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////\n\n},\"User.gql.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.gql.js                                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":79}};\n    doc.loc.source = {\"body\":\"type User {\\n    id: ID\\n    name: String\\n}\\n\\ntype Query {\\n    users: [User]    \\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n///////////////////////////////////////////////////////////////////////\n\n},\"User.resolver.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/User.resolver.js                                      //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.exportDefault({\n  Query: {\n    users: (_, args, ctx) => Promise.asyncApply(() => {\n      const users = Promise.await(knex('userx').select());\n      return users;\n    })\n  }\n});\n///////////////////////////////////////////////////////////////////////\n\n},\"load.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/load.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet load;\nmodule.link(\"graphql-load\", {\n  load(v) {\n    load = v;\n  }\n\n}, 0);\nlet UserType;\nmodule.link(\"./User\", {\n  default(v) {\n    UserType = v;\n  }\n\n}, 1);\nlet UserResolver;\nmodule.link(\"./User.resolver\", {\n  default(v) {\n    UserResolver = v;\n  }\n\n}, 2);\nload({\n  typeDefs: [UserType],\n  resolvers: [UserResolver]\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},\"knexfile.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// knexfile.js                                                       //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.exports = {\n  development: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  },\n  staging: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  },\n  production: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD,\n      ssl: true\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////\n\n},\"server\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"../imports/startup/server\");\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".gql\"\n  ]\n});\n\nrequire(\"/knexfile.js\");\nrequire(\"/server/main.js\");","hash":"4f2061e0495dc7c321cf1b4ee1c4b5b5a53a8137","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/db/contacts/collection.js","imports/db/contacts/schema.js","imports/db/recommandations/collection.js","imports/db/recommandations/schema.js","imports/db/index.js","imports/startup/server/graphql.js","imports/startup/server/index.js","imports/api/User.resolver.js","imports/api/load.js","knexfile.js","server/main.js"],"names":["Mongo","module","link","v","ContactsSchema","default","Contacts","Collection","attachSchema","exportDefault","SimpleSchema","_id","String","emailAddresses","type","Array","defaultValue","Object","blackbox","company","familyName","givenName","jobTitle","middleName","phoneNumbers","hasThumbnail","Boolean","thumbnailPath","postalAddresses","birthday","tags","createdAt","Date","autoValue","isInsert","requiredByDefault","RecommandationSchema","Recommandations","text","commentIds","initialize","Query","users","_","args","ctx","knex","select","load","UserType","UserResolver","typeDefs","resolvers","exports","development","client","connection","host","process","env","PGHOST","database","PGDATABASE","user","DBUSER","password","PGPASSWORD","pool","min","max","migrations","tableName","staging","production","ssl"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport ContactsSchema from './schema';\n\nlet Contacts = new Mongo.Collection(\"contacts\");\n\nContacts.attachSchema(ContactsSchema);\n\nexport default Contacts;","import SimpleSchema from 'simpl-schema';\n\nexport default new SimpleSchema({\n    _id: String,\n    emailAddresses: {\n        type: Array,\n        defaultValue: []\n    },\n    'emailAddresses.$': {\n        type: Object,\n        blackbox: true\n    },\n    company: String,\n    familyName: String,\n    givenName: String,\n    jobTitle: String,\n    middleName: String,\n    phoneNumbers: {\n        type: Array,\n        defaultValue: []\n    },\n    'phoneNumbers.$': {\n        type: Object,\n        blackbox: true\n    },\n    hasThumbnail: Boolean,\n    thumbnailPath: String,\n    postalAddresses: {\n        type: Array,\n        defaultValue: []\n    },\n    'postalAddresses.$': {\n        type: Object,\n        blackbox: true\n    },\n    birthday: {\n        type: Object,\n        blackbox: true\n    },\n    tags: {\n        type: Array,\n        defaultValue: []\n    },\n    'tags.$': {\n        type: String,\n        blackbox: true\n    },\n    createdAt: {\n        type: Date,\n        autoValue: function() {\n            if ( this.isInsert ) {\n                return new Date;\n            }\n        }\n    }\n}, { requiredByDefault: false });","import { Mongo } from 'meteor/mongo';\nimport RecommandationSchema from './schema';\n\nlet Recommandations = new Mongo.Collection(\"recommandations\");\n\nRecommandations.attachSchema(RecommandationSchema);\n\nexport default Recommandations;","import SimpleSchema from 'simpl-schema';\n\nexport default new SimpleSchema({\n    _id: String,\n    tags: {\n        type: Array,\n        defaultValue: []\n    },\n    'tags.$': {\n        type: String,\n        blackbox: true\n    },\n    text: String,\n    commentIds: {\n        type: Array\n    },\n    'commentIds.$': {\n        type: String,\n        blackbox: true\n    },\n    createdAt: {\n        type: Date,\n        autoValue: function() {\n            if ( this.isInsert ) {\n                return new Date;\n            }\n        }\n    }\n}, { requiredByDefault: false });","\nimport './contacts/collection';\n// import './contacts/reducers';\nimport './recommandations/collection'","import '../../api/load';","import { initialize } from 'meteor/cultofcoders:apollo';\n\nimport './graphql';\nimport '../../db';\n\ninitialize();\n\n\n","\n\nexport default {\n    Query:{\n       \n       users: async (_, args, ctx) => {\n        const users = await knex('userx').select()\n        return users\n       }\n      }\n}\n\n","import { load } from 'graphql-load';\nimport UserType from './User';\nimport UserResolver from './User.resolver';\n\nload({\n    typeDefs: [UserType],\n    resolvers: [UserResolver],\n\n});","module.exports = {\n  development: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  },\n\n  staging: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  },\n\n  production: {\n    client: \"postgresql\",\n    connection: {\n      host: process.env.PGHOST,\n      database: process.env.PGDATABASE,\n      user: process.env.DBUSER,\n      password: process.env.PGPASSWORD,\n      ssl: true\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: \"knex_migrations\"\n    }\n  }\n};","import '../imports/startup/server';"]}}]