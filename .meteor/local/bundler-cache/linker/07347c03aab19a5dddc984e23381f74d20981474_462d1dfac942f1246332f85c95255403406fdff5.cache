[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"entities\":{\"Comment.gql\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Comment.gql                                             //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./Comment.gql.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Comment.gql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Comment.gql.js                                          //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Comment\"},\"interfaces\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"mongo\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"comments\",\"block\":false}}]}],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"recommandationId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"contactId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"comment\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Contact\"}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"field\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"contactId\",\"block\":false}}]}]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":175}};\n    doc.loc.source = {\"body\":\"type Comment @mongo(name: \\\"comments\\\") {\\n  _id: String!,\\n  recommandationId: String!,\\n  contactId: String!,\\n  comment: Contact @link(field: \\\"contactId\\\"),\\n  createdAt: String!\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Contact.gql\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Contact.gql                                             //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./Contact.gql.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Contact.gql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Contact.gql.js                                          //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Contact\"},\"interfaces\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"mongo\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"contacts\",\"block\":false}}]}],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"field\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"userId\",\"block\":false}}]}]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"emailAddresses\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"EmailAddresses\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"company\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"familyName\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"givenName\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"jobTitle\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"middleName\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phoneNumbers\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PhoneNumber\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"hasThumbnail\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"thumbnailPath\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"postalAddresses\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PostalAddresses\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"birthday\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Birthday\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tags\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Date\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PhoneNumber\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"label\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"number\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"EmailAddresses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"label\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PostalAddresses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"street\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"city\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"state\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"region\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"postCode\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"country\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"label\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Birthday\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"day\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":747}};\n    doc.loc.source = {\"body\":\"type Contact @mongo(name: \\\"contacts\\\") {\\n  _id: String!,\\n  userId: String,\\n  user: User @link(field: \\\"userId\\\"),\\n  emailAddresses: [EmailAddresses],\\n  company: String,\\n  familyName: String,\\n  givenName: String,\\n  jobTitle: String,\\n  middleName: String,\\n  phoneNumbers: [PhoneNumber],\\n  hasThumbnail: Boolean,\\n  thumbnailPath: String,\\n  postalAddresses: [PostalAddresses],\\n  birthday: Birthday,\\n  tags: [String],\\n  createdAt: Date \\n}\\n\\ntype PhoneNumber {\\n  label: String\\n  number: String\\n}\\n\\ntype EmailAddresses {\\n  label: String\\n  email: String\\n}\\n\\ntype PostalAddresses {\\n  street: String\\n  city: String\\n  state: String\\n  region: String\\n  postCode: String\\n  country: String\\n  label: String\\n}\\n\\ntype Birthday {\\n  year: Float\\n  month: Float\\n  day: Float\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Recommandation.gql\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Recommandation.gql                                      //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./Recommandation.gql.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Recommandation.gql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Recommandation.gql.js                                   //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Recommandation\"},\"interfaces\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"mongo\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"recommandations\",\"block\":false}}]}],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tags\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"commentIds\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"field\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"userId\",\"block\":false}}]}]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"comments\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Comment\"}}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"field\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"commentIds\",\"block\":false}}]}]}]}],\"loc\":{\"start\":0,\"end\":233}};\n    doc.loc.source = {\"body\":\"type Recommandation @mongo(name: \\\"recommandations\\\") {\\n  _id: String!,\\n  tags: [String],\\n  text: String,\\n  commentIds: [String],\\n  userId: String,\\n  user: User @link(field: \\\"userId\\\"),\\n  comments: [Comment] @link(field: \\\"commentIds\\\")\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"User.gql\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/User.gql                                                //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./User.gql.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"User.gql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/User.gql.js                                             //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"},\"interfaces\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"mongo\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"users\",\"block\":false}}]}],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"profile\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UserProfile\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"contacts\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Contact\"}}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"user\",\"block\":false}}]}]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"recommandations\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Recommandation\"}}},\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"user\",\"block\":false}}]}]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"UserProfile\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":222}};\n    doc.loc.source = {\"body\":\"type User @mongo(name: \\\"users\\\") {\\n  _id: String!\\n  username: String\\n  profile: UserProfile\\n  contacts: [Contact] @link(to: \\\"user\\\")\\n  recommandations: [Recommandation] @link(to: \\\"user\\\")\\n}\\n\\ntype UserProfile {\\n name: String\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Userx.gql\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Userx.gql                                               //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./Userx.gql.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"Userx.gql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/Userx.gql.js                                            //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Userx\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Userx\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":78}};\n    doc.loc.source = {\"body\":\"type Query {\\n    users: [Userx]\\n}\\n\\ntype Userx {\\n    id: ID!\\n    name: String\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/entities/index.js                                                //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet ContactType;\nmodule.watch(require(\"./Contact\"), {\n  default(v) {\n    ContactType = v;\n  }\n\n}, 0);\nlet RecommandationType;\nmodule.watch(require(\"./Recommandation\"), {\n  default(v) {\n    RecommandationType = v;\n  }\n\n}, 1);\nlet CommentType;\nmodule.watch(require(\"./Comment\"), {\n  default(v) {\n    CommentType = v;\n  }\n\n}, 2);\nlet UserType;\nmodule.watch(require(\"./User\"), {\n  default(v) {\n    UserType = v;\n  }\n\n}, 3);\nlet UserxType;\nmodule.watch(require(\"./Userx\"), {\n  default(v) {\n    UserxType = v;\n  }\n\n}, 4);\nmodule.exportDefault({\n  typeDefs: [ContactType, RecommandationType, CommentType, UserType, UserxType]\n});\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"load.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/api/load.js                                                          //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet load;\nmodule.watch(require(\"graphql-load\"), {\n  load(v) {\n    load = v;\n  }\n\n}, 0);\nlet Entities;\nmodule.watch(require(\"./entities\"), {\n  default(v) {\n    Entities = v;\n  }\n\n}, 1);\nload({\n  //Entities,\n  Entities,\n  resolvers: {\n    Query: {\n      users: () => 'Hello!'\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"db\":{\"contacts\":{\"collection.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/db/contacts/collection.js                                            //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet ContactsSchema;\nmodule.watch(require(\"./schema\"), {\n  default(v) {\n    ContactsSchema = v;\n  }\n\n}, 1);\nlet Contacts = new Mongo.Collection(\"contacts\");\nContacts.attachSchema(ContactsSchema);\nmodule.exportDefault(Contacts);\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/db/contacts/schema.js                                                //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(new SimpleSchema({\n  _id: String,\n  emailAddresses: {\n    type: Array,\n    defaultValue: []\n  },\n  'emailAddresses.$': {\n    type: Object,\n    blackbox: true\n  },\n  company: String,\n  familyName: String,\n  givenName: String,\n  jobTitle: String,\n  middleName: String,\n  phoneNumbers: {\n    type: Array,\n    defaultValue: []\n  },\n  'phoneNumbers.$': {\n    type: Object,\n    blackbox: true\n  },\n  hasThumbnail: Boolean,\n  thumbnailPath: String,\n  postalAddresses: {\n    type: Array,\n    defaultValue: []\n  },\n  'postalAddresses.$': {\n    type: Object,\n    blackbox: true\n  },\n  birthday: {\n    type: Object,\n    blackbox: true\n  },\n  tags: {\n    type: Array,\n    defaultValue: []\n  },\n  'tags.$': {\n    type: String,\n    blackbox: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  }\n}, {\n  requiredByDefault: false\n}));\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"recommandations\":{\"collection.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/db/recommandations/collection.js                                     //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet RecommandationSchema;\nmodule.watch(require(\"./schema\"), {\n  default(v) {\n    RecommandationSchema = v;\n  }\n\n}, 1);\nlet Recommandations = new Mongo.Collection(\"recommandations\");\nRecommandations.attachSchema(RecommandationSchema);\nmodule.exportDefault(Recommandations);\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/db/recommandations/schema.js                                         //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nmodule.exportDefault(new SimpleSchema({\n  _id: String,\n  tags: {\n    type: Array,\n    defaultValue: []\n  },\n  'tags.$': {\n    type: String,\n    blackbox: true\n  },\n  text: String,\n  commentIds: {\n    type: Array\n  },\n  'commentIds.$': {\n    type: String,\n    blackbox: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  }\n}, {\n  requiredByDefault: false\n}));\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/db/index.js                                                          //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"./contacts/collection\"));\nmodule.watch(require(\"./recommandations/collection\"));\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"server\":{\"graphql.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/startup/server/graphql.js                                            //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"../../api/load\"));\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// imports/startup/server/index.js                                              //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nlet initialize;\nmodule.watch(require(\"meteor/cultofcoders:apollo\"), {\n  initialize(v) {\n    initialize = v;\n  }\n\n}, 0);\nmodule.watch(require(\"./graphql\"));\nmodule.watch(require(\"../../db\"));\ninitialize();\n//////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// server/main.js                                                               //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nmodule.watch(require(\"../imports/startup/server\"));\n//////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".gql\"\n  ]\n});\nrequire(\"/server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/entities/index.js","imports/api/load.js","imports/db/contacts/collection.js","imports/db/contacts/schema.js","imports/db/recommandations/collection.js","imports/db/recommandations/schema.js","imports/db/index.js","imports/startup/server/graphql.js","imports/startup/server/index.js","server/main.js"],"names":["ContactType","module","watch","require","default","v","RecommandationType","CommentType","UserType","UserxType","exportDefault","typeDefs","load","Entities","resolvers","Query","users","Mongo","ContactsSchema","Contacts","Collection","attachSchema","SimpleSchema","_id","String","emailAddresses","type","Array","defaultValue","Object","blackbox","company","familyName","givenName","jobTitle","middleName","phoneNumbers","hasThumbnail","Boolean","thumbnailPath","postalAddresses","birthday","tags","createdAt","Date","autoValue","isInsert","requiredByDefault","RecommandationSchema","Recommandations","text","commentIds","initialize"],"mappings":"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","file":"/app.js","sourcesContent":["import ContactType from './Contact';\nimport RecommandationType from './Recommandation';\nimport CommentType from './Comment'\nimport UserType from './User'\nimport UserxType from './Userx'\n\nexport default {\n    typeDefs: [ContactType, RecommandationType, CommentType, UserType, UserxType ]\n}","import { load } from 'graphql-load';\nimport Entities from './entities';\n\n\nload({\n    //Entities,\n    Entities,\n    resolvers: {\n        Query: {\n            users: () => 'Hello!'\n\n        }\n    },\n\n});","import { Mongo } from 'meteor/mongo';\nimport ContactsSchema from './schema';\n\nlet Contacts = new Mongo.Collection(\"contacts\");\n\nContacts.attachSchema(ContactsSchema);\n\nexport default Contacts;","import SimpleSchema from 'simpl-schema';\n\nexport default new SimpleSchema({\n    _id: String,\n    emailAddresses: {\n        type: Array,\n        defaultValue: []\n    },\n    'emailAddresses.$': {\n        type: Object,\n        blackbox: true\n    },\n    company: String,\n    familyName: String,\n    givenName: String,\n    jobTitle: String,\n    middleName: String,\n    phoneNumbers: {\n        type: Array,\n        defaultValue: []\n    },\n    'phoneNumbers.$': {\n        type: Object,\n        blackbox: true\n    },\n    hasThumbnail: Boolean,\n    thumbnailPath: String,\n    postalAddresses: {\n        type: Array,\n        defaultValue: []\n    },\n    'postalAddresses.$': {\n        type: Object,\n        blackbox: true\n    },\n    birthday: {\n        type: Object,\n        blackbox: true\n    },\n    tags: {\n        type: Array,\n        defaultValue: []\n    },\n    'tags.$': {\n        type: String,\n        blackbox: true\n    },\n    createdAt: {\n        type: Date,\n        autoValue: function() {\n            if ( this.isInsert ) {\n                return new Date;\n            }\n        }\n    }\n}, { requiredByDefault: false });","import { Mongo } from 'meteor/mongo';\nimport RecommandationSchema from './schema';\n\nlet Recommandations = new Mongo.Collection(\"recommandations\");\n\nRecommandations.attachSchema(RecommandationSchema);\n\nexport default Recommandations;","import SimpleSchema from 'simpl-schema';\n\nexport default new SimpleSchema({\n    _id: String,\n    tags: {\n        type: Array,\n        defaultValue: []\n    },\n    'tags.$': {\n        type: String,\n        blackbox: true\n    },\n    text: String,\n    commentIds: {\n        type: Array\n    },\n    'commentIds.$': {\n        type: String,\n        blackbox: true\n    },\n    createdAt: {\n        type: Date,\n        autoValue: function() {\n            if ( this.isInsert ) {\n                return new Date;\n            }\n        }\n    }\n}, { requiredByDefault: false });","\nimport './contacts/collection';\n// import './contacts/reducers';\nimport './recommandations/collection'","import '../../api/load';","import { initialize } from 'meteor/cultofcoders:apollo';\n\nimport './graphql';\nimport '../../db';\n\ninitialize();","import '../imports/startup/server';"]}}]