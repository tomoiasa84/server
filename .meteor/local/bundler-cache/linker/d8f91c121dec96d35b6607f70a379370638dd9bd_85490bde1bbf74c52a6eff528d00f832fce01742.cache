[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Promise = Package.promise.Promise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Mongo = Package.mongo.Mongo;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\n\n/* Package-scope variables */\nvar ids, what, params, body, cacher, dotize;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:grapher\":{\"main.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/main.client.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.watch(require(\"./lib/extension.js\"));\nmodule.watch(require(\"./lib/links/extension.js\"));\nmodule.watch(require(\"./lib/query/reducers/extension.js\"));\nmodule.watch(require(\"./lib/createQuery.js\"), {\n  default(v) {\n    exports.createQuery = v;\n  }\n\n}, 0);\nmodule.watch(require(\"./lib/query/lib/prepareForProcess\"), {\n  default(v) {\n    exports.prepareForProcess = v;\n  }\n\n}, 1);\nmodule.watch(require(\"./lib/query/query.client\"), {\n  default(v) {\n    exports.Query = v;\n  }\n\n}, 2);\nmodule.watch(require(\"./lib/namedQuery/namedQuery.client\"), {\n  default(v) {\n    exports.NamedQuery = v;\n  }\n\n}, 3);\nmodule.watch(require(\"./lib/compose\"), {\n  default(v) {\n    exports.compose = v;\n  }\n\n}, 4);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"compose.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/compose.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet deepExtend;\nmodule.watch(require(\"deep-extend\"), {\n  default(v) {\n    deepExtend = v;\n  }\n\n}, 0);\nmodule.exportDefault(function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return deepExtend({}, ...args);\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createQuery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/createQuery.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\nmodule.exportDefault(function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'string') {\n    let [name, body, options] = args;\n    options = options || {}; // It's a resolver query\n\n    if (_.isFunction(body)) {\n      return createNamedQuery(name, null, body, options);\n    }\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      throw new Meteor.Error('invalid-name', \"We could not find any collection with the name \\\"\".concat(entryPointName, \"\\\". Make sure it is imported prior to using this\"));\n    }\n\n    return createNamedQuery(name, collection, body[entryPointName], options);\n  } else {\n    // Query Creation, it can have an endpoint as collection or as a NamedQuery\n    let [body, options] = args;\n    options = options || {};\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n        console.warn(\"You are creating a query with the entry point \\\"\".concat(entryPointName, \"\\\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.\"));\n      }\n\n      return createNamedQuery(entryPointName, null, {}, {\n        params: body[entryPointName]\n      });\n    } else {\n      return createNormalQuery(collection, body[entryPointName], options);\n    }\n  }\n});\n\nfunction createNamedQuery(name, collection, body) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  // if it exists already, we re-use it\n  const namedQuery = NamedQueryStore.get(name);\n  let query;\n\n  if (!namedQuery) {\n    query = new NamedQuery(name, collection, body, options);\n    NamedQueryStore.add(name, query);\n  } else {\n    query = namedQuery.clone(options.params);\n  }\n\n  return query;\n}\n\nfunction createNormalQuery(collection, body, options) {\n  return new Query(collection, body, options);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/extension.js                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n  createQuery() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'string') {\n      //NamedQuery\n      const [name, body, options] = args;\n      const query = new NamedQuery(name, this, body, options);\n      NamedQueryStore.add(name, query);\n      return query;\n    } else {\n      const [body, options] = args;\n      return new Query(this, body, options);\n    }\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links\":{\"config.schema.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/config.schema.js                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  DenormalizeSchema: () => DenormalizeSchema,\n  LinkConfigDefaults: () => LinkConfigDefaults,\n  LinkConfigSchema: () => LinkConfigSchema\n});\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst DenormalizeSchema = {\n  field: String,\n  body: Object,\n  bypassSchema: Match.Maybe(Boolean)\n};\nconst LinkConfigDefaults = {\n  type: 'one'\n};\nconst LinkConfigSchema = {\n  type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n  collection: Match.Maybe(Match.Where(collection => {\n    // We do like this so it works with other types of collections \n    // like FS.Collection\n    return _.isObject(collection) && (collection instanceof Mongo.Collection || !!collection._collection);\n  })),\n  field: Match.Maybe(String),\n  metadata: Match.Maybe(Boolean),\n  inversedBy: Match.Maybe(String),\n  index: Match.Maybe(Boolean),\n  unique: Match.Maybe(Boolean),\n  autoremove: Match.Maybe(Boolean),\n  denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema))\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/constants.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  LINK_STORAGE: () => LINK_STORAGE\n});\nconst LINK_STORAGE = '__links';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/extension.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LINK_STORAGE;\nmodule.watch(require(\"./constants.js\"), {\n  LINK_STORAGE(v) {\n    LINK_STORAGE = v;\n  }\n\n}, 1);\nlet Linker;\nmodule.watch(require(\"./linker.js\"), {\n  default(v) {\n    Linker = v;\n  }\n\n}, 2);\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * The data we add should be valid for config.schema.js\n   */\n  addLinks(data) {\n    if (!this[LINK_STORAGE]) {\n      this[LINK_STORAGE] = {};\n    }\n\n    _.each(data, (linkConfig, linkName) => {\n      if (this[LINK_STORAGE][linkName]) {\n        throw new Meteor.Error(\"You cannot add the link with name: \".concat(linkName, \" because it was already added to \").concat(this._name, \" collection\"));\n      }\n\n      const linker = new Linker(this, linkName, linkConfig);\n\n      _.extend(this[LINK_STORAGE], {\n        [linkName]: linker\n      });\n    });\n  },\n\n  getLinks() {\n    return this[LINK_STORAGE];\n  },\n\n  getLinker(name) {\n    if (this[LINK_STORAGE]) {\n      return this[LINK_STORAGE][name];\n    }\n  },\n\n  hasLink(name) {\n    if (!this[LINK_STORAGE]) {\n      return false;\n    }\n\n    return !!this[LINK_STORAGE][name];\n  },\n\n  getLink(objectOrId, name) {\n    let linkData = this[LINK_STORAGE];\n\n    if (!linkData) {\n      throw new Meteor.Error(\"There are no links defined for collection: \".concat(this._name));\n    }\n\n    if (!linkData[name]) {\n      throw new Meteor.Error(\"There is no link \".concat(name, \" for collection: \").concat(this._name));\n    }\n\n    const linker = linkData[name];\n    let object = objectOrId;\n\n    if (typeof objectOrId == 'string') {\n      if (!linker.isVirtual()) {\n        object = this.findOne(objectOrId, {\n          fields: {\n            [linker.linkStorageField]: 1\n          }\n        });\n      } else {\n        object = {\n          _id: objectOrId\n        };\n      }\n\n      if (!object) {\n        throw new Meteor.Error(\"We could not find any object with _id: \\\"\".concat(objectOrId, \"\\\" within the collection: \").concat(this._name));\n      }\n    }\n\n    return linkData[name].createLink(object);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linker.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linker.js                                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Linker\n});\nlet LinkMany;\nmodule.watch(require(\"./linkTypes/linkMany.js\"), {\n  default(v) {\n    LinkMany = v;\n  }\n\n}, 0);\nlet LinkManyMeta;\nmodule.watch(require(\"./linkTypes/linkManyMeta.js\"), {\n  default(v) {\n    LinkManyMeta = v;\n  }\n\n}, 1);\nlet LinkOne;\nmodule.watch(require(\"./linkTypes/linkOne.js\"), {\n  default(v) {\n    LinkOne = v;\n  }\n\n}, 2);\nlet LinkOneMeta;\nmodule.watch(require(\"./linkTypes/linkOneMeta.js\"), {\n  default(v) {\n    LinkOneMeta = v;\n  }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.watch(require(\"./config.schema.js\"), {\n  LinkConfigSchema(v) {\n    LinkConfigSchema = v;\n  },\n\n  LinkConfigDefaults(v) {\n    LinkConfigDefaults = v;\n  }\n\n}, 4);\nlet smartArguments;\nmodule.watch(require(\"./linkTypes/lib/smartArguments\"), {\n  default(v) {\n    smartArguments = v;\n  }\n\n}, 5);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 6);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 7);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 8);\n\nclass Linker {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  constructor(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  get oneTypes() {\n    return ['one', '1'];\n  }\n  /**\n   * Returns the strategies: one, many, one-meta, many-meta\n   * @returns {string}\n   */\n\n\n  get strategy() {\n    let strategy = this.isMany() ? 'many' : 'one';\n\n    if (this.linkConfig.metadata) {\n      strategy += '-meta';\n    }\n\n    return strategy;\n  }\n  /**\n   * Returns the field name in the document where the actual relationships are stored.\n   * @returns string\n   */\n\n\n  get linkStorageField() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.linkStorageField;\n    }\n\n    return this.linkConfig.field;\n  }\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n\n\n  getLinkedCollection() {\n    return this.linkConfig.collection;\n  }\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n\n\n  isMany() {\n    return !this.isSingle();\n  }\n  /**\n   * If the relationship for this link contains metadata\n   */\n\n\n  isMeta() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isMeta();\n    }\n\n    return !!this.linkConfig.metadata;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isSingle() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isSingle();\n    }\n\n    return _.contains(this.oneTypes, this.linkConfig.type);\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isVirtual() {\n    return !!this.linkConfig.inversedBy;\n  }\n  /**\n   * Should return a single result.\n   */\n\n\n  isOneResult() {\n    return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n  }\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n\n\n  createLink(object) {\n    let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    let helperClass = this._getHelperClass();\n\n    return new helperClass(this, object, collection);\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _validateAndClean() {\n    if (!this.linkConfig.collection) {\n      throw new Meteor.Error('invalid-config', \"For the link \".concat(this.linkName, \" you did not provide a collection.\"));\n    }\n\n    if (typeof this.linkConfig.collection === 'string') {\n      const collectionName = this.linkConfig.collection;\n      this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-collection', \"Could not find a collection with the name: \".concat(collectionName));\n      }\n    }\n\n    if (this.isVirtual()) {\n      return this._prepareVirtual();\n    } else {\n      if (!this.linkConfig.type) {\n        this.linkConfig.type = 'one';\n      }\n\n      if (!this.linkConfig.field) {\n        this.linkConfig.field = this._generateFieldName();\n      } else {\n        if (this.linkConfig.field == this.linkName) {\n          throw new Meteor.Error('invalid-config', \"For the link \".concat(this.linkName, \" you must not use the same name for the field, otherwise it will cause conflicts when fetching data\"));\n        }\n      }\n    }\n\n    check(this.linkConfig, LinkConfigSchema);\n  }\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n\n\n  _prepareVirtual() {\n    const {\n      collection,\n      inversedBy\n    } = this.linkConfig;\n    let linker = collection.getLinker(inversedBy);\n\n    if (!linker) {\n      // it is possible that the collection doesn't have a linker created yet.\n      // so we will create it on startup after all links have been defined\n      Meteor.startup(() => {\n        linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n          throw new Meteor.Error(\"You tried setting up an inversed link in \\\"\".concat(this.mainCollection._name, \"\\\" pointing to collection: \\\"\").concat(collection._name, \"\\\" link: \\\"\").concat(inversedBy, \"\\\", but no such link was found. Maybe a typo ?\"));\n        } else {\n          this._setupVirtualConfig(linker);\n        }\n      });\n    } else {\n      this._setupVirtualConfig(linker);\n    }\n  }\n  /**\n   * @param linker\n   * @private\n   */\n\n\n  _setupVirtualConfig(linker) {\n    const virtualLinkConfig = linker.linkConfig;\n\n    if (!virtualLinkConfig) {\n      throw new Meteor.Error(\"There is no link-config for the related collection on \".concat(inversedBy, \". Make sure you added the direct links before specifying virtual ones.\"));\n    }\n\n    _.extend(this.linkConfig, {\n      metadata: virtualLinkConfig.metadata,\n      relatedLinker: linker\n    });\n  }\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n\n\n  _getHelperClass() {\n    switch (this.strategy) {\n      case 'many-meta':\n        return LinkManyMeta;\n\n      case 'many':\n        return LinkMany;\n\n      case 'one-meta':\n        return LinkOneMeta;\n\n      case 'one':\n        return LinkOne;\n    }\n\n    throw new Meteor.Error('invalid-strategy', \"\".concat(this.strategy, \" is not a valid strategy\"));\n  }\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n\n\n  _generateFieldName() {\n    let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n    let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n    switch (this.strategy) {\n      case 'many-meta':\n        return \"\".concat(defaultFieldPrefix, \"_metas\");\n\n      case 'many':\n        return \"\".concat(defaultFieldPrefix, \"_ids\");\n\n      case 'one-meta':\n        return \"\".concat(defaultFieldPrefix, \"_meta\");\n\n      case 'one':\n        return \"\".concat(defaultFieldPrefix, \"_id\");\n    }\n  }\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n\n\n  _handleReferenceRemovalForVirtualLinks() {\n    this.mainCollection.after.remove((userId, doc) => {\n      // this problem may occur when you do a .remove() before Meteor.startup()\n      if (!this.linkConfig.relatedLinker) {\n        console.warn(\"There was an error finding the link for removal for collection: \\\"\".concat(this.mainCollection._name, \"\\\" with link: \\\"\").concat(this.linkName, \"\\\". This may occur when you do a .remove() before Meteor.startup()\"));\n        return;\n      }\n\n      let accessor = this.createLink(doc);\n\n      _.each(accessor.fetch(), linkedObj => {\n        const {\n          relatedLinker\n        } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n        // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n        // if a removal happens before Meteor.startup this may fail\n\n        if (relatedLinker) {\n          let link = relatedLinker.createLink(linkedObj);\n\n          if (relatedLinker.isSingle()) {\n            link.unset();\n          } else {\n            link.remove(doc);\n          }\n        }\n      });\n    });\n  }\n\n  _initIndex() {\n    if (Meteor.isServer) {\n      let field = this.linkConfig.field;\n\n      if (this.linkConfig.metadata) {\n        field = field + '._id';\n      }\n\n      if (this.linkConfig.index) {\n        if (this.isVirtual()) {\n          throw new Meteor.Error('You cannot set index on an inversed link.');\n        }\n\n        let options;\n\n        if (this.linkConfig.unique) {\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          options = {\n            unique: true\n          };\n        }\n\n        this.mainCollection._ensureIndex({\n          [field]: 1\n        }, options);\n      } else {\n        if (this.linkConfig.unique) {\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set unique property on an inversed link.');\n          }\n\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          this.mainCollection._ensureIndex({\n            [field]: 1\n          }, {\n            unique: true\n          });\n        }\n      }\n    }\n  }\n\n  _initAutoremove() {\n    if (!this.linkConfig.autoremove) {\n      return;\n    }\n\n    if (!this.isVirtual()) {\n      this.mainCollection.after.remove((userId, doc) => {\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: smartArguments.getIds(doc[this.linkStorageField])\n          }\n        });\n      });\n    } else {\n      this.mainCollection.after.remove((userId, doc) => {\n        const linker = this.mainCollection.getLink(doc, this.linkName);\n        const ids = linker.find({}, {\n          fields: {\n            _id: 1\n          }\n        }).fetch().map(item => item._id);\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: ids\n          }\n        });\n      });\n    }\n  }\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n\n\n  _initDenormalization() {\n    if (!this.linkConfig.denormalize || !Meteor.isServer) {\n      return;\n    }\n\n    const packageExists = !!Package['herteby:denormalize'];\n\n    if (!packageExists) {\n      throw new Meteor.Error('missing-package', \"Please add the herteby:denormalize package to your Meteor application in order to make caching work\");\n    }\n\n    const {\n      field,\n      body,\n      bypassSchema\n    } = this.linkConfig.denormalize;\n    let cacheConfig;\n    let referenceFieldSuffix = '';\n\n    if (this.isMeta()) {\n      referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n    }\n\n    if (this.isVirtual()) {\n      let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n      let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n      cacheConfig = {\n        type: type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: inversedLink.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    } else {\n      cacheConfig = {\n        type: this.linkConfig.type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: this.linkConfig.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    }\n\n    if (this.isVirtual()) {\n      Meteor.startup(() => {\n        this.mainCollection.cache(cacheConfig);\n      });\n    } else {\n      this.mainCollection.cache(cacheConfig);\n    }\n  }\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isDenormalized() {\n    return !!this.linkConfig.denormalize;\n  }\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isSubBodyDenormalized(body) {\n    const cacheBody = this.linkConfig.denormalize.body;\n\n    const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n    const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n    return _.difference(bodyFields, cacheBodyFields).length === 0;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"createSearchFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/lib/createSearchFilters.js                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => createSearchFilters,\n  createOne: () => createOne,\n  createOneVirtual: () => createOneVirtual,\n  createOneMeta: () => createOneMeta,\n  createOneMetaVirtual: () => createOneMetaVirtual,\n  createMany: () => createMany,\n  createManyVirtual: () => createManyVirtual,\n  createManyMeta: () => createManyMeta,\n  createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \".concat(strategy));\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \".concat(strategy));\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: object[fieldStorage]\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  const value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  let value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return {\n    [fieldStorage]: {\n      $elemMatch: filters\n    }\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"linkTypes\":{\"base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/base.js                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Link\n});\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 0);\nlet createSearchFilters;\nmodule.watch(require(\"../lib/createSearchFilters\"), {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 1);\n\nclass Link {\n  get config() {\n    return this.linker.linkConfig;\n  }\n\n  get isVirtual() {\n    return this.linker.isVirtual();\n  }\n\n  constructor(linker, object, collection) {\n    this.linker = linker;\n    this.object = object;\n    this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n    if (this.linker.isVirtual()) {\n      this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n    } else {\n      this.linkStorageField = this.config.field;\n    }\n  }\n  /**\n   * Gets the stored link information value\n   * @returns {*}\n   */\n\n\n  value() {\n    if (this.isVirtual) {\n      throw new Meteor.Error('You can only take the value from the main link.');\n    }\n\n    return this.object[this.linkStorageField];\n  }\n  /**\n   * Finds linked data.\n   *\n   * @param filters\n   * @param options\n   * @returns {*}\n   * @param userId\n   */\n\n\n  find() {\n    let filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    let linker = this.linker;\n    const linkedCollection = this.linkedCollection;\n    let $metaFilters;\n\n    if (filters.$meta) {\n      $metaFilters = filters.$meta;\n      delete filters.$meta;\n    }\n\n    const searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n    let appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n    // happens due to recursive importing of modules\n    // TODO: find another way to do this\n\n\n    if (linkedCollection.find) {\n      return linkedCollection.find(appliedFilters, options, userId);\n    } else {\n      return linkedCollection.default.find(appliedFilters, options, userId);\n    }\n  }\n  /**\n   * @param filters\n   * @param options\n   * @param others\n   * @returns {*|{content}|any}\n   */\n\n\n  fetch(filters, options) {\n    for (var _len = arguments.length, others = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      others[_key - 2] = arguments[_key];\n    }\n\n    let result = this.find(filters, options, ...others).fetch();\n\n    if (this.linker.isOneResult()) {\n      return _.first(result);\n    }\n\n    return result;\n  }\n  /**\n   * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n   * We use clean to make it an empty array by default.\n   */\n\n\n  clean() {}\n  /**\n   * Extracts a single id\n   */\n\n\n  identifyId(what, saveToDatabase) {\n    return SmartArgs.getId(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Extracts the ids of object(s) or strings and returns an array.\n   */\n\n\n  identifyIds(what, saveToDatabase) {\n    return SmartArgs.getIds(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Checks when linking data, if the ids are valid with the linked collection.\n   * @throws Meteor.Error\n   * @param ids\n   *\n   * @protected\n   */\n\n\n  _validateIds(ids) {\n    if (!_.isArray(ids)) {\n      ids = [ids];\n    }\n\n    const validIds = this.linkedCollection.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).fetch().map(doc => doc._id);\n\n    if (validIds.length != ids.length) {\n      throw new Meteor.Error('not-found', \"You tried to create links with non-existing id(s) inside \\\"\".concat(this.linkedCollection._name, \"\\\": \").concat(_.difference(ids, validIds).join(', ')));\n    }\n  }\n  /**\n   * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n   *\n   * @param action\n   * @param what\n   * @param metadata\n   *\n   * @protected\n   */\n\n\n  _virtualAction(action, what, metadata) {\n    const linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n    if (what === undefined) {\n      const reversedLink = linker.createLink(this.fetch());\n      reversedLink.unset();\n      return;\n    }\n\n    if (!_.isArray(what)) {\n      what = [what];\n    }\n\n    what = _.map(what, element => {\n      if (!_.isObject(element)) {\n        return linker.mainCollection.findOne(element);\n      } else {\n        if (!element._id) {\n          const elementId = linker.mainCollection.insert(element);\n\n          _.extend(element, linker.mainCollection.findOne(elementId));\n        }\n\n        return element;\n      }\n    });\n    return _.map(what, element => {\n      const reversedLink = linker.createLink(element);\n\n      if (action == 'metadata') {\n        if (linker.isSingle()) {\n          return reversedLink.metadata(metadata);\n        } else {\n          return reversedLink.metadata(this.object, metadata);\n        }\n      } else if (action == 'add' || action == 'set') {\n        if (linker.isSingle()) {\n          reversedLink.set(this.object, metadata);\n        } else {\n          reversedLink.add(this.object, metadata);\n        }\n      } else {\n        if (linker.isSingle()) {\n          reversedLink.unset();\n        } else {\n          reversedLink.remove(this.object);\n        }\n      }\n    });\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkMany.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkMany.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkMany\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkMany extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n    this.clean();\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    const field = this.linkStorageField; // update the field\n\n    this.object[field] = _.union(this.object[field], _ids); // update the db\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   */\n\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n    this.clean();\n    const field = this.linkStorageField;\n\n    const _ids = this.identifyIds(what); // update the field\n\n\n    this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id)); // update the db\n\n    let modifier = {\n      $pullAll: {\n        [field]: _ids\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkManyMeta.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkManyMeta.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkManyMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkManyMeta extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * @param what\n   * @param metadata\n   */\n\n\n  add(what) {\n    let metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    let field = this.linkStorageField;\n    this.object[field] = this.object[field] || [];\n    let metadatas = [];\n\n    _.each(_ids, _id => {\n      let localMetadata = _.clone(metadata);\n\n      localMetadata._id = _id;\n      this.object[field].push(localMetadata);\n      metadatas.push(localMetadata);\n    });\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: metadatas\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   * @param extendMetadata\n   */\n\n\n  metadata(what, extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', what, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (what === undefined) {\n      return this.object[field];\n    }\n\n    if (_.isArray(what)) {\n      throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n    }\n\n    const _id = this.identifyId(what);\n\n    let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n\n    if (extendMetadata === undefined) {\n      return existingMetadata;\n    } else {\n      _.extend(existingMetadata, extendMetadata);\n\n      let subfield = field + '._id';\n      let subfieldUpdate = field + '.$';\n      this.linker.mainCollection.update({\n        _id: this.object._id,\n        [subfield]: _id\n      }, {\n        $set: {\n          [subfieldUpdate]: existingMetadata\n        }\n      });\n    }\n\n    return this;\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what);\n\n    let field = this.linkStorageField;\n    this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n    let modifier = {\n      $pull: {\n        [field]: {\n          $elemMatch: {\n            _id: {\n              $in: _ids\n            }\n          }\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOne.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOne.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkOne\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOne extends Link {\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    const _id = this.identifyId(what, true);\n\n    this._validateIds([_id]);\n\n    this.object[field] = _id;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: _id\n      }\n    });\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = null;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: null\n      }\n    });\n    return this;\n  }\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOneMeta.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOneMeta.js                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => LinkOneMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOneMeta extends Link {\n  set(what) {\n    let metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    metadata._id = this.identifyId(what, true);\n\n    this._validateIds([metadata._id]);\n\n    this.object[field] = metadata;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: metadata\n      }\n    });\n    return this;\n  }\n\n  metadata(extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', undefined, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (!extendMetadata) {\n      return this.object[field];\n    } else {\n      _.extend(this.object[field], extendMetadata);\n\n      this.linker.mainCollection.update(this.object._id, {\n        $set: {\n          [field]: this.object[field]\n        }\n      });\n    }\n\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset');\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = {};\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: {}\n      }\n    });\n    return this;\n  }\n\n  add(what, metadata) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"smartArguments.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/links/linkTypes/lib/smartArguments.js                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(new class {\n  getIds(what, options) {\n    if (_.isArray(what)) {\n      return _.map(what, subWhat => {\n        return this.getId(subWhat, options);\n      });\n    } else {\n      return [this.getId(what, options)];\n    }\n\n    throw new Meteor.Error('invalid-type', \"Unrecognized type: \".concat(typeof what, \" for managing links\"));\n  }\n\n  getId(what, options) {\n    if (typeof what === 'string') {\n      return what;\n    }\n\n    if (typeof what === 'object') {\n      if (!what._id && options.saveToDatabase) {\n        what._id = options.collection.insert(what);\n      }\n\n      return what._id;\n    }\n  }\n\n}());\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"namedQuery\":{\"namedQuery.base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.base.js                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\n\nclass NamedQueryBase {\n  constructor(name, collection, body) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    this.isNamedQuery = true;\n    this.queryName = name;\n\n    if (_.isFunction(body)) {\n      this.resolver = body;\n    } else {\n      this.body = deepClone(body);\n    }\n\n    this.subscriptionHandle = null;\n    this.params = options.params || {};\n    this.options = options;\n    this.collection = collection;\n    this.isExposed = false;\n  }\n\n  get name() {\n    return \"named_query_\".concat(this.queryName);\n  }\n\n  get isResolver() {\n    return !!this.resolver;\n  }\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams(params) {\n    params = params || this.params;\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    try {\n      this._validate(validateParams, params);\n    } catch (validationError) {\n      console.error(\"Invalid parameters supplied to the query \\\"\".concat(this.queryName, \"\\\"\\n\"), validationError);\n      throw validationError; // rethrow\n    }\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _objectSpread2.default)({}, this.options, {\n      params\n    }));\n    clone.cacher = this.cacher;\n\n    if (this.exposeConfig) {\n      clone.exposeConfig = this.exposeConfig;\n    }\n\n    return clone;\n  }\n  /**\n   * @param {function|object} validator\n   * @param {object} params\n   * @private\n   */\n\n\n  _validate(validator, params) {\n    if (_.isFunction(validator)) {\n      validator.call(null, params);\n    } else {\n      check(params, validator);\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.client.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet CountSubscription;\nmodule.watch(require(\"../query/counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveFetch;\nmodule.watch(require(\"../query/lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 2);\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"../query/lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\nmodule.exportDefault(class extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n    }\n\n    this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n    }\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(this.params, callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  async fetchSync() {\n    if (this.subscriptionHandle) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name, this.params);\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  async fetchOneSync() {\n    return _.first((await this.fetchSync()));\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    if (!this.subscriptionHandle) {\n      const callback = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...arguments));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  async getCountSync() {\n    if (this._counter) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name + '.count', this.params);\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', this.params, callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, this.params, callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let body = this.body;\n\n    if (this.params.$body) {\n      body = intersectDeep(body, this.params.$body);\n    }\n\n    body = prepareForProcess(body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body));\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet NamedQueryClient;\nmodule.watch(require(\"./namedQuery.client\"), {\n  default(v) {\n    NamedQueryClient = v;\n  }\n\n}, 0);\nlet NamedQueryServer;\nmodule.watch(require(\"./namedQuery.server\"), {\n  default(v) {\n    NamedQueryServer = v;\n  }\n\n}, 1);\nlet NamedQuery;\n\nif (Meteor.isServer) {\n  NamedQuery = NamedQueryServer;\n} else {\n  NamedQuery = NamedQueryClient;\n}\n\nmodule.exportDefault(NamedQuery);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.server.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 0);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet MemoryResultCacher;\nmodule.watch(require(\"./cache/MemoryResultCacher\"), {\n  default(v) {\n    MemoryResultCacher = v;\n  }\n\n}, 3);\nlet intersectDeep;\nmodule.watch(require(\"../query/lib/intersectDeep\"), {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 4);\nmodule.exportDefault(class extends Base {\n  /**\n   * Retrieves the data.\n   * @returns {*}\n   */\n  fetch(context) {\n    this._performSecurityChecks(context, this.params);\n\n    if (this.isResolver) {\n      return this._fetchResolverData(context);\n    } else {\n      body = deepClone(this.body);\n\n      if (this.params.$body) {\n        body = intersectDeep(body, this.params.$body);\n      } // we must apply emobdyment here\n\n\n      this.doEmbodimentIfItApplies(body);\n      const query = this.collection.createQuery(deepClone(body), {\n        params: deepClone(this.params)\n      });\n\n      if (this.cacher) {\n        const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          query\n        });\n      }\n\n      return query.fetch();\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    return _.first(this.fetch(...arguments));\n  }\n  /**\n   * Gets the count of matching elements.\n   *\n   * @returns {any}\n   */\n\n\n  getCount(context) {\n    this._performSecurityChecks(context, this.params);\n\n    const countCursor = this.getCursorForCounting();\n\n    if (this.cacher) {\n      const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        countCursor\n      });\n    }\n\n    return countCursor.count();\n  }\n  /**\n   * Returns the cursor for counting\n   * This is most likely used for counts cursor\n   */\n\n\n  getCursorForCounting() {\n    let body = deepClone(this.body);\n    this.doEmbodimentIfItApplies(body);\n    body = prepareForProcess(body, this.params);\n    return this.collection.find(body.$filters || {}, {\n      fields: {\n        _id: 1\n      }\n    });\n  }\n  /**\n   * @param cacher\n   */\n\n\n  cacheResults(cacher) {\n    if (!cacher) {\n      cacher = new MemoryResultCacher();\n    }\n\n    this.cacher = cacher;\n  }\n  /**\n   * Configure resolve. This doesn't actually call the resolver, it just sets it\n   * @param fn\n   */\n\n\n  resolve(fn) {\n    if (!this.isResolver) {\n      throw new Meteor.Error('invalid-call', \"You cannot use resolve() on a non resolver NamedQuery\");\n    }\n\n    this.resolver = fn;\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchResolverData(context) {\n    const resolver = this.resolver;\n    const self = this;\n    const query = {\n      fetch() {\n        return resolver.call(context, self.params);\n      }\n\n    };\n\n    if (this.cacher) {\n      const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        query\n      });\n    }\n\n    return query.fetch();\n  }\n  /**\n   * @param context Meteor method/publish context\n   * @param params\n   *\n   * @private\n   */\n\n\n  _performSecurityChecks(context, params) {\n    if (context && this.exposeConfig) {\n      this._callFirewall(context, context.userId, params);\n    }\n\n    this.doValidateParams(params);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"store.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/store.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(new class {\n  constructor() {\n    this.storage = {};\n  }\n\n  add(key, value) {\n    if (this.storage[key]) {\n      throw new Meteor.Error('invalid-name', \"You have previously defined another namedQuery with the same name: \\\"\".concat(key, \"\\\". Named Query names should be unique.\"));\n    }\n\n    this.storage[key] = value;\n  }\n\n  get(key) {\n    return this.storage[key];\n  }\n\n  getAll() {\n    return this.storage;\n  }\n\n}());\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache\":{\"BaseResultCacher.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/BaseResultCacher.js                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => BaseResultCacher\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nclass BaseResultCacher {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.config = config;\n  }\n  /**\n   * @param queryName\n   * @param params\n   * @returns {string}\n   */\n\n\n  generateQueryId(queryName, params) {\n    return \"\".concat(queryName, \"::\").concat(EJSON.stringify(params));\n  }\n  /**\n   * Dummy function\n   */\n\n\n  fetch(cacheId, _ref) {\n    let {\n      query,\n      countCursor\n    } = _ref;\n    throw 'Not implemented';\n  }\n  /**\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  static fetchData(_ref2) {\n    let {\n      query,\n      countCursor\n    } = _ref2;\n\n    if (query) {\n      return query.fetch();\n    } else {\n      return countCursor.count();\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MemoryResultCacher.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/MemoryResultCacher.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet cloneDeep;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 1);\nlet BaseResultCacher;\nmodule.watch(require(\"./BaseResultCacher\"), {\n  default(v) {\n    BaseResultCacher = v;\n  }\n\n}, 2);\nconst DEFAULT_TTL = 60000;\n/**\n * This is a very basic in-memory result caching functionality\n */\n\nclass MemoryResultCacher extends BaseResultCacher {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(config);\n    this.store = {};\n  }\n  /**\n   * @param cacheId\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  fetch(cacheId, _ref) {\n    let {\n      query,\n      countCursor\n    } = _ref;\n    const cacheData = this.store[cacheId];\n\n    if (cacheData !== undefined) {\n      return cloneDeep(cacheData);\n    }\n\n    const data = BaseResultCacher.fetchData({\n      query,\n      countCursor\n    });\n    this.storeData(cacheId, data);\n    return data;\n  }\n  /**\n   * @param cacheId\n   * @param data\n   */\n\n\n  storeData(cacheId, data) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.store[cacheId] = cloneDeep(data);\n    Meteor.setTimeout(() => {\n      delete this.store[cacheId];\n    }, ttl);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"query\":{\"query.base.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.base.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => QueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nclass QueryBase {\n  constructor(collection, body) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.isGlobalQuery = true;\n    this.collection = collection;\n    this.body = deepClone(body);\n    this.params = options.params || {};\n    this.options = options;\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    return new this.constructor(this.collection, deepClone(this.body), (0, _objectSpread2.default)({\n      params\n    }, this.options));\n  }\n\n  get name() {\n    return \"exposure_\".concat(this.collection._name);\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams() {\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    if (_.isFunction(validateParams)) {\n      validateParams.call(null, this.params);\n    } else {\n      check(this.params);\n    }\n  }\n  /**\n   * Merges the params with previous params.\n   *\n   * @param params\n   * @returns {Query}\n   */\n\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.client.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.watch(require(\"./counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.watch(require(\"./lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"./lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  async fetchSync() {\n    this.doValidateParams();\n\n    if (this.subscriptionHandle) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  async fetchOneSync() {\n    return _.first((await this.fetchSync()));\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    if (!this.subscriptionHandle) {\n      const callback = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...arguments));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  async getCountSync() {\n    if (this._counter) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet QueryClient;\nmodule.watch(require(\"./query.client\"), {\n  default(v) {\n    QueryClient = v;\n  }\n\n}, 0);\nlet QueryServer;\nmodule.watch(require(\"./query.server\"), {\n  default(v) {\n    QueryServer = v;\n  }\n\n}, 1);\nlet Query;\n\nif (Meteor.isServer) {\n  Query = QueryServer;\n} else {\n  Query = QueryClient;\n}\n\nmodule.exportDefault(Query);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/query.server.js                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => Query\n});\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 1);\nlet hypernova;\nmodule.watch(require(\"./hypernova/hypernova.js\"), {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 2);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 3);\n\nclass Query extends Base {\n  /**\n   * Retrieves the data.\n   * @param context\n   * @returns {*}\n   */\n  fetch() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n    return hypernova(node, context.userId, {\n      params: this.params\n    });\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    return _.first(this.fetch(...arguments));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @returns {integer}\n   */\n\n\n  getCount() {\n    return this.collection.find(this.body.$filters || {}, {}).count();\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"counts\":{\"collection.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/collection.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.watch(require(\"./constants\"), {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(new Mongo.Collection(COUNTS_COLLECTION_CLIENT));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/constants.js                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  COUNTS_COLLECTION_CLIENT: () => COUNTS_COLLECTION_CLIENT\n});\nconst COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"countSubscription.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/countSubscription.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => CountSubscription\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Counts;\nmodule.watch(require(\"./collection\"), {\n  default(v) {\n    Counts = v;\n  }\n\n}, 4);\nlet createFauxSubscription;\nmodule.watch(require(\"./createFauxSubscription\"), {\n  default(v) {\n    createFauxSubscription = v;\n  }\n\n}, 5);\nlet prepareForProcess;\nmodule.watch(require(\"../lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 6);\nlet NamedQueryBase;\nmodule.watch(require(\"../../namedQuery/namedQuery.base\"), {\n  default(v) {\n    NamedQueryBase = v;\n  }\n\n}, 7);\n\nclass CountSubscription {\n  /**\n   * @param {*} query - The query to use when fetching counts\n   */\n  constructor(query) {\n    this.accessToken = new ReactiveVar(null);\n    this.fauxHandle = null;\n    this.query = query;\n  }\n  /**\n   * Starts a subscription request for reactive counts.\n   *\n   * @param {*} arg - The argument to pass to {name}.count.subscribe\n   * @param {*} callback\n   */\n\n\n  subscribe(arg, callback) {\n    // Don't try to resubscribe if arg hasn't changed\n    if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n      return this.fauxHandle;\n    }\n\n    this.accessToken.set(null);\n    this.lastArgs = arg;\n    Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n      if (!this._markedForUnsubscribe) {\n        this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n        this.accessToken.set(token);\n        this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n      }\n\n      this._markedForUnsubscribe = false;\n    });\n    this.fauxHandle = createFauxSubscription(this);\n    return this.fauxHandle;\n  }\n  /**\n   * Unsubscribes from the count endpoint, if there is such a subscription.\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.disconnectComputation.stop();\n      this.subscriptionHandle.stop();\n    } else {\n      // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n      // so set a flag to stop the subscription from being created\n      this._markedForUnsubscribe = true;\n    }\n\n    this.accessToken.set(null);\n    this.fauxHandle = null;\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n   *\n   * @returns {Number|null} - Current document count\n   */\n\n\n  getCount() {\n    const id = this.accessToken.get();\n    if (id === null) return null;\n    const doc = Counts.findOne(id);\n    return doc.count;\n  }\n  /**\n   * All session info gets deleted when the server goes down, so when the client attempts to\n   * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n   *\n   * This function prevents that by manually stopping and restarting the subscription when the\n   * connection to the server is lost.\n   */\n\n\n  handleDisconnect() {\n    const status = Meteor.status();\n\n    if (!status.connected) {\n      this._markedForResume = true;\n      this.fauxHandle = null;\n      this.subscriptionHandle.stop();\n    }\n\n    if (status.connected && this._markedForResume) {\n      this._markedForResume = false;\n      this.subscribe(this.lastArgs);\n    }\n  }\n  /**\n   * Returns whether or not a subscription request has been made.\n   */\n\n\n  isSubscribed() {\n    return this.accessToken.get() !== null;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createFauxSubscription.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/counts/createFauxSubscription.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(countManager => ({\n  ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n  stop: () => countManager.unsubscribe()\n}));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hypernova\":{\"aggregateSearchFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/aggregateSearchFilters.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(\"Invalid linker type: \".concat(this.linker.type));\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n      return {\n        _id: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembleAggregateResults.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembleAggregateResults.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, aggregateResults, metaFilters) {\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const linkName = childCollectionNode.linkName;\n  const isMeta = linker.isMeta();\n  const isMany = linker.isMany();\n  let allResults = [];\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(childCollectionNode.parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n    });\n  }\n\n  if (isMeta && isMany) {\n    // This case is treated differently because we get an array response from the pipeline.\n    _.each(childCollectionNode.parent.results, parentResult => {\n      parentResult[linkName] = parentResult[linkName] || [];\n\n      const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n        return _.contains(aggregateResult._id, parentResult._id);\n      });\n\n      if (eligibleAggregateResults.length) {\n        const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n\n        _.each(datas, data => {\n          _.each(data, item => {\n            parentResult[linkName].push(item);\n          });\n        });\n      }\n    });\n\n    _.each(aggregateResults, aggregateResult => {\n      _.each(aggregateResult.data, item => allResults.push(item));\n    });\n  } else {\n    let comparator;\n\n    if (isMany) {\n      comparator = (aggregateResult, result) => _.contains(aggregateResult._id, result._id);\n    } else {\n      comparator = (aggregateResult, result) => aggregateResult._id == result._id;\n    }\n\n    const childLinkName = childCollectionNode.linkName;\n    const parentResults = childCollectionNode.parent.results;\n    parentResults.forEach(parentResult => {\n      // We are now finding the data from the pipeline that is related to the _id of the parent\n      const eligibleAggregateResults = aggregateResults.filter(aggregateResult => comparator(aggregateResult, parentResult));\n      eligibleAggregateResults.forEach(aggregateResult => {\n        if (Array.isArray(parentResult[childLinkName])) {\n          parentResult[childLinkName].push(...aggregateResult.data);\n        } else {\n          parentResult[childLinkName] = [...aggregateResult.data];\n        }\n      });\n    });\n    aggregateResults.forEach(aggregateResult => {\n      allResults.push(...aggregateResult.data);\n    });\n  }\n\n  childCollectionNode.results = allResults;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembler.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembler.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet createSearchFilters;\nmodule.watch(require(\"../../links/lib/createSearchFilters\"), {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nmodule.exportDefault((childCollectionNode, _ref) => {\n  let {\n    limit,\n    skip,\n    metaFilters\n  } = _ref;\n\n  if (childCollectionNode.results.length === 0) {\n    return;\n  }\n\n  const parent = childCollectionNode.parent;\n  const linker = childCollectionNode.linker;\n  const strategy = linker.strategy;\n  const isSingle = linker.isSingle();\n  const isMeta = linker.isMeta();\n  const fieldStorage = linker.linkStorageField; // cleaning the parent results from a child\n  // this may be the wrong approach but it works for now\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n    });\n  }\n\n  const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n  if (strategy === 'one') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[parentResult[fieldStorage]], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      let data = [];\n      parentResult[fieldStorage].forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'one-meta') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      const _id = parentResult[fieldStorage]._id;\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[_id], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many-meta') {\n    parent.results.forEach(parentResult => {\n      const _ids = _.pluck(parentResult[fieldStorage], '_id');\n\n      let data = [];\n\n      _ids.forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n});\n\nfunction filterAssembledData(data, _ref2) {\n  let {\n    limit,\n    skip\n  } = _ref2;\n\n  if (limit && Array.isArray(data)) {\n    return data.slice(skip, limit);\n  }\n\n  return data;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buildAggregatePipeline.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/buildAggregatePipeline.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"./constants\"), {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  let containsDottedFields = false;\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const collection = childCollectionNode.collection;\n  let pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  let _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  let dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, (value, field) => {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    let $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice\n        }\n      }\n    });\n  }\n\n  return {\n    pipeline,\n    containsDottedFields\n  };\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/constants.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  SAFE_DOTTED_FIELD_REPLACEMENT: () => SAFE_DOTTED_FIELD_REPLACEMENT\n});\nconst SAFE_DOTTED_FIELD_REPLACEMENT = '___';\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hypernova.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/hypernova.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => hypernovaInit\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet prepareForDelivery;\nmodule.watch(require(\"../lib/prepareForDelivery.js\"), {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 1);\nlet storeHypernovaResults;\nmodule.watch(require(\"./storeHypernovaResults.js\"), {\n  default(v) {\n    storeHypernovaResults = v;\n  }\n\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n  _.each(collectionNode.collectionNodes, childCollectionNode => {\n    let {\n      filters,\n      options\n    } = applyProps(childCollectionNode);\n    storeHypernovaResults(childCollectionNode, userId);\n    hypernova(childCollectionNode, userId);\n  });\n}\n\nfunction hypernovaInit(collectionNode, userId) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const bypassFirewalls = config.bypassFirewalls || false;\n  const params = config.params || {};\n  let {\n    filters,\n    options\n  } = applyProps(collectionNode);\n  const collection = collectionNode.collection;\n  collectionNode.results = collection.find(filters, options, userId).fetch();\n  const userIdToPass = config.bypassFirewalls ? undefined : userId;\n  hypernova(collectionNode, userIdToPass);\n  prepareForDelivery(collectionNode, params);\n  return collectionNode.results;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"storeHypernovaResults.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/storeHypernovaResults.js                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => storeHypernovaResults\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet AggregateFilters;\nmodule.watch(require(\"./aggregateSearchFilters.js\"), {\n  default(v) {\n    AggregateFilters = v;\n  }\n\n}, 1);\nlet assemble;\nmodule.watch(require(\"./assembler.js\"), {\n  default(v) {\n    assemble = v;\n  }\n\n}, 2);\nlet assembleAggregateResults;\nmodule.watch(require(\"./assembleAggregateResults.js\"), {\n  default(v) {\n    assembleAggregateResults = v;\n  }\n\n}, 3);\nlet buildAggregatePipeline;\nmodule.watch(require(\"./buildAggregatePipeline.js\"), {\n  default(v) {\n    buildAggregatePipeline = v;\n  }\n\n}, 4);\nlet snapBackDottedFields;\nmodule.watch(require(\"./lib/snapBackDottedFields\"), {\n  default(v) {\n    snapBackDottedFields = v;\n  }\n\n}, 5);\n\nfunction storeHypernovaResults(childCollectionNode, userId) {\n  if (childCollectionNode.parent.results.length === 0) {\n    return childCollectionNode.results = [];\n  }\n\n  let {\n    filters,\n    options\n  } = applyProps(childCollectionNode);\n  const metaFilters = filters.$meta;\n  const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n  delete filters.$meta;\n  const linker = childCollectionNode.linker;\n  const isVirtual = linker.isVirtual();\n  const collection = childCollectionNode.collection;\n\n  _.extend(filters, aggregateFilters.create()); // if it's not virtual then we retrieve them and assemble them here.\n\n\n  if (!isVirtual) {\n    const filteredOptions = _.omit(options, 'limit');\n\n    childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n    assemble(childCollectionNode, (0, _objectSpread2.default)({}, options, {\n      metaFilters\n    }));\n  } else {\n    // virtuals arrive here\n    let {\n      pipeline,\n      containsDottedFields\n    } = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n    let aggregateResults = collection.aggregate(pipeline);\n    /**\n     * If in aggregation it contains '.', we replace it with a custom string '___'\n     * And then after aggregation is complete we need to snap-it back to how it was.\n     */\n\n    if (containsDottedFields) {\n      snapBackDottedFields(aggregateResults);\n    }\n\n    assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanObjectForMetaFilters.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(function (object, field, metaFiltersTest) {\n  if (object[field]) {\n    if (_.isArray(object[field])) {\n      object[field] = object[field].filter(metaFiltersTest);\n    } else {\n      if (!metaFiltersTest(object[field])) {\n        object[field] = null;\n      }\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"snapBackDottedFields.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/snapBackDottedFields.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"../constants\"), {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 0);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n  aggregationResult.forEach(result => {\n    result.data = result.data.map(document => {\n      _.each(document, (value, key) => {\n        if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n          document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n          delete document[key];\n        }\n      });\n\n      return dot.object(document);\n    });\n  });\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"applyProps.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/applyProps.js                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n  let filters = _.extend({}, node.props.$filters);\n\n  let options = _.extend({}, node.props.$options);\n\n  options = _.omit(options, ...restrictOptions);\n  options.fields = options.fields || {};\n  node.applyFields(filters, options);\n  return {\n    filters,\n    options\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callWithPromise.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/callWithPromise.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault((method, myParameters) => {\n  return new Promise((resolve, reject) => {\n    Meteor.call(method, myParameters, (err, res) => {\n      if (err) reject(err.reason || 'Something went wrong.');\n      resolve(res);\n    });\n  });\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createGraph.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/createGraph.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  createNodes: () => createNodes,\n  addFieldNode: () => addFieldNode\n});\nlet CollectionNode;\nmodule.watch(require(\"../nodes/collectionNode.js\"), {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 0);\nlet FieldNode;\nmodule.watch(require(\"../nodes/fieldNode.js\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 1);\nlet ReducerNode;\nmodule.watch(require(\"../nodes/reducerNode.js\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 2);\nlet dotize;\nmodule.watch(require(\"./dotize.js\"), {\n  default(v) {\n    dotize = v;\n  }\n\n}, 3);\nlet createReducers;\nmodule.watch(require(\"../reducers/lib/createReducers\"), {\n  default(v) {\n    createReducers = v;\n  }\n\n}, 4);\nconst specialFields = ['$filters', '$options', '$postFilters', '$postOptions', '$postFilter'];\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\n\nfunction createNodes(root) {\n  // this is a fix for phantomjs tests (don't really understand it.)\n  if (!_.isObject(root.body)) {\n    return;\n  }\n\n  _.each(root.body, (body, fieldName) => {\n    if (!body) {\n      return;\n    } // if it's a prop\n\n\n    if (_.contains(specialFields, fieldName)) {\n      root.addProp(fieldName, body);\n      return;\n    } // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n    // TODO: find another way to do this\n\n\n    if (root.collection.default) {\n      root.collection = root.collection.default;\n    } // checking if it is a link.\n\n\n    let linker = root.collection.getLinker(fieldName);\n\n    if (linker) {\n      // check if it is a cached link\n      // if yes, then we need to explicitly define this at collection level\n      // so when we transform the data for delivery, we move it to the link name\n      if (linker.isDenormalized()) {\n        if (linker.isSubBodyDenormalized(body)) {\n          handleDenormalized(root, linker, body, fieldName);\n          return;\n        }\n      }\n\n      let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n      root.add(subroot, linker);\n      createNodes(subroot);\n      return;\n    } // checking if it's a reducer\n\n\n    const reducer = root.collection.getReducer(fieldName);\n\n    if (reducer) {\n      let reducerNode = new ReducerNode(fieldName, reducer);\n      root.add(reducerNode);\n    } // it's most likely a field then\n\n\n    addFieldNode(body, fieldName, root);\n  });\n\n  createReducers(root);\n\n  if (root.fieldNodes.length === 0) {\n    root.add(new FieldNode('_id', 1));\n  }\n}\n\nfunction addFieldNode(body, fieldName, root) {\n  // it's not a link and not a special variable => we assume it's a field\n  if (_.isObject(body)) {\n    let dotted = dotize.convert({\n      [fieldName]: body\n    });\n\n    _.each(dotted, (value, key) => {\n      root.add(new FieldNode(key, value));\n    });\n  } else {\n    let fieldNode = new FieldNode(fieldName, body);\n    root.add(fieldNode);\n  }\n}\n\nmodule.exportDefault(function (collection, body) {\n  let root = new CollectionNode(collection, body);\n  createNodes(root);\n  return root;\n});\n;\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\n\nfunction handleDenormalized(root, linker, body, fieldName) {\n  Object.assign(body, {\n    _id: 1\n  });\n  const cacheField = linker.linkConfig.denormalize.field;\n  root.snapCache(cacheField, fieldName); // if it's one and direct also include the link storage\n\n  if (!linker.isMany() && !linker.isVirtual()) {\n    addFieldNode(1, linker.linkStorageField, root);\n  }\n\n  addFieldNode(body, cacheField, root);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"dotize.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/dotize.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exportDefault(dotize = {});\n\ndotize.convert = function (obj, prefix) {\n  if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n    if (prefix) {\n      var newObj = {};\n      newObj[prefix] = obj;\n      return newObj;\n    } else {\n      return obj;\n    }\n  }\n\n  var newObj = {};\n\n  function recurse(o, p, isArrayItem) {\n    for (var f in o) {\n      if (o[f] && typeof o[f] === \"object\") {\n        if (Array.isArray(o[f])) {\n          if (isEmptyArray(o[f])) {\n            newObj[getFieldName(f, p, true)] = o[f]; // empty array\n          } else {\n            newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n          }\n        } else {\n          if (isArrayItem) {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p, true)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n            }\n          } else {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p)); // object\n            }\n          }\n        }\n      } else {\n        if (isArrayItem || isNumber(f)) {\n          newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n        } else {\n          newObj[getFieldName(f, p)] = o[f]; // primitive\n        }\n      }\n    }\n\n    if (isEmptyObj(newObj)) return obj;\n    return newObj;\n  }\n\n  function isNumber(f) {\n    return !isNaN(parseInt(f));\n  }\n\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      if (Object.hasOwnProperty.call(obj, prop)) return false;\n    }\n\n    return true;\n  }\n\n  function isEmptyArray(o) {\n    if (Array.isArray(o) && o.length == 0) return true;\n    return false;\n  }\n\n  function getFieldName(field, prefix, isArrayItem, isArray) {\n    if (isArray) return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);else if (isArrayItem) return (prefix ? prefix : \"\") + \"[\" + field + \"]\";else return (prefix ? prefix + \".\" : \"\") + field;\n  }\n\n  return recurse(obj, prefix, Array.isArray(obj));\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersectDeep.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/intersectDeep.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (allowedBody, clientBody) {\n  const allowedBodyDot = _.keys(dot.dot(allowedBody));\n\n  const clientBodyDot = _.keys(dot.dot(clientBody));\n\n  const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n  const build = {};\n  intersection.forEach(intersectedField => {\n    build[intersectedField] = 1;\n  });\n  return dot.object(build);\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForDelivery.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForDelivery.js                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  applyPostFilters: () => applyPostFilters,\n  applyPostOptions: () => applyPostOptions,\n  getResultsArray: () => getResultsArray,\n  removeLinkStorages: () => removeLinkStorages,\n  storeOneResults: () => storeOneResults,\n  assembleMetadata: () => assembleMetadata\n});\nlet applyReducers;\nmodule.watch(require(\"../reducers/lib/applyReducers\"), {\n  default(v) {\n    applyReducers = v;\n  }\n\n}, 0);\nlet cleanReducerLeftovers;\nmodule.watch(require(\"../reducers/lib/cleanReducerLeftovers\"), {\n  default(v) {\n    cleanReducerLeftovers = v;\n  }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nlet Minimongo;\nmodule.watch(require(\"meteor/minimongo\"), {\n  Minimongo(v) {\n    Minimongo = v;\n  }\n\n}, 3);\nmodule.exportDefault((node, params) => {\n  snapBackCaches(node);\n  storeOneResults(node, node.results);\n  applyReducers(node, params);\n  cleanReducerLeftovers(node);\n\n  _.each(node.collectionNodes, collectionNode => {\n    cloneMetaChildren(collectionNode, node.results);\n  });\n\n  _.each(node.collectionNodes, collectionNode => {\n    assembleMetadata(collectionNode, node.results);\n  });\n\n  removeLinkStorages(node, node.results);\n  applyPostFilters(node);\n  applyPostOptions(node);\n  applyPostFilter(node, params);\n});\n\nfunction applyPostFilters(node) {\n  const postFilters = node.props.$postFilters;\n\n  if (postFilters) {\n    node.results = sift(postFilters, node.results);\n  }\n}\n\nfunction applyPostOptions(node) {\n  const options = node.props.$postOptions;\n\n  if (options) {\n    if (options.sort) {\n      const sorter = new Minimongo.Sorter(options.sort);\n      node.results.sort(sorter.getComparator());\n    }\n\n    if (options.limit || options.skip) {\n      const start = options.skip || 0;\n      const end = options.limit ? options.limit + start : node.results.length;\n      node.results = node.results.slice(start, end);\n    }\n  }\n}\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n  if (node.props.$postFilter) {\n    const filter = node.props.$postFilter;\n\n    if (_.isArray(filter)) {\n      filter.forEach(f => {\n        node.results = f(node.results, params);\n      });\n    } else {\n      node.results = filter(node.results, params);\n    }\n  }\n}\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\n\n\nfunction getResultsArray(results) {\n  if (_.isArray(results)) {\n    return results;\n  } else if (_.isUndefined(results)) {\n    return [];\n  }\n\n  return [results];\n}\n\nfunction removeLinkStorages(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  sameLevelResults = getResultsArray(sameLevelResults);\n\n  _.each(node.collectionNodes, collectionNode => {\n    const removeStorageField = collectionNode.shouldCleanStorage;\n\n    _.each(sameLevelResults, result => {\n      if (removeStorageField) {\n        delete result[collectionNode.linkStorageField];\n      }\n\n      removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n    });\n  });\n}\n\nfunction storeOneResults(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(sameLevelResults, result => {\n      storeOneResults(collectionNode, result[collectionNode.linkName]);\n    });\n\n    if (collectionNode.isOneResult) {\n      _.each(sameLevelResults, result => {\n        if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n          result[collectionNode.linkName] = result[collectionNode.linkName] ? _.first(result[collectionNode.linkName]) : undefined;\n        }\n      });\n    }\n  });\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n  if (!parentResults) {\n    return;\n  }\n\n  const linkName = node.linkName;\n  const isMeta = node.isMeta; // parentResults might be an object (for type==one links)\n\n  parentResults = getResultsArray(parentResults);\n  parentResults.forEach(parentResult => {\n    if (isMeta && parentResult[linkName]) {\n      if (node.isOneResult) {\n        parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n      } else {\n        parentResult[linkName] = parentResult[linkName].map(object => {\n          return Object.assign({}, object);\n        });\n      }\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n      cloneMetaChildren(collectionNode, parentResult[linkName]);\n    });\n  });\n}\n\nfunction assembleMetadata(node, parentResults) {\n  parentResults = getResultsArray(parentResults); // assembling metadata is depth first\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(parentResults, result => {\n      assembleMetadata(collectionNode, result[node.linkName]);\n    });\n  });\n\n  if (node.isMeta) {\n    if (node.isVirtual) {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n\n        if (node.isOneResult) {\n          const storage = childResult[node.linkStorageField];\n          storeMetadata(childResult, parentResult, storage, true);\n        } else {\n          _.each(childResult, object => {\n            const storage = object[node.linkStorageField];\n            storeMetadata(object, parentResult, storage, true);\n          });\n        }\n      });\n    } else {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n        const storage = parentResult[node.linkStorageField];\n\n        if (node.isOneResult) {\n          if (childResult) {\n            storeMetadata(childResult, parentResult, storage, false);\n          }\n        } else {\n          _.each(childResult, object => {\n            storeMetadata(object, parentResult, storage, false);\n          });\n        }\n      });\n    }\n  }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n  if (isVirtual) {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  } else {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  }\n}\n\nfunction snapBackCaches(node) {\n  node.collectionNodes.forEach(collectionNode => {\n    snapBackCaches(collectionNode);\n  });\n\n  if (!_.isEmpty(node.snapCaches)) {\n    // process stuff\n    _.each(node.snapCaches, (linkName, cacheField) => {\n      const isSingle = _.contains(node.snapCachesSingles, cacheField);\n\n      const linker = node.collection.getLinker(linkName); // we do this because for one direct and one meta direct, id is not stored\n\n      const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n      node.results.forEach(result => {\n        if (result[cacheField]) {\n          if (shoudStoreLinkStorage) {\n            Object.assign(result[cacheField], {\n              _id: linker.isMeta() ? result[linker.linkStorageField]._id : result[linker.linkStorageField]\n            });\n          }\n\n          if (isSingle && _.isArray(result[cacheField])) {\n            result[linkName] = _.first(result[cacheField]);\n          } else {\n            result[linkName] = result[cacheField];\n          }\n\n          delete result[cacheField];\n        }\n      });\n    });\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForProcess.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForProcess.js                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 1);\n\nfunction defaultFilterFunction(_ref) {\n  let {\n    filters,\n    options,\n    params\n  } = _ref;\n\n  if (params.filters) {\n    Object.assign(filters, params.filters);\n  }\n\n  if (params.options) {\n    Object.assign(options, params.options);\n  }\n}\n\nfunction applyFilterRecursive(data) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (isRoot && !_.isFunction(data.$filter)) {\n    data.$filter = defaultFilterFunction;\n  }\n\n  if (data.$filter) {\n    check(data.$filter, Match.OneOf(Function, [Function]));\n    data.$filters = data.$filters || {};\n    data.$options = data.$options || {};\n\n    if (_.isArray(data.$filter)) {\n      data.$filter.forEach(filter => {\n        filter.call(null, {\n          filters: data.$filters,\n          options: data.$options,\n          params: params\n        });\n      });\n    } else {\n      data.$filter({\n        filters: data.$filters,\n        options: data.$options,\n        params: params\n      });\n    }\n\n    data.$filter = null;\n    delete data.$filter;\n  }\n\n  _.each(data, (value, key) => {\n    if (_.isObject(value)) {\n      return applyFilterRecursive(value, params);\n    }\n  });\n}\n\nfunction applyPagination(body, _params) {\n  if (body['$paginate'] && _params) {\n    if (!body.$options) {\n      body.$options = {};\n    }\n\n    if (_params.limit) {\n      _.extend(body.$options, {\n        limit: _params.limit\n      });\n    }\n\n    if (_params.skip) {\n      _.extend(body.$options, {\n        skip: _params.skip\n      });\n    }\n\n    delete body['$paginate'];\n  }\n}\n\nmodule.exportDefault(function (_body) {\n  let _params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let body = deepClone(_body);\n  let params = deepClone(_params);\n  applyPagination(body, params);\n  applyFilterRecursive(body, params, true);\n  return body;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveFetch.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveFetch.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet applyProps;\nmodule.watch(require(\"./applyProps.js\"), {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet assembleMetadata, removeLinkStorages, storeOneResults;\nmodule.watch(require(\"./prepareForDelivery\"), {\n  assembleMetadata(v) {\n    assembleMetadata = v;\n  },\n\n  removeLinkStorages(v) {\n    removeLinkStorages = v;\n  },\n\n  storeOneResults(v) {\n    storeOneResults = v;\n  }\n\n}, 1);\nlet prepareForDelivery;\nmodule.watch(require(\"./prepareForDelivery\"), {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 2);\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n  let {\n    filters,\n    options\n  } = applyProps(node);\n  let results = [];\n\n  if (parentObject) {\n    let accessor = node.linker.createLink(parentObject, node.collection);\n\n    if (node.isVirtual) {\n      options.fields = options.fields || {};\n\n      _.extend(options.fields, {\n        [node.linkStorageField]: 1\n      });\n    }\n\n    results = accessor.find(filters, options).fetch();\n  } else {\n    results = node.collection.find(filters, options).fetch();\n  }\n\n  _.each(node.collectionNodes, collectionNode => {\n    _.each(results, result => {\n      const collectionNodeResults = fetch(collectionNode, result);\n      result[collectionNode.linkName] = collectionNodeResults; //delete result[node.linker.linkStorageField];\n\n      /**\n       * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n       * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n       * the results?\n       *\n       * Other possible ways:\n       * - do something like assemble() in storeHypernovaResults\n       * - pass node.results to accessor above and find with sift\n       */\n\n      const currentIds = _.pluck(collectionNode.results, '_id');\n\n      collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n    });\n  });\n\n  return results;\n}\n\nmodule.exportDefault((node, params) => {\n  node.results = fetch(node);\n  prepareForDelivery(node, params);\n  return node.results;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nodes\":{\"collectionNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/collectionNode.js                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => CollectionNode\n});\nlet FieldNode;\nmodule.watch(require(\"./fieldNode.js\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 0);\nlet ReducerNode;\nmodule.watch(require(\"./reducerNode.js\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\n\nclass CollectionNode {\n  constructor(collection) {\n    let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let linkName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (collection && !_.isObject(body)) {\n      throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n    }\n\n    this.body = deepClone(body);\n    this.linkName = linkName;\n    this.collection = collection;\n    this.nodes = [];\n    this.props = {};\n    this.parent = null;\n    this.linker = null;\n    this.linkStorageField = null;\n    this.scheduledForDeletion = false;\n    this.reducers = [];\n    this.results = [];\n    this.snapCaches = {}; // {cacheField: linkName}\n\n    this.snapCachesSingles = []; // [cacheField1, cacheField2]\n  }\n\n  get collectionNodes() {\n    return _.filter(this.nodes, n => n instanceof CollectionNode);\n  }\n\n  get fieldNodes() {\n    return _.filter(this.nodes, n => n instanceof FieldNode);\n  }\n\n  get reducerNodes() {\n    return _.filter(this.nodes, n => n instanceof ReducerNode);\n  }\n  /**\n   * Adds children to itself\n   *\n   * @param node\n   * @param linker\n   */\n\n\n  add(node, linker) {\n    node.parent = this;\n\n    if (linker) {\n      node.linker = linker;\n      node.linkStorageField = linker.linkStorageField;\n      node.isMeta = linker.isMeta();\n      node.isVirtual = linker.isVirtual();\n      node.isOneResult = linker.isOneResult();\n      node.shouldCleanStorage = this._shouldCleanStorage(node);\n    }\n\n    this.nodes.push(node);\n  }\n  /**\n   * @param prop\n   * @param value\n   */\n\n\n  addProp(prop, value) {\n    if (prop === '$postFilter') {\n      check(value, Match.OneOf(Function, [Function]));\n    }\n\n    _.extend(this.props, {\n      [prop]: value\n    });\n  }\n  /**\n   * @param _node\n   */\n\n\n  remove(_node) {\n    this.nodes = _.filter(this.nodes, node => _node !== node);\n  }\n  /**\n   * @param filters\n   * @param options\n   */\n\n\n  applyFields(filters, options) {\n    let hasAddedAnyField = false;\n\n    _.each(this.fieldNodes, n => {\n      hasAddedAnyField = true;\n      n.applyFields(options.fields);\n    }); // it will only get here if it has collectionNodes children\n\n\n    _.each(this.collectionNodes, collectionNode => {\n      let linker = collectionNode.linker;\n\n      if (linker && !linker.isVirtual()) {\n        options.fields[linker.linkStorageField] = 1;\n        hasAddedAnyField = true;\n      }\n    }); // if he selected filters, we should automatically add those fields\n\n\n    _.each(filters, (value, field) => {\n      // special handling for the $meta filter and conditional operators\n      if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n        // if the field or the parent of the field already exists, don't add it\n        if (!_.has(options.fields, field.split('.')[0])) {\n          hasAddedAnyField = true;\n          options.fields[field] = 1;\n        }\n      }\n    });\n\n    if (!hasAddedAnyField) {\n      options.fields = {\n        _id: 1\n      };\n    }\n  }\n  /**\n   * @param fieldName\n   * @returns {boolean}\n   */\n\n\n  hasField(fieldName) {\n    return !!_.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param fieldName\n   * @returns {FieldNode}\n   */\n\n\n  getField(fieldName) {\n    return _.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasCollectionNode(name) {\n    return !!_.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasReducerNode(name) {\n    return !!_.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {ReducerNode}\n   */\n\n\n  getReducerNode(name) {\n    return _.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {CollectionNode}\n   */\n\n\n  getCollectionNode(name) {\n    return _.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @returns {*}\n   */\n\n\n  getName() {\n    return this.linkName ? this.linkName : this.collection ? this.collection._name : 'N/A';\n  }\n  /**\n   * This is used for caching links\n   *\n   * @param cacheField\n   * @param subLinkName\n   */\n\n\n  snapCache(cacheField, subLinkName) {\n    this.snapCaches[cacheField] = subLinkName;\n\n    if (this.collection.getLinker(subLinkName).isOneResult()) {\n      this.snapCachesSingles.push(cacheField);\n    }\n  }\n  /**\n   * This method verifies whether to remove the linkStorageField form the results\n   * unless you specify it in your query.\n   *\n   * @param node\n   * @returns {boolean}\n   * @private\n   */\n\n\n  _shouldCleanStorage(node) {\n    if (node.linkStorageField === '_id') {\n      return false;\n    } else {\n      if (node.isVirtual) {\n        return !node.hasField(node.linkStorageField);\n      } else {\n        return !this.hasField(node.linkStorageField);\n      }\n    }\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/fieldNode.js                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => FieldNode\n});\n\nclass FieldNode {\n  constructor(name, body) {\n    this.name = name;\n    this.body = _.isObject(body) ? 1 : body;\n    this.scheduledForDeletion = false;\n  }\n\n  applyFields(fields) {\n    fields[this.name] = this.body;\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducerNode.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/nodes/reducerNode.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => ReducerNode\n});\n\nclass ReducerNode {\n  constructor(name, _ref) {\n    let {\n      body,\n      reduce\n    } = _ref;\n    this.name = name;\n    this.body = body;\n    this.reduceFunction = reduce;\n  }\n  /**\n   * When computing we also pass the parameters\n   * \n   * @param {*} object \n   * @param {*} args \n   */\n\n\n  compute(object) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    object[this.name] = this.reduce.call(this, object, ...args);\n  }\n\n  reduce(object) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return this.reduceFunction.call(this, object, ...args);\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"extension.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/extension.js                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet addFieldMap;\nmodule.watch(require(\"./lib/addFieldMap\"), {\n  default(v) {\n    addFieldMap = v;\n  }\n\n}, 1);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * @param data\n   */\n  addReducers(data) {\n    if (!this[storage]) {\n      this[storage] = {};\n    }\n\n    _.each(data, (reducerConfig, reducerName) => {\n      if (!this[reducerConfig]) {\n        this[reducerConfig] = {};\n      }\n\n      if (this.getLinker(reducerName)) {\n        throw new Meteor.Error(\"You cannot add the reducer with name: \".concat(reducerName, \" because it is already defined as a link in \").concat(this._name, \" collection\"));\n      }\n\n      if (this[reducerConfig][reducerName]) {\n        throw new Meteor.Error(\"You cannot add the reducer with name: \".concat(reducerName, \" because it was already added to \").concat(this._name, \" collection\"));\n      }\n\n      check(reducerConfig, {\n        body: Object,\n        reduce: Function\n      });\n\n      _.extend(this[storage], {\n        [reducerName]: reducerConfig\n      });\n    });\n  },\n\n  /**\n   * @param name\n   * @returns {*}\n   */\n  getReducer(name) {\n    if (this[storage]) {\n      return this[storage][name];\n    }\n  },\n\n  /**\n   * This creates reducers that makes sort of aliases for the database fields we use\n   */\n  addFieldMap\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"addFieldMap.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/addFieldMap.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => addFieldMap\n});\n\nfunction addFieldMap(map) {\n  const collection = this;\n  let reducers = {};\n\n  for (let key in map) {\n    const dbField = map[key];\n    reducers[key] = {\n      body: {\n        [dbField]: 1\n      },\n\n      reduce(obj) {\n        return obj[dbField];\n      }\n\n    };\n  }\n\n  collection.addReducers(reducers);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"applyReducers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/applyReducers.js                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n  _.each(root.collectionNodes, node => {\n    applyReducers(node, params);\n  });\n\n  _.each(root.reducerNodes, reducerNode => {\n    root.results.forEach(result => {\n      reducerNode.compute(result, params);\n    });\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanReducerLeftovers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/cleanReducerLeftovers.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    cleanReducerLeftovers(node);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), root.results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createReducers.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/createReducers.js                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => addReducers,\n  handleAddElement: () => handleAddElement,\n  handleAddReducer: () => handleAddReducer,\n  handleAddLink: () => handleAddLink,\n  handleAddField: () => handleAddField\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\nlet createNodes;\nmodule.watch(require(\"../../lib/createGraph\"), {\n  createNodes(v) {\n    createNodes = v;\n  }\n\n}, 1);\nlet CollectionNode;\nmodule.watch(require(\"../../nodes/collectionNode\"), {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 2);\nlet FieldNode;\nmodule.watch(require(\"../../nodes/fieldNode\"), {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 3);\nlet ReducerNode;\nmodule.watch(require(\"../../nodes/reducerNode\"), {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 4);\nlet embedReducerWithLink;\nmodule.watch(require(\"./embedReducerWithLink\"), {\n  default(v) {\n    embedReducerWithLink = v;\n  }\n\n}, 5);\n\nfunction addReducers(root) {\n  // we add reducers last, after we have added all the fields.\n  root.reducerNodes.forEach(reducer => {\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(root, fieldName, body);\n    });\n  });\n}\n\nfunction handleAddElement(root, fieldName, body) {\n  // if it's a link\n  const collection = root.collection;\n  const linker = collection.getLinker(fieldName);\n\n  if (linker) {\n    return handleAddLink(fieldName, body, root, linker);\n  }\n\n  const reducer = collection.getReducer(fieldName);\n\n  if (reducer) {\n    return handleAddReducer(fieldName, reducer, root);\n  } // we assume it's a field in this case\n\n\n  return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, reducer, root) {\n  if (!root.hasReducerNode(fieldName)) {\n    let reducerNode = new ReducerNode(fieldName, reducer);\n    root.add(reducerNode);\n    reducerNode.scheduledForDeletion = true;\n\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(root, fieldName, body);\n    });\n  }\n}\n\nfunction handleAddLink(fieldName, body, root, linker) {\n  if (root.hasCollectionNode(fieldName)) {\n    const collectionNode = root.getCollectionNode(fieldName);\n    embedReducerWithLink(body, collectionNode);\n  } else {\n    // add\n    let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n    collectionNode.scheduledForDeletion = true;\n    root.add(collectionNode, linker);\n    createNodes(collectionNode);\n  }\n}\n\nfunction handleAddField(fieldName, body, root) {\n  if (_.isObject(body)) {\n    // if reducer specifies a nested field\n    const dots = dot.dot({\n      [fieldName]: body\n    });\n\n    _.each(dots, (value, key) => {\n      if (!root.hasField(key)) {\n        let fieldNode = new FieldNode(key, value);\n        fieldNode.scheduledForDeletion = true;\n        root.add(fieldNode);\n      }\n    });\n  } else {\n    // if reducer does not specify a nested field, and the field does not exist.\n    if (!root.hasField(fieldName)) {\n      let fieldNode = new FieldNode(fieldName, body);\n      fieldNode.scheduledForDeletion = true;\n      root.add(fieldNode);\n    }\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"embedReducerWithLink.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/embedReducerWithLink.js                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({\n  default: () => embedReducerWithLink\n});\nlet handleAddField, handleAddElement, handleAddReducer;\nmodule.watch(require(\"./createReducers\"), {\n  handleAddField(v) {\n    handleAddField = v;\n  },\n\n  handleAddElement(v) {\n    handleAddElement = v;\n  },\n\n  handleAddReducer(v) {\n    handleAddReducer = v;\n  }\n\n}, 0);\n\nfunction embedReducerWithLink(reducerBody, collectionNode) {\n  _.each(reducerBody, (value, key) => {\n    const collection = collectionNode.collection;\n\n    if (_.isObject(value)) {\n      // nested field or link\n      if (collectionNode.body[key]) {\n        // if it exists\n        const linker = collection.getLinker(key); // if it's a link\n\n        if (linker) {\n          if (linker.isDenormalized()) {\n            if (linker.isSubBodyDenormalized(value)) {\n              const cacheField = linker.linkConfig.denormalize.field;\n              handleAddField(cacheField, value, collectionNode);\n              return;\n            }\n          }\n\n          embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n          return;\n        }\n\n        handleAddField(key, value, collectionNode);\n      } else {\n        // does not exist, so it may be a link/reducer/field\n        handleAddElement(collectionNode, key, value);\n      }\n    } else {\n      // if this field or other reducer exists within the collection\n      if (!collectionNode.body[key]) {\n        // can only be field or another reducer for this.\n        const reducer = collection.getReducer(key);\n\n        if (reducer) {\n          // if it's another reducer\n          return handleAddReducer(key, reducer, collectionNode);\n        }\n\n        return handleAddField(key, value, collectionNode);\n      }\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},\"node_modules\":{\"lodash.clonedeep\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/package.json                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"lodash.clonedeep\";\nexports.version = \"4.5.0\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/index.js                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"dot-object\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/package.json                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"dot-object\";\nexports.version = \"1.5.4\";\nexports.main = \"index\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/index.js                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n'use strict'\n\nfunction _process (v, mod) {\n  var i\n  var r\n\n  if (typeof mod === 'function') {\n    r = mod(v)\n    if (r !== undefined) {\n      v = r\n    }\n  } else if (Array.isArray(mod)) {\n    for (i = 0; i < mod.length; i++) {\n      r = mod[i](v)\n      if (r !== undefined) {\n        v = r\n      }\n    }\n  }\n\n  return v\n}\n\nfunction parseKey (key, val) {\n  // detect negative index notation\n  if (key[0] === '-' && Array.isArray(val) && /^-\\d+$/.test(key)) {\n    return val.length + parseInt(key, 10)\n  }\n  return key\n}\n\nfunction isIndex (k) {\n  return /^\\d+/.test(k)\n}\n\nfunction parsePath (path, sep) {\n  if (path.indexOf('[') >= 0) {\n    path = path.replace(/\\[/g, '.').replace(/]/g, '')\n  }\n  return path.split(sep)\n}\n\nfunction DotObject (seperator, override, useArray) {\n  if (!(this instanceof DotObject)) {\n    return new DotObject(seperator, override, useArray)\n  }\n\n  if (typeof seperator === 'undefined') seperator = '.'\n  if (typeof override === 'undefined') override = false\n  if (typeof useArray === 'undefined') useArray = true\n  this.seperator = seperator\n  this.override = override\n  this.useArray = useArray\n\n  // contains touched arrays\n  this.cleanup = []\n}\n\nvar dotDefault = new DotObject('.', false, true)\nfunction wrap (method) {\n  return function () {\n    return dotDefault[method].apply(dotDefault, arguments)\n  }\n}\n\nDotObject.prototype._fill = function (a, obj, v, mod) {\n  var k = a.shift()\n\n  if (a.length > 0) {\n    obj[k] = obj[k] ||\n      (this.useArray && isIndex(a[0]) ? [] : {})\n\n    if (obj[k] !== Object(obj[k])) {\n      if (this.override) {\n        obj[k] = {}\n      } else {\n        throw new Error(\n          'Trying to redefine `' + k + '` which is a ' + typeof obj[k]\n        )\n      }\n    }\n\n    this._fill(a, obj[k], v, mod)\n  } else {\n    if (!this.override &&\n      obj[k] === Object(obj[k]) && Object.keys(obj[k]).length) {\n      throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\")\n    }\n\n    obj[k] = _process(v, mod)\n  }\n}\n\n/**\n *\n * Converts an object with dotted-key/value pairs to it's expanded version\n *\n * Optionally transformed by a set of modifiers.\n *\n * Usage:\n *\n *   var row = {\n *     'nr': 200,\n *     'doc.name': '  My Document  '\n *   }\n *\n *   var mods = {\n *     'doc.name': [_s.trim, _s.underscored]\n *   }\n *\n *   dot.object(row, mods)\n *\n * @param {Object} obj\n * @param {Object} mods\n */\nDotObject.prototype.object = function (obj, mods) {\n  var self = this\n\n  Object.keys(obj).forEach(function (k) {\n    var mod = mods === undefined ? null : mods[k]\n    // normalize array notation.\n    var ok = parsePath(k, self.seperator).join(self.seperator)\n\n    if (ok.indexOf(self.seperator) !== -1) {\n      self._fill(ok.split(self.seperator), obj, obj[k], mod)\n      delete obj[k]\n    } else if (self.override) {\n      obj[k] = _process(obj[k], mod)\n    }\n  })\n\n  return obj\n}\n\n/**\n * @param {String} path dotted path\n * @param {String} v value to be set\n * @param {Object} obj object to be modified\n * @param {Function|Array} mod optional modifier\n */\nDotObject.prototype.str = function (path, v, obj, mod) {\n  if (path.indexOf(this.seperator) !== -1) {\n    this._fill(path.split(this.seperator), obj, v, mod)\n  } else if (!obj.hasOwnProperty(path) || this.override) {\n    obj[path] = _process(v, mod)\n  }\n\n  return obj\n}\n\n/**\n *\n * Pick a value from an object using dot notation.\n *\n * Optionally remove the value\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Boolean} remove\n */\nDotObject.prototype.pick = function (path, obj, remove) {\n  var i\n  var keys\n  var val\n  var key\n  var cp\n\n  keys = parsePath(path, this.seperator)\n  for (i = 0; i < keys.length; i++) {\n    key = parseKey(keys[i], obj)\n    if (obj && typeof obj === 'object' && key in obj) {\n      if (i === (keys.length - 1)) {\n        if (remove) {\n          val = obj[key]\n          delete obj[key]\n          if (Array.isArray(obj)) {\n            cp = keys.slice(0, -1).join('.')\n            if (this.cleanup.indexOf(cp) === -1) {\n              this.cleanup.push(cp)\n            }\n          }\n          return val\n        } else {\n          return obj[key]\n        }\n      } else {\n        obj = obj[key]\n      }\n    } else {\n      return undefined\n    }\n  }\n  if (remove && Array.isArray(obj)) {\n    obj = obj.filter(function (n) { return n !== undefined })\n  }\n  return obj\n}\n\n/**\n *\n * Remove value from an object using dot notation.\n *\n * @param {String} path\n * @param {Object} obj\n * @return {Mixed} The removed value\n */\nDotObject.prototype.remove = function (path, obj) {\n  var i\n\n  this.cleanup = []\n  if (Array.isArray(path)) {\n    for (i = 0; i < path.length; i++) {\n      this.pick(path[i], obj, true)\n    }\n    this._cleanup(obj)\n    return obj\n  } else {\n    return this.pick(path, obj, true)\n  }\n}\n\nDotObject.prototype._cleanup = function (obj) {\n  var ret\n  var i\n  var keys\n  var root\n  if (this.cleanup.length) {\n    for (i = 0; i < this.cleanup.length; i++) {\n      keys = this.cleanup[i].split('.')\n      root = keys.splice(0, -1).join('.')\n      ret = root ? this.pick(root, obj) : obj\n      ret = ret[keys[0]].filter(function (v) { return v !== undefined })\n      this.set(this.cleanup[i], ret, obj)\n    }\n    this.cleanup = []\n  }\n}\n\n// alias method\nDotObject.prototype.del = DotObject.prototype.remove\n\n/**\n *\n * Move a property from one place to the other.\n *\n * If the source path does not exist (undefined)\n * the target property will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.move = function (source, target, obj, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(this.pick(source, obj, true), mods), obj, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj, true), obj, merge)\n  }\n\n  return obj\n}\n\n/**\n *\n * Transfer a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target,\n      _process(\n        this.pick(source, obj1, true),\n        mods\n      ), obj2, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, true), obj2, merge)\n  }\n\n  return obj2\n}\n\n/**\n *\n * Copy a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target,\n      _process(\n        // clone what is picked\n        JSON.parse(\n          JSON.stringify(\n            this.pick(source, obj1, false)\n          )\n        ),\n        mods\n      ), obj2, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, false), obj2, merge)\n  }\n\n  return obj2\n}\n\nfunction isObject (val) {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\n/**\n *\n * Set a property on an object using dot notation.\n *\n * @param {String} path\n * @param {Mixed} val\n * @param {Object} obj\n * @param {Boolean} merge\n */\nDotObject.prototype.set = function (path, val, obj, merge) {\n  var i\n  var k\n  var keys\n  var key\n\n  // Do not operate if the value is undefined.\n  if (typeof val === 'undefined') {\n    return obj\n  }\n  keys = parsePath(path, this.seperator)\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i]\n    if (i === (keys.length - 1)) {\n      if (merge && isObject(val) && isObject(obj[key])) {\n        for (k in val) {\n          if (val.hasOwnProperty(k)) {\n            obj[key][k] = val[k]\n          }\n        }\n      } else if (merge && Array.isArray(obj[key]) && Array.isArray(val)) {\n        for (var j = 0; j < val.length; j++) {\n          obj[keys[i]].push(val[j])\n        }\n      } else {\n        obj[key] = val\n      }\n    } else if (\n      // force the value to be an object\n      !obj.hasOwnProperty(key) ||\n      (!isObject(obj[key]) && !Array.isArray(obj[key]))\n    ) {\n      // initialize as array if next key is numeric\n      if (/^\\d+$/.test(keys[i + 1])) {\n        obj[key] = []\n      } else {\n        obj[key] = {}\n      }\n    }\n    obj = obj[key]\n  }\n  return obj\n}\n\n/**\n *\n * Transform an object\n *\n * Usage:\n *\n *   var obj = {\n *     \"id\": 1,\n  *    \"some\": {\n  *      \"thing\": \"else\"\n  *    }\n *   }\n *\n *   var transform = {\n *     \"id\": \"nr\",\n  *    \"some.thing\": \"name\"\n *   }\n *\n *   var tgt = dot.transform(transform, obj)\n *\n * @param {Object} recipe Transform recipe\n * @param {Object} obj Object to be transformed\n * @param {Array} mods modifiers for the target\n */\nDotObject.prototype.transform = function (recipe, obj, tgt) {\n  obj = obj || {}\n  tgt = tgt || {}\n  Object.keys(recipe).forEach(function (key) {\n    this.set(recipe[key], this.pick(key, obj), tgt)\n  }.bind(this))\n  return tgt\n}\n\n/**\n *\n * Convert object to dotted-key/value pair\n *\n * Usage:\n *\n *   var tgt = dot.dot(obj)\n *\n *   or\n *\n *   var tgt = {}\n *   dot.dot(obj, tgt)\n *\n * @param {Object} obj source object\n * @param {Object} tgt target object\n * @param {Array} path path array (internal)\n */\nDotObject.prototype.dot = function (obj, tgt, path) {\n  tgt = tgt || {}\n  path = path || []\n  Object.keys(obj).forEach(function (key) {\n    if (Object(obj[key]) === obj[key] && (Object.prototype.toString.call(obj[key]) === '[object Object]') || Object.prototype.toString.call(obj[key]) === '[object Array]') {\n      return this.dot(obj[key], tgt, path.concat(key))\n    } else {\n      tgt[path.concat(key).join(this.seperator)] = obj[key]\n    }\n  }.bind(this))\n  return tgt\n}\n\nDotObject.pick = wrap('pick')\nDotObject.move = wrap('move')\nDotObject.transfer = wrap('transfer')\nDotObject.transform = wrap('transform')\nDotObject.copy = wrap('copy')\nDotObject.object = wrap('object')\nDotObject.str = wrap('str')\nDotObject.set = wrap('set')\nDotObject.del = DotObject.remove = wrap('remove')\nDotObject.dot = wrap('dot')\n\n;['override', 'overwrite'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault.override\n    },\n    set: function (val) {\n      dotDefault.override = !!val\n    }\n  })\n})\n\nObject.defineProperty(DotObject, 'useArray', {\n  get: function () {\n    return dotDefault.useArray\n  },\n  set: function (val) {\n    dotDefault.useArray = val\n  }\n})\n\nDotObject._process = _process\n\nmodule.exports = DotObject;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"sift\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/package.json                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"sift\";\nexports.version = \"3.2.6\";\nexports.main = \"./sift.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sift.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/sift.js                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/*\n * Sift 3.x\n *\n * Copryright 2015, Craig Condon\n * Licensed under MIT\n *\n * Filter JavaScript objects with mongodb queries\n */\n\n(function() {\n\n  'use strict';\n\n  /**\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  /**\n   */\n\n  function isArray(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  }\n\n  /**\n   */\n\n  function comparable(value) {\n    if (value instanceof Date) {\n      return value.getTime();\n    } else if (value instanceof Array) {\n      return value.map(comparable);\n    } else {\n      return value;\n    }\n  }\n\n  function get(obj, key) {\n    if (obj.get) return obj.get(key);\n    return obj[key];\n  }\n\n  /**\n   */\n\n  function or(validator) {\n    return function(a, b) {\n      if (!isArray(b) || !b.length) return validator(a, b);\n      for (var i = 0, n = b.length; i < n; i++) if (validator(a, get(b,i))) return true;\n      return false;\n    }\n  }\n\n  /**\n   */\n\n  function and(validator) {\n    return function(a, b) {\n      if (!isArray(b) || !b.length) return validator(a, b);\n      for (var i = 0, n = b.length; i < n; i++) if (!validator(a, get(b, i))) return false;\n      return true;\n    };\n  }\n\n  function validate(validator, b) {\n    return validator.v(validator.a, b);\n  }\n\n\n  var operator = {\n\n    /**\n     */\n\n    $eq: or(function(a, b) {\n      return a(b);\n    }),\n\n    /**\n     */\n\n    $ne: and(function(a, b) {\n      return !a(b);\n    }),\n\n    /**\n     */\n\n    $or: function(a, b) {\n      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b)) return true;\n      return false;\n    },\n\n    /**\n     */\n\n    $gt: or(function(a, b) {\n      return sift.compare(comparable(b), a) > 0;\n    }),\n\n    /**\n     */\n\n    $gte: or(function(a, b) {\n      return sift.compare(comparable(b), a) >= 0;\n    }),\n\n    /**\n     */\n\n    $lt: or(function(a, b) {\n      return sift.compare(comparable(b), a) < 0;\n    }),\n\n    /**\n     */\n\n    $lte: or(function(a, b) {\n      return sift.compare(comparable(b), a) <= 0;\n    }),\n\n    /**\n     */\n\n    $mod: or(function(a, b) {\n      return b % a[0] == a[1];\n    }),\n\n    /**\n     */\n\n    $in: function(a, b) {\n\n      if (b instanceof Array) {\n        for (var i = b.length; i--;) {\n          if (~a.indexOf(comparable(get(b, i)))) return true;\n        }\n      } else {\n        return !!~a.indexOf(comparable(b));\n      }\n\n      return false;\n    },\n\n    /**\n     */\n\n    $nin: function(a, b) {\n      return !operator.$in(a, b);\n    },\n\n    /**\n     */\n\n    $not: function(a, b) {\n      return !validate(a, b);\n    },\n\n    /**\n     */\n\n    $type: function(a, b) {\n      return b != void 0 ? b instanceof a || b.constructor == a : false;\n     },\n\n    /**\n     */\n\n    $all: function(a, b) {\n      if (!b) b = [];\n      for (var i = a.length; i--;) {\n        if (!~comparable(b).indexOf(get(a, i))) return false;\n      }\n      return true;\n    },\n\n    /**\n     */\n\n    $size: function(a, b) {\n      return b ? a === b.length : false;\n    },\n\n    /**\n     */\n\n    $nor: function(a, b) {\n      // todo - this suffice? return !operator.$in(a)\n      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b)) return false;\n      return true;\n    },\n\n    /**\n     */\n\n    $and: function(a, b) {\n      for (var i = 0, n = a.length; i < n; i++) if (!validate(get(a, i), b)) return false;\n      return true;\n    },\n\n    /**\n     */\n\n    $regex: or(function(a, b) {\n      return typeof b === 'string' && a.test(b);\n    }),\n\n    /**\n     */\n\n    $where: function(a, b) {\n      return a.call(b, b);\n    },\n\n    /**\n     */\n\n    $elemMatch: function(a, b) {\n      if (isArray(b)) return !!~search(b, a);\n      return validate(a, b);\n    },\n\n    /**\n     */\n\n    $exists: function(a, b) {\n      return (b != void 0) === a;\n    }\n  };\n\n  /**\n   */\n\n  var prepare = {\n\n    /**\n     */\n\n    $eq: function(a) {\n\n      if (a instanceof RegExp) {\n        return function(b) {\n          return typeof b === 'string' && a.test(b);\n        };\n      } else if (a instanceof Function) {\n        return a;\n      } else if (isArray(a) && !a.length) {\n        // Special case of a == []\n        return function(b) {\n          return (isArray(b) && !b.length);\n        };\n      } else if (a === null){\n        return function(b){\n          //will match both null and undefined\n          return b == null;\n        }\n      }\n\n      return function(b) {\n        return sift.compare(comparable(b), a) === 0;\n      };\n    },\n\n    /**\n     */\n\n    $ne: function(a) {\n      return prepare.$eq(a);\n    },\n\n    /**\n     */\n\n    $and: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $or: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $nor: function(a) {\n      return a.map(parse);\n    },\n\n    /**\n     */\n\n    $not: function(a) {\n      return parse(a);\n    },\n\n    /**\n     */\n\n    $regex: function(a, query) {\n      return new RegExp(a, query.$options);\n    },\n\n    /**\n     */\n\n    $where: function(a) {\n      return typeof a === 'string' ? new Function('obj', 'return ' + a) : a;\n    },\n\n    /**\n     */\n\n    $elemMatch: function(a) {\n      return parse(a);\n    },\n\n    /**\n     */\n\n    $exists: function(a) {\n      return !!a;\n    }\n  };\n\n  /**\n   */\n\n  function search(array, validator) {\n\n    for (var i = 0; i < array.length; i++) {\n      if (validate(validator, get(array, i))) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   */\n\n  function createValidator(a, validate) {\n    return { a: a, v: validate };\n  }\n\n  /**\n   */\n\n  function nestedValidator(a, b) {\n    var values  = [];\n    findValues(b, a.k, 0, values);\n\n    if (values.length === 1) {\n      return validate(a.nv, values[0]);\n    }\n\n    return !!~search(values, a.nv);\n  }\n\n  /**\n   */\n\n  function findValues(current, keypath, index, values) {\n\n    if (index === keypath.length || current == void 0) {\n      values.push(current);\n      return;\n    }\n\n    var k = get(keypath, index);\n\n    // ensure that if current is an array, that the current key\n    // is NOT an array index. This sort of thing needs to work:\n    // sift({'foo.0':42}, [{foo: [42]}]);\n    if (isArray(current) && isNaN(Number(k))) {\n      for (var i = 0, n = current.length; i < n; i++) {\n        findValues(get(current, i), keypath, index, values);\n      }\n    } else {\n      findValues(get(current, k), keypath, index + 1, values);\n    }\n  }\n\n  /**\n   */\n\n  function createNestedValidator(keypath, a) {\n    return { a: { k: keypath, nv: a }, v: nestedValidator };\n  }\n\n  /**\n   * flatten the query\n   */\n\n  function parse(query) {\n    query = comparable(query);\n\n    if (!query || (query.constructor.toString() !== 'Object' &&\n        query.constructor.toString().replace(/\\n/g,'').replace(/ /g, '') !== 'functionObject(){[nativecode]}')) { // cross browser support\n      query = { $eq: query };\n    }\n\n    var validators = [];\n\n    for (var key in query) {\n      var a = query[key];\n\n      if (key === '$options') continue;\n\n      if (operator[key]) {\n        if (prepare[key]) a = prepare[key](a, query);\n        validators.push(createValidator(comparable(a), operator[key]));\n      } else {\n\n        if (key.charCodeAt(0) === 36) {\n          throw new Error('Unknown operation ' + key);\n        }\n\n        validators.push(createNestedValidator(key.split('.'), parse(a)));\n      }\n    }\n\n    return validators.length === 1 ? validators[0] : createValidator(validators, operator.$and);\n  }\n\n  /**\n   */\n\n  function createRootValidator(query, getter) {\n    var validator = parse(query);\n    if (getter) {\n      validator = {\n        a: validator,\n        v: function(a, b) {\n          return validate(a, getter(b));\n        }\n      };\n    }\n    return validator;\n  }\n\n  /**\n   */\n\n  function sift(query, array, getter) {\n\n    if (isFunction(array)) {\n      getter = array;\n      array  = void 0;\n    }\n\n    var validator = createRootValidator(query, getter);\n\n    function filter(b) {\n      return validate(validator, b);\n    }\n\n    if (array) {\n      return array.filter(filter);\n    }\n\n    return filter;\n  }\n\n  /**\n   */\n\n  sift.use = function(plugin) {\n    if (isFunction(plugin)) return plugin(sift);\n    for (var key in plugin) {\n      if (key.charCodeAt(0) === 36) operator[key] = plugin[key];\n    }\n  };\n\n  /**\n   */\n\n  sift.indexOf = function(query, array, getter) {\n    return search(array, createRootValidator(query, getter));\n  };\n\n  /**\n   */\n\n  sift.compare = function(a, b) {\n    if(a===b) return 0;\n    if(typeof a === typeof b) {\n      if (a > b) return 1;\n      if (a < b) return -1;\n    }\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = sift;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.sift = sift;\n  }\n})();\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deep-extend\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/package.json                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"deep-extend\";\nexports.version = \"0.5.0\";\nexports.main = \"lib/deep-extend.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"deep-extend.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/lib/deep-extend.js                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = target[key]; // source value\n\t\t\tval = obj[key]; // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"/node_modules/meteor/cultofcoders:grapher/main.client.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:grapher\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_grapher.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:grapher/main.client.js","packages/cultofcoders:grapher/lib/compose.js","packages/cultofcoders:grapher/lib/createQuery.js","packages/cultofcoders:grapher/lib/extension.js","packages/cultofcoders:grapher/lib/links/config.schema.js","packages/cultofcoders:grapher/lib/links/constants.js","packages/cultofcoders:grapher/lib/links/extension.js","packages/cultofcoders:grapher/lib/links/linker.js","packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","packages/cultofcoders:grapher/lib/links/linkTypes/base.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","packages/cultofcoders:grapher/lib/namedQuery/store.js","packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","packages/cultofcoders:grapher/lib/query/query.base.js","packages/cultofcoders:grapher/lib/query/query.client.js","packages/cultofcoders:grapher/lib/query/query.js","packages/cultofcoders:grapher/lib/query/query.server.js","packages/cultofcoders:grapher/lib/query/counts/collection.js","packages/cultofcoders:grapher/lib/query/counts/constants.js","packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","packages/cultofcoders:grapher/lib/query/hypernova/constants.js","packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","packages/cultofcoders:grapher/lib/query/lib/applyProps.js","packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","packages/cultofcoders:grapher/lib/query/lib/createGraph.js","packages/cultofcoders:grapher/lib/query/lib/dotize.js","packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","packages/cultofcoders:grapher/lib/query/reducers/extension.js","packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js","packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","watch","require","default","v","exports","createQuery","prepareForProcess","Query","NamedQuery","compose","deepExtend","exportDefault","args","NamedQueryStore","name","body","options","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","Mongo","Collection","get","Meteor","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","extend","prototype","export","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","Match","field","String","Object","bypassSchema","Maybe","Boolean","type","OneOf","Where","isObject","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","assign","addLinks","data","each","linkConfig","linkName","_name","linker","getLinks","getLinker","hasLink","getLink","objectOrId","linkData","object","isVirtual","findOne","fields","linkStorageField","_id","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","check","constructor","mainCollection","_validateAndClean","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","relatedLinker","getLinkedCollection","isSingle","isMeta","contains","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","accessor","fetch","linkedObj","link","unset","isServer","_ensureIndex","$in","getIds","ids","find","map","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","length","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","value","undefined","filters","key","pluck","$elemMatch","Link","SmartArgs","config","linkedCollection","$metaFilters","$meta","searchFilters","appliedFilters","others","result","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","isArray","validIds","join","_virtualAction","action","reversedLink","element","elementId","insert","set","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","push","extendMetadata","existingMetadata","subfield","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","deepClone","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","isResolver","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","cacher","exposeConfig","validator","call","CountSubscription","createGraph","recursiveFetch","callWithPromise","Base","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","intersectDeep","allowSkip","$options","skip","NamedQueryClient","NamedQueryServer","MemoryResultCacher","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","count","$filters","cacheResults","resolve","fn","self","_callFirewall","storage","getAll","BaseResultCacher","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","QueryBase","isGlobalQuery","QueryClient","QueryServer","hypernova","node","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","arg","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","AggregateFilters","collectionNode","parentObjects","parent","results","create","uniq","eligibleObjects","storages","arrayOfIds","isValid","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","comparator","childLinkName","parentResults","forEach","Array","limit","resultsByKeyId","groupBy","filterAssembledData","slice","SAFE_DOTTED_FIELD_REPLACEMENT","containsDottedFields","pipeline","firewall","$match","sort","$sort","dataPush","indexOf","safeField","$group","$push","$slice","$project","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","collectionNodes","bypassFirewalls","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregate","aggregationResult","document","RegExp","restrictOptions","props","applyFields","method","myParameters","Promise","reject","reason","createNodes","addFieldNode","CollectionNode","FieldNode","ReducerNode","dotize","createReducers","specialFields","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","fieldNodes","dotted","convert","fieldNode","snapCache","obj","prefix","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","prop","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","getResultsArray","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","isUndefined","sameLevelResults","removeStorageField","shouldCleanStorage","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","Function","applyPagination","_params","_body","parentObject","collectionNodeResults","currentIds","nodes","scheduledForDeletion","reducers","n","reducerNodes","_shouldCleanStorage","_node","hasAddedAnyField","has","split","hasField","getField","hasCollectionNode","hasReducerNode","getReducerNode","getCollectionNode","getName","subLinkName","reduce","reduceFunction","compute","addFieldMap","addReducers","reducerConfig","reducerName","dbField","cleanNestedFields","parts","snapCacheField","shift","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","dots","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\n\nexport { default as createQuery } from './lib/createQuery.js';\n\nexport {\n    default as prepareForProcess,\n} from './lib/query/lib/prepareForProcess';\n\nexport { default as Query } from './lib/query/query.client';\n\nexport { default as NamedQuery } from './lib/namedQuery/namedQuery.client';\n\nexport { default as compose } from './lib/compose';\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    },\n});\n","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport { LINK_STORAGE } from './constants.js';\nimport Linker from './linker.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker,\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(\n                `There are no links defined for collection: ${this._name}`\n            );\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(\n                `There is no link ${name} for collection: ${this._name}`\n            );\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1,\n                    },\n                });\n            } else {\n                object = { _id: objectOrId };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(\n                    `We could not find any object with _id: \"${objectOrId}\" within the collection: ${\n                        this._name\n                    }`\n                );\n            }\n        }\n\n        return linkData[name].createLink(object);\n    },\n});\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport {LinkConfigSchema, LinkConfigDefaults} from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport {check} from 'meteor/check';\nimport {_} from 'meteor/underscore';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique)\n            || (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`)\n        }\n\n        if (typeof(this.linkConfig.collection) === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const {collection, inversedBy} = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`)\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            })\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`)\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {relatedLinker} = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        })\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {unique: true}\n                }\n\n                this.mainCollection._ensureIndex({[field]: 1}, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {unique: true})\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                })\n            })\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {fields: {_id: 1}}).fetch().map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: {$in: ids}\n                })\n            })\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`)\n        }\n\n        const {field, body, bypassSchema} = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = (this.isSingle() ? '._id' : ':_id');\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            })\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(\n            dot.dot(\n                _.omit(body, '_id')\n            )\n        );\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    $elemMatch: {\n                        _id: {\n                            $in: _ids\n                        }\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    const isMany = linker.isMany();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                linkStorageField,\n                metaFiltersTest\n            );\n        });\n    }\n\n    if (isMeta && isMany) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(\n                aggregateResults,\n                aggregateResult => {\n                    return _.contains(aggregateResult._id, parentResult._id);\n                }\n            );\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        let comparator;\n        if (isMany) {\n            comparator = (aggregateResult, result) =>\n                _.contains(aggregateResult._id, result._id);\n        } else {\n            comparator = (aggregateResult, result) =>\n                aggregateResult._id == result._id;\n        }\n\n        const childLinkName = childCollectionNode.linkName;\n        const parentResults = childCollectionNode.parent.results;\n\n        parentResults.forEach(parentResult => {\n            // We are now finding the data from the pipeline that is related to the _id of the parent\n            const eligibleAggregateResults = aggregateResults.filter(\n                aggregateResult => comparator(aggregateResult, parentResult)\n            );\n\n            eligibleAggregateResults.forEach(aggregateResult => {\n                if (Array.isArray(parentResult[childLinkName])) {\n                    parentResult[childLinkName].push(...aggregateResult.data);\n                } else {\n                    parentResult[childLinkName] = [...aggregateResult.data];\n                }\n            });\n        });\n\n        aggregateResults.forEach(aggregateResult => {\n            allResults.push(...aggregateResult.data);\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}\n","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\n    if (childCollectionNode.results.length === 0) {\n        return;\n    }\n\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                fieldStorage,\n                metaFiltersTest\n            );\n        });\n    }\n\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n    if (strategy === 'one') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[parentResult[fieldStorage]],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            let data = [];\n            parentResult[fieldStorage].forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'one-meta') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            const _id = parentResult[fieldStorage]._id;\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[_id],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many-meta') {\n        parent.results.forEach(parentResult => {\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\n            let data = [];\n            _ids.forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n};\n\nfunction filterAssembledData(data, { limit, skip }) {\n    if (limit && Array.isArray(data)) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n","import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return (childCollectionNode.results = []);\n    }\n\n    let { filters, options } = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(\n        childCollectionNode,\n        metaFilters\n    );\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection\n            .find(filters, filteredOptions, userId)\n            .fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters,\n        });\n    } else {\n        // virtuals arrive here\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\n            childCollectionNode,\n            filters,\n            options,\n            userId\n        );\n\n        let aggregateResults = collection.aggregate(pipeline);\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(\n            childCollectionNode,\n            aggregateResults,\n            metaFilters\n        );\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nconst specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        let dotted = dotize.convert({[fieldName]: body});\n        _.each(dotted, (value, key) => {\n            root.add(new FieldNode(key, value));\n        });\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    storeOneResults(node, node.results);\n    applyReducers(node, params);\n    cleanReducerLeftovers(node);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    removeLinkStorages(node, node.results);\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\nexport function getResultsArray(results) {\n    if (_.isArray(results)) {\n        return results;\n    }\n    else if (_.isUndefined(results)) {\n        return [];\n    }\n    return [results];\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    sameLevelResults = getResultsArray(sameLevelResults);\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                delete result[collectionNode.linkStorageField];\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            _.each(sameLevelResults, result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    // parentResults might be an object (for type==one links)\n    parentResults = getResultsArray(parentResults);\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            if (node.isOneResult) {\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n            }\n            else {\n                parentResult[linkName] = parentResult[linkName].map(object => {\n                    return Object.assign({}, object);\n                });\n            }\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    parentResults = getResultsArray(parentResults);\n\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                if (node.isOneResult) {\n                    const storage = childResult[node.linkStorageField];\n                    storeMetadata(childResult, parentResult, storage, true);\n                } else {\n                    _.each(childResult, object => {\n                        const storage = object[node.linkStorageField];\n\n                        storeMetadata(object, parentResult, storage, true);\n                    });\n                }\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                if (node.isOneResult) {\n                    if (childResult) {\n                        storeMetadata(childResult, parentResult, storage, false);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        storeMetadata(object, parentResult, storage, false);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n    let {filters, options} = applyProps(node);\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            const collectionNodeResults = fetch(collectionNode, result);\n            result[collectionNode.linkName] = collectionNodeResults;\n            //delete result[node.linker.linkStorageField];\n\n            /**\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n             * the results?\n             *\n             * Other possible ways:\n             * - do something like assemble() in storeHypernovaResults\n             * - pass node.results to accessor above and find with sift\n             */\n\n            const currentIds = _.pluck(collectionNode.results, '_id');\n            collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params) => {\n    node.results = fetch(node);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            hasAddedAnyField = true;\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter and conditional operators\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {_id: 1};\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName) {\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n","export default class FieldNode {\n    constructor(name, body) {\n        this.name = name;\n        this.body = _.isObject(body) ? 1 : body;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n","/**\n * @param {[niceField: string]: dbField} map\n */\nexport default function addFieldMap(map) {\n    const collection = this;\n    let reducers = {};\n    for (let key in map) {\n        const dbField = map[key];\n        reducers[key] = {\n            body: {\n                [dbField]: 1,\n            },\n            reduce(obj) {\n                return obj[dbField];\n            },\n        };\n    }\n\n    collection.addReducers(reducers);\n}\n","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    _.each(root.reducerNodes, reducerNode => {\n        root.results.forEach(result => {\n            reducerNode.compute(result, params);\n        });\n    });\n}","import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n\n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, reducer, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let reducerNode = new ReducerNode(fieldName, reducer);\n        root.add(reducerNode);\n        reducerNode.scheduledForDeletion = true;\n\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(fieldName, body, root, linker) {\n    if (root.hasCollectionNode(fieldName)) {\n        const collectionNode = root.getCollectionNode(fieldName);\n\n        embedReducerWithLink(body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        root.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            if (!root.hasField(key)) {\n                let fieldNode = new FieldNode(key, value);\n                fieldNode.scheduledForDeletion = true;\n\n                root.add(fieldNode);\n            }\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        if (!root.hasField(fieldName)) {\n            let fieldNode = new FieldNode(fieldName, body);\n            fieldNode.scheduledForDeletion = true;\n\n            root.add(fieldNode);\n        }\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    if (linker.isDenormalized()) {\n                        if (linker.isSubBodyDenormalized(value)) {\n                            const cacheField = linker.linkConfig.denormalize.field;\n                            handleAddField(cacheField, value, collectionNode);\n                            return;\n                        }\n                    }\n\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(collectionNode, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}}]