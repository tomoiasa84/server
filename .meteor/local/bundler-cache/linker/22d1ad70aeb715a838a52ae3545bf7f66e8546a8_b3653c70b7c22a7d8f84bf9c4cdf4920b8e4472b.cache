[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar EJSON = Package.ejson.EJSON;\nvar Mongo = Package.mongo.Mongo;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar wsLink;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:apollo\":{\"client\":{\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/cultofcoders_apollo/client/index.js                                                          //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  initialize: function () {\n    return initialize;\n  },\n  Config: function () {\n    return Config;\n  },\n  meteorAccountsLink: function () {\n    return meteorAccountsLink;\n  }\n});\nvar ApolloClient;\nmodule.link(\"apollo-client\", {\n  \"default\": function (v) {\n    ApolloClient = v;\n  }\n}, 0);\nvar WebSocketLink;\nmodule.link(\"apollo-link-ws\", {\n  WebSocketLink: function (v) {\n    WebSocketLink = v;\n  }\n}, 1);\nvar HttpLink;\nmodule.link(\"apollo-link-http\", {\n  HttpLink: function (v) {\n    HttpLink = v;\n  }\n}, 2);\nvar ApolloLink;\nmodule.link(\"apollo-link\", {\n  \"default\": function (v) {\n    ApolloLink = v;\n  }\n}, 3);\nvar InMemoryCache;\nmodule.link(\"apollo-cache-inmemory\", {\n  InMemoryCache: function (v) {\n    InMemoryCache = v;\n  }\n}, 4);\nvar getMainDefinition;\nmodule.link(\"apollo-utilities\", {\n  getMainDefinition: function (v) {\n    getMainDefinition = v;\n  }\n}, 5);\nvar meteorAccountsLink;\nmodule.link(\"./meteorAccountsLink\", {\n  meteorAccountsLink: function (v) {\n    meteorAccountsLink = v;\n  }\n}, 6);\nvar createUploadLink;\nmodule.link(\"apollo-upload-client\", {\n  createUploadLink: function (v) {\n    createUploadLink = v;\n  }\n}, 7);\nvar Config;\nmodule.link(\"./config\", {\n  \"default\": function (v) {\n    Config = v;\n  }\n}, 8);\nvar checkNpmVersions;\nmodule.link(\"meteor/tmeasday:check-npm-versions\", {\n  checkNpmVersions: function (v) {\n    checkNpmVersions = v;\n  }\n}, 9);\nvar GRAPHQL_SUBSCRIPTION_ENDPOINT, GRAPHQL_ENDPOINT, AUTH_TOKEN_KEY;\nmodule.link(\"../constants\", {\n  GRAPHQL_SUBSCRIPTION_ENDPOINT: function (v) {\n    GRAPHQL_SUBSCRIPTION_ENDPOINT = v;\n  },\n  GRAPHQL_ENDPOINT: function (v) {\n    GRAPHQL_ENDPOINT = v;\n  },\n  AUTH_TOKEN_KEY: function (v) {\n    AUTH_TOKEN_KEY = v;\n  }\n}, 10);\ncheckNpmVersions({\n  'subscriptions-transport-ws': '0.9.x',\n  'apollo-upload-client': 'x.x.x',\n  'apollo-client': '2.x.x',\n  'apollo-cache-inmemory': '1.x.x',\n  'apollo-link': '1.x.x',\n  'apollo-link-http': '1.x.x',\n  'apollo-link-ws': '1.x.x' // 'apollo-live-client': '0.2.x',\n  // 'apollo-morpher': '0.2.x',\n\n});\n\nfunction initialize() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(Config, config);\n  Object.freeze(Config);\n  var uploadLink = createUploadLink();\n  var terminatingLink; // We define the HTTP Link\n\n  var httpLink = new HttpLink((0, _objectSpread2.default)({\n    uri: GRAPHQL_ENDPOINT\n  }, config.httpLinkOptions || {}));\n\n  if (meteorAccountsLink) {\n    terminatingLink = ApolloLink.concat(meteorAccountsLink, uploadLink, httpLink);\n  } else {\n    terminatingLink = ApolloLink.concat(uploadLink, httpLink);\n  } // A chance to add change the links\n\n\n  terminatingLink = Config.getLink(terminatingLink);\n\n  if (!config.disableWebsockets) {\n    wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTION_ENDPOINT,\n      options: {\n        reconnect: true,\n        connectionParams: function () {\n          var _ref;\n\n          return _ref = {}, _ref[AUTH_TOKEN_KEY] = localStorage.getItem('Meteor.loginToken'), _ref;\n        }\n      }\n    }); // If it's subscription it goes through wsLink otherwise through terminatingLink\n\n    terminatingLink = ApolloLink.split(function (_ref2) {\n      var query = _ref2.query;\n\n      var _getMainDefinition = getMainDefinition(query),\n          kind = _getMainDefinition.kind,\n          operation = _getMainDefinition.operation;\n\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    }, wsLink, terminatingLink);\n  }\n\n  var client = new ApolloClient({\n    link: terminatingLink,\n    cache: new InMemoryCache({\n      dataIdFromObject: function (object) {\n        return object._id || null;\n      }\n    }).restore(window.__APOLLO_STATE__ || {})\n  });\n  return {\n    client: client\n  };\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"config.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/cultofcoders_apollo/client/config.js                                                         //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nmodule.exportDefault({\n  disableWebsockets: false,\n  getLink: function (link) {\n    return link;\n  },\n  httpLinkOptions: {}\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meteorAccountsLink.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/cultofcoders_apollo/client/meteorAccountsLink.js                                             //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nmodule.export({\n  meteorAccountsLink: function () {\n    return meteorAccountsLink;\n  }\n});\nvar ApolloClient;\nmodule.link(\"apollo-client\", {\n  ApolloClient: function (v) {\n    ApolloClient = v;\n  }\n}, 0);\nvar ApolloLink;\nmodule.link(\"apollo-link\", {\n  ApolloLink: function (v) {\n    ApolloLink = v;\n  }\n}, 1);\nvar meteorAccountsLink; // We have a weak dependency on this package, and if we import it without it being added, it will crash\n\nif (Package['accounts-base']) {\n  var Accounts;\n  module.link(\"meteor/accounts-base\", {\n    Accounts: function (v) {\n      Accounts = v;\n    }\n  }, 2);\n  module.runSetters(meteorAccountsLink = new ApolloLink(function (operation, forward) {\n    var token = Accounts._storedLoginToken();\n\n    operation.setContext(function () {\n      return {\n        headers: {\n          'meteor-login-token': token\n        }\n      };\n    });\n    return forward(operation);\n  }));\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"constants.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/cultofcoders_apollo/constants.js                                                             //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nmodule.export({\n  AUTH_TOKEN_KEY: function () {\n    return AUTH_TOKEN_KEY;\n  },\n  AUTH_TOKEN_LOCALSTORAGE: function () {\n    return AUTH_TOKEN_LOCALSTORAGE;\n  },\n  GRAPHQL_SUBSCRIPTION_PATH: function () {\n    return GRAPHQL_SUBSCRIPTION_PATH;\n  },\n  GRAPHQL_SUBSCRIPTION_ENDPOINT: function () {\n    return GRAPHQL_SUBSCRIPTION_ENDPOINT;\n  },\n  GRAPHQL_ENDPOINT: function () {\n    return GRAPHQL_ENDPOINT;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar AUTH_TOKEN_KEY = 'meteor-login-token';\nvar AUTH_TOKEN_LOCALSTORAGE = 'Meteor.loginToken';\nvar GRAPHQL_SUBSCRIPTION_PATH = 'graphql';\nvar GRAPHQL_SUBSCRIPTION_ENDPOINT = Meteor.absoluteUrl(GRAPHQL_SUBSCRIPTION_PATH).replace(/http/, 'ws');\nvar GRAPHQL_ENDPOINT = Meteor.absoluteUrl('graphql');\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/cultofcoders:apollo/client/index.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:apollo\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_apollo.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:apollo/client/index.js","packages/cultofcoders:apollo/client/config.js","packages/cultofcoders:apollo/client/meteorAccountsLink.js","packages/cultofcoders:apollo/constants.js"],"names":["module","export","initialize","Config","meteorAccountsLink","ApolloClient","link","v","WebSocketLink","HttpLink","ApolloLink","InMemoryCache","getMainDefinition","createUploadLink","checkNpmVersions","GRAPHQL_SUBSCRIPTION_ENDPOINT","GRAPHQL_ENDPOINT","AUTH_TOKEN_KEY","config","Object","assign","freeze","uploadLink","terminatingLink","httpLink","uri","httpLinkOptions","concat","getLink","disableWebsockets","wsLink","options","reconnect","connectionParams","localStorage","getItem","split","query","kind","operation","client","cache","dataIdFromObject","object","_id","restore","window","__APOLLO_STATE__","exportDefault","Package","Accounts","forward","token","_storedLoginToken","setContext","headers","AUTH_TOKEN_LOCALSTORAGE","GRAPHQL_SUBSCRIPTION_PATH","Meteor","absoluteUrl","replace"],"mappings":"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","file":"/packages/cultofcoders_apollo.js","sourcesContent":["import ApolloClient from 'apollo-client';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { HttpLink } from 'apollo-link-http';\nimport ApolloLink from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { meteorAccountsLink } from './meteorAccountsLink';\nimport { createUploadLink } from 'apollo-upload-client';\nimport Config from './config';\nimport { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  'subscriptions-transport-ws': '0.9.x',\n  'apollo-upload-client': 'x.x.x',\n  'apollo-client': '2.x.x',\n  'apollo-cache-inmemory': '1.x.x',\n  'apollo-link': '1.x.x',\n  'apollo-link-http': '1.x.x',\n  'apollo-link-ws': '1.x.x',\n  // 'apollo-live-client': '0.2.x',\n  // 'apollo-morpher': '0.2.x',\n});\n\nimport {\n  GRAPHQL_SUBSCRIPTION_ENDPOINT,\n  GRAPHQL_ENDPOINT,\n  AUTH_TOKEN_KEY,\n} from '../constants';\n\nexport function initialize(config = {}) {\n  Object.assign(Config, config);\n  Object.freeze(Config);\n\n  const uploadLink = createUploadLink();\n\n  let terminatingLink;\n\n  // We define the HTTP Link\n  const httpLink = new HttpLink({\n    uri: GRAPHQL_ENDPOINT,\n    ...(config.httpLinkOptions || {}),\n  });\n\n  if (meteorAccountsLink) {\n    terminatingLink = ApolloLink.concat(meteorAccountsLink, uploadLink, httpLink);\n  } else {\n    terminatingLink = ApolloLink.concat(uploadLink, httpLink);\n  }\n\n  // A chance to add change the links\n  terminatingLink = Config.getLink(terminatingLink);\n\n  if (!config.disableWebsockets) {\n    wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTION_ENDPOINT,\n      options: {\n        reconnect: true,\n        connectionParams: () => ({\n          [AUTH_TOKEN_KEY]: localStorage.getItem('Meteor.loginToken'),\n        }),\n      },\n    });\n\n    // If it's subscription it goes through wsLink otherwise through terminatingLink\n    terminatingLink = ApolloLink.split(\n      ({ query }) => {\n        const { kind, operation } = getMainDefinition(query);\n        return kind === 'OperationDefinition' && operation === 'subscription';\n      },\n      wsLink,\n      terminatingLink\n    );\n  }\n\n  const client = new ApolloClient({\n    link: terminatingLink,\n    cache: new InMemoryCache({\n      dataIdFromObject: object => object._id || null,\n    }).restore(window.__APOLLO_STATE__ || {}),\n  });\n\n  return {\n    client,\n  };\n}\n\nexport { Config, meteorAccountsLink };\n","export default {\n  disableWebsockets: false,\n  getLink: link => link,\n  httpLinkOptions: {},\n};\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\n\nlet meteorAccountsLink;\n\n// We have a weak dependency on this package, and if we import it without it being added, it will crash\nif (Package['accounts-base']) {\n  import { Accounts } from 'meteor/accounts-base';\n  \n  meteorAccountsLink = new ApolloLink((operation, forward) => {\n    const token = Accounts._storedLoginToken();\n  \n    operation.setContext(() => ({\n      headers: {\n        'meteor-login-token': token,\n      },\n    }));\n  \n    return forward(operation);\n  });\n}\n\nexport {\n  meteorAccountsLink\n}\n","import { Meteor } from 'meteor/meteor';\n\nexport const AUTH_TOKEN_KEY = 'meteor-login-token';\nexport const AUTH_TOKEN_LOCALSTORAGE = 'Meteor.loginToken';\n\nexport const GRAPHQL_SUBSCRIPTION_PATH = 'graphql';\nexport const GRAPHQL_SUBSCRIPTION_ENDPOINT = Meteor.absoluteUrl(\n  GRAPHQL_SUBSCRIPTION_PATH\n).replace(/http/, 'ws');\n\nexport const GRAPHQL_ENDPOINT = Meteor.absoluteUrl('graphql');\n"]}}]