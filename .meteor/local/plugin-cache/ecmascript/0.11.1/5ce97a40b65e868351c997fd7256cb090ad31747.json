{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar CountSubscription;\nmodule.watch(require(\"../query/counts/countSubscription\"), {\n  \"default\": function (v) {\n    CountSubscription = v;\n  }\n}, 0);\nvar createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  \"default\": function (v) {\n    createGraph = v;\n  }\n}, 1);\nvar recursiveFetch;\nmodule.watch(require(\"../query/lib/recursiveFetch.js\"), {\n  \"default\": function (v) {\n    recursiveFetch = v;\n  }\n}, 2);\nvar prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  \"default\": function (v) {\n    prepareForProcess = v;\n  }\n}, 3);\n\nvar _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _: function (v) {\n    _ = v;\n  }\n}, 4);\nvar callWithPromise;\nmodule.watch(require(\"../query/lib/callWithPromise\"), {\n  \"default\": function (v) {\n    callWithPromise = v;\n  }\n}, 5);\nvar Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  \"default\": function (v) {\n    Base = v;\n  }\n}, 6);\nmodule.exportDefault(\n/*#__PURE__*/\nfunction (_Base) {\n  (0, _inheritsLoose2.default)(_class, _Base);\n\n  function _class() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = _class.prototype;\n\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  _proto.subscribe = function () {\n    function subscribe(callback) {\n      if (this.isResolver) {\n        throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n      }\n\n      this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n      return this.subscriptionHandle;\n    }\n\n    return subscribe;\n  }();\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  _proto.subscribeCount = function () {\n    function subscribeCount(callback) {\n      if (this.isResolver) {\n        throw new Meteor.Error('not-allowed', \"You cannot subscribe to a resolver query\");\n      }\n\n      if (!this._counter) {\n        this._counter = new CountSubscription(this);\n      }\n\n      return this._counter.subscribe(this.params, callback);\n    }\n\n    return subscribeCount;\n  }();\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  _proto.unsubscribe = function () {\n    function unsubscribe() {\n      if (this.subscriptionHandle) {\n        this.subscriptionHandle.stop();\n      }\n\n      this.subscriptionHandle = null;\n    }\n\n    return unsubscribe;\n  }();\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  _proto.unsubscribeCount = function () {\n    function unsubscribeCount() {\n      if (this._counter) {\n        this._counter.unsubscribe();\n\n        this._counter = null;\n      }\n    }\n\n    return unsubscribeCount;\n  }();\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  _proto.fetchSync = function () {\n    function fetchSync() {\n      return _regenerator.default.async(function () {\n        function fetchSync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.subscriptionHandle) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n\n              case 2:\n                _context.next = 4;\n                return _regenerator.default.awrap(callWithPromise(this.name, this.params));\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return fetchSync$;\n      }(), null, this);\n    }\n\n    return fetchSync;\n  }();\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  _proto.fetchOneSync = function () {\n    function fetchOneSync() {\n      return _regenerator.default.async(function () {\n        function fetchOneSync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = _;\n                _context2.next = 3;\n                return _regenerator.default.awrap(this.fetchSync());\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.first.call(_context2.t0, _context2.t1));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }\n\n        return fetchOneSync$;\n      }(), null, this);\n    }\n\n    return fetchOneSync;\n  }();\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  _proto.fetch = function () {\n    function fetch(callbackOrOptions) {\n      if (!this.subscriptionHandle) {\n        return this._fetchStatic(callbackOrOptions);\n      } else {\n        return this._fetchReactive(callbackOrOptions);\n      }\n    }\n\n    return fetch;\n  }();\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  _proto.fetchOne = function () {\n    function fetchOne() {\n      if (!this.subscriptionHandle) {\n        var callback = arguments.length <= 0 ? undefined : arguments[0];\n\n        if (!_.isFunction(callback)) {\n          throw new Meteor.Error('You did not provide a valid callback');\n        }\n\n        this.fetch(function (err, res) {\n          callback(err, res ? _.first(res) : null);\n        });\n      } else {\n        return _.first(this.fetch.apply(this, arguments));\n      }\n    }\n\n    return fetchOne;\n  }();\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  _proto.getCountSync = function () {\n    function getCountSync() {\n      return _regenerator.default.async(function () {\n        function getCountSync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._counter) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n\n              case 2:\n                _context3.next = 4;\n                return _regenerator.default.awrap(callWithPromise(this.name + '.count', this.params));\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return getCountSync$;\n      }(), null, this);\n    }\n\n    return getCountSync;\n  }();\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  _proto.getCount = function () {\n    function getCount(callback) {\n      if (this._counter) {\n        return this._counter.getCount();\n      } else {\n        if (!callback) {\n          throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n        } else {\n          return Meteor.call(this.name + '.count', this.params, callback);\n        }\n      }\n    }\n\n    return getCount;\n  }();\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _proto._fetchStatic = function () {\n    function _fetchStatic(callback) {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n      }\n\n      Meteor.call(this.name, this.params, callback);\n    }\n\n    return _fetchStatic;\n  }();\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _proto._fetchReactive = function () {\n    function _fetchReactive() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var body = this.body;\n\n      if (this.params.$body) {\n        body = intersectDeep(body, this.params.$body);\n      }\n\n      body = prepareForProcess(body, this.params);\n\n      if (!options.allowSkip && body.$options && body.$options.skip) {\n        delete body.$options.skip;\n      }\n\n      return recursiveFetch(createGraph(this.collection, body));\n    }\n\n    return _fetchReactive;\n  }();\n\n  return _class;\n}(Base));","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js"],"names":["CountSubscription","module","watch","require","v","createGraph","recursiveFetch","prepareForProcess","_","callWithPromise","Base","exportDefault","subscribe","callback","isResolver","Meteor","Error","subscriptionHandle","name","params","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","first","fetch","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","isFunction","err","res","getCountSync","getCount","call","options","body","$body","intersectDeep","allowSkip","$options","skip","collection"],"mappings":"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","sourcesContent":["import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n"]},"sourceType":"script","hash":"5ce97a40b65e868351c997fd7256cb090ad31747"}
