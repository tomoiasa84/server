{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"}},"code":"module.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    cleanReducerLeftovers(node);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), root.results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      root.results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"],"names":["module","export","default","cleanReducerLeftovers","dot","watch","require","v","root","_","each","collectionNodes","node","scheduledForDeletion","results","forEach","result","linkName","fieldNodes","cleanNestedFields","name","split","reducerNodes","parts","snapCacheField","snapCaches","fieldName","length","isObject","shift","map","keys"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIC;AAAb,CAAd;AAAmD,IAAIC,GAAJ;AAAQJ,OAAOK,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACJ,UAAQK,CAAR,EAAU;AAACH,UAAIG,CAAJ;AAAM;;AAAlB,CAAnC,EAAuD,CAAvD;;AAK5C,SAASJ,qBAAT,CAA+BK,IAA/B,EAAqC;AAChDC,IAAEC,IAAF,CAAOF,KAAKG,eAAZ,EAA6BC,QAAQ;AACjC,QAAIA,KAAKC,oBAAT,EAA+B;AAC3BL,WAAKM,OAAL,CAAaC,OAAb,CAAqBC,UAAU;AAC3B,eAAOA,OAAOJ,KAAKK,QAAZ,CAAP;AACH,OAFD;AAGH;AACJ,GAND;;AAQAR,IAAEC,IAAF,CAAOF,KAAKG,eAAZ,EAA6BC,QAAQ;AACjCT,0BAAsBS,IAAtB;AACH,GAFD;;AAIAH,IAAEC,IAAF,CAAOF,KAAKU,UAAZ,EAAwBN,QAAQ;AAC5B,QAAIA,KAAKC,oBAAT,EAA+B;AAC3BM,wBAAkBP,KAAKQ,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAlB,EAAwCb,KAAKM,OAA7C,EAAsDN,IAAtD;AACH;AACJ,GAJD;;AAMAC,IAAEC,IAAF,CAAOF,KAAKc,YAAZ,EAA0BV,QAAQ;AAC9B,QAAIA,KAAKC,oBAAT,EAA+B;AAC3BL,WAAKM,OAAL,CAAaC,OAAb,CAAqBC,UAAU;AAC3B,eAAOA,OAAOJ,KAAKQ,IAAZ,CAAP;AACH,OAFD;AAGH;AACJ,GAND;AAOH;;AAED;AACA;AACA;;AAEA;;;;;AAKA,SAASD,iBAAT,CAA2BI,KAA3B,EAAkCT,OAAlC,EAA2CN,IAA3C,EAAiD;AAC7C,QAAMgB,iBAAiBhB,KAAKiB,UAAL,CAAgBF,MAAM,CAAN,CAAhB,CAAvB;AACA,QAAMG,YAAYF,iBAAiBA,cAAjB,GAAkCD,MAAM,CAAN,CAApD;;AAEA,MAAIA,MAAMI,MAAN,KAAiB,CAArB,EAAwB;AAEpBb,YAAQC,OAAR,CAAgBC,UAAU;AACtB,UAAIP,EAAEmB,QAAF,CAAWZ,MAAX,KAAsBU,cAAc,KAAxC,EAA+C;AAC3C,eAAOV,OAAOU,SAAP,CAAP;AACH;AACJ,KAJD;AAMA;AACH;;AAEDH,QAAMM,KAAN;AACAV,oBAAkBI,KAAlB,EAAyBT,QAAQgB,GAAR,CAAYd,UAAUA,OAAOU,SAAP,CAAtB,CAAzB,EAAmElB,IAAnE;AAEAM,UAAQC,OAAR,CAAgBC,UAAU;AACtB,QAAIP,EAAEmB,QAAF,CAAWZ,OAAOU,SAAP,CAAX,KAAiCjB,EAAEsB,IAAF,CAAOf,OAAOU,SAAP,CAAP,EAA0BC,MAA1B,KAAqC,CAA1E,EAA6E;AACzE,UAAID,cAAc,KAAlB,EAAyB;AACrB,eAAOV,OAAOU,SAAP,CAAP;AACH;AACJ;AACJ,GAND;AAOH","sourcesContent":["import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]), root);\n\n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n"]},"sourceType":"script","hash":"3ac17d03ef43a0450d310f72d64e1bcd219c1d86"}
