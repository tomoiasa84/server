{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/imports/api/modules/recommandations/API.resolvers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/modules/recommandations/API.resolvers.js","filename":"/Users/simiontomoiaga/git/server/imports/api/modules/recommandations/API.resolvers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/imports/api/modules/recommandations/API.resolvers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/modules/recommandations/API.resolvers.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nlet asyncIterator;\nmodule.watch(require(\"apollo-live-server\"), {\n  asyncIterator(v) {\n    asyncIterator = v;\n  }\n\n}, 0);\nmodule.exportDefault({\n  Query: {\n    recommandations(_, _ref, _ref2, ast) {\n      let {\n        filters,\n        options\n      } = _ref;\n      let {\n        db\n      } = _ref2;\n      $filters = filters;\n      $options = options;\n      const recommand = db.recommandations.astToQuery(ast, {\n        $filters,\n        $options\n      }).fetch();\n      return recommand;\n    }\n\n  },\n  Mutation: {\n    recommandationCreate(_, _ref3, _ref4) {\n      let {\n        data\n      } = _ref3;\n      let {\n        db\n      } = _ref4;\n      data.createdAt = new Date();\n      const commentIds = db.comments.insert({});\n      const recommandationId = db.recommandations.insert((0, _objectSpread2.default)({\n        commentIds\n      }, data));\n      return db.recommandations.findOne(recommandationId);\n    },\n\n    recommandationEdit(_, _ref5, _ref6) {\n      let {\n        recommandationId,\n        data\n      } = _ref5;\n      let {\n        db\n      } = _ref6;\n      db.recommandations.update(recommandationId, {\n        $set: (0, _objectSpread2.default)({}, data)\n      });\n      return db.recommandations.findOne(recommandationId);\n    },\n\n    recommandationDelete(_, _ref7, _ref8) {\n      let {\n        recommandationId\n      } = _ref7;\n      let {\n        db\n      } = _ref8;\n      return db.recommandations.remove(recommandationId);\n    }\n\n  },\n  Subscription: {\n    recommandations: {\n      resolve: payload => {\n        return payload;\n      },\n\n      subscribe(_, args, _ref9, ast) {\n        let {\n          db\n        } = _ref9;\n        const observer = db.recommandations.find();\n        return asyncIterator(observer);\n      }\n\n    }\n  }\n});","map":{"version":3,"sources":["imports/api/modules/recommandations/API.resolvers.js"],"names":["asyncIterator","module","watch","require","v","exportDefault","Query","recommandations","_","ast","filters","options","db","$filters","$options","recommand","astToQuery","fetch","Mutation","recommandationCreate","data","createdAt","Date","commentIds","comments","insert","recommandationId","findOne","recommandationEdit","update","$set","recommandationDelete","remove","Subscription","resolve","payload","subscribe","args","observer","find"],"mappings":";;;;AAAA,IAAIA,aAAJ;AAAkBC,OAAOC,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACH,gBAAcI,CAAd,EAAgB;AAACJ,oBAAcI,CAAd;AAAgB;;AAAlC,CAA3C,EAA+E,CAA/E;AAAlBH,OAAOI,aAAP,CAEe;AACbC,SAAO;AACLC,oBAAgBC,CAAhB,eAAiDC,GAAjD,EAAsD;AAAA,UAAnC;AAAEC,eAAF;AAAWC;AAAX,OAAmC;AAAA,UAAb;AAAEC;AAAF,OAAa;AACpDC,iBAAWH,OAAX;AACAI,iBAAWH,OAAX;AACA,YAAMI,YAAYH,GAAGL,eAAH,CACfS,UADe,CACJP,GADI,EACC;AACfI,gBADe;AAEfC;AAFe,OADD,EAKfG,KALe,EAAlB;AAMA,aAAOF,SAAP;AACD;;AAXI,GADM;AAcbG,YAAU;AACRC,yBAAqBX,CAArB,gBAA0C;AAAA,UAAlB;AAAEY;AAAF,OAAkB;AAAA,UAAR;AAAER;AAAF,OAAQ;AACxCQ,WAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;AACA,YAAMC,aAAaX,GAAGY,QAAH,CAAYC,MAAZ,CAAmB,EAAnB,CAAnB;AACA,YAAMC,mBAAmBd,GAAGL,eAAH,CAAmBkB,MAAnB;AACvBF;AADuB,SAEpBH,IAFoB,EAAzB;AAIA,aAAOR,GAAGL,eAAH,CAAmBoB,OAAnB,CAA2BD,gBAA3B,CAAP;AACD,KATO;;AAURE,uBAAmBpB,CAAnB,gBAAyD;AAAA,UAAnC;AAACkB,wBAAD;AAAmBN;AAAnB,OAAmC;AAAA,UAAR;AAAER;AAAF,OAAQ;AACvDA,SAAGL,eAAH,CAAmBsB,MAAnB,CAA0BH,gBAA1B,EAA4C;AAC1CI,8CAAUV,IAAV;AAD0C,OAA5C;AAGA,aAAOR,GAAGL,eAAH,CAAmBoB,OAAnB,CAA2BD,gBAA3B,CAAP;AACD,KAfO;;AAgBRK,yBAAqBvB,CAArB,gBAAsD;AAAA,UAA9B;AAAEkB;AAAF,OAA8B;AAAA,UAAR;AAAEd;AAAF,OAAQ;AACpD,aAAOA,GAAGL,eAAH,CAAmByB,MAAnB,CAA0BN,gBAA1B,CAAP;AACD;;AAlBO,GAdG;AAkCbO,gBAAc;AACZ1B,qBAAiB;AACf2B,eAASC,WAAW;AAClB,eAAOA,OAAP;AACD,OAHc;;AAIfC,gBAAU5B,CAAV,EAAa6B,IAAb,SAA2B5B,GAA3B,EAAgC;AAAA,YAAb;AAAEG;AAAF,SAAa;AAC9B,cAAM0B,WAAW1B,GAAGL,eAAH,CAAmBgC,IAAnB,EAAjB;AACA,eAAOvC,cAAcsC,QAAd,CAAP;AACD;;AAPc;AADL;AAlCD,CAFf","sourcesContent":["import { asyncIterator } from \"apollo-live-server\";\n\nexport default {\n  Query: {\n    recommandations(_, { filters, options }, { db }, ast) {\n      $filters = filters\n      $options = options\n      const recommand = db.recommandations\n        .astToQuery(ast, {\n          $filters,\n          $options\n        })\n        .fetch();\n      return recommand;\n    }\n  },\n  Mutation: {\n    recommandationCreate(_, { data }, { db }) {\n      data.createdAt = new Date();\n      const commentIds = db.comments.insert({});\n      const recommandationId = db.recommandations.insert({\n        commentIds,\n        ...data\n      });\n      return db.recommandations.findOne(recommandationId);\n    },\n    recommandationEdit(_, {recommandationId, data }, { db }) {\n      db.recommandations.update(recommandationId, {\n        $set: {...data}\n      });\n      return db.recommandations.findOne(recommandationId)\n    },\n    recommandationDelete(_, { recommandationId }, { db }) {\n      return db.recommandations.remove(recommandationId);\n    }\n  },\n  Subscription: {\n    recommandations: {\n      resolve: payload => {\n        return payload;\n      },\n      subscribe(_, args, { db }, ast) {\n        const observer = db.recommandations.find();\n        return asyncIterator(observer);\n      }\n    }\n  }\n};\n"]},"sourceType":"script","hash":"932fc13fc10226dbf9b46bf3f10bddc226063b27"}
