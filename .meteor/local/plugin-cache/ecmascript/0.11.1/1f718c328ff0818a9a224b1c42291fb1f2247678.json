{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\n\nclass NamedQueryBase {\n  constructor(name, collection, body) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    this.isNamedQuery = true;\n    this.queryName = name;\n\n    if (_.isFunction(body)) {\n      this.resolver = body;\n    } else {\n      this.body = deepClone(body);\n    }\n\n    this.subscriptionHandle = null;\n    this.params = options.params || {};\n    this.options = options;\n    this.collection = collection;\n    this.isExposed = false;\n  }\n\n  get name() {\n    return \"named_query_\".concat(this.queryName);\n  }\n\n  get isResolver() {\n    return !!this.resolver;\n  }\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams(params) {\n    params = params || this.params;\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    try {\n      this._validate(validateParams, params);\n    } catch (validationError) {\n      console.error(\"Invalid parameters supplied to the query \\\"\".concat(this.queryName, \"\\\"\\n\"), validationError);\n      throw validationError; // rethrow\n    }\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _objectSpread2.default)({}, this.options, {\n      params\n    }));\n    clone.cacher = this.cacher;\n\n    if (this.exposeConfig) {\n      clone.exposeConfig = this.exposeConfig;\n    }\n\n    return clone;\n  }\n  /**\n   * @param {function|object} validator\n   * @param {object} params\n   * @private\n   */\n\n\n  _validate(validator, params) {\n    if (_.isFunction(validator)) {\n      validator.call(null, params);\n    } else {\n      check(params, validator);\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js"],"names":["module","export","default","NamedQueryBase","deepClone","watch","require","v","constructor","name","collection","body","options","isNamedQuery","queryName","_","isFunction","resolver","subscriptionHandle","params","isExposed","isResolver","setParams","extend","doValidateParams","validateParams","_validate","validationError","console","error","clone","newParams","cacher","exposeConfig","validator","call","check"],"mappings":";;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIC;AAAb,CAAd;AAA4C,IAAIC,SAAJ;AAAcJ,OAAOK,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,UAAQK,CAAR,EAAU;AAACH,gBAAUG,CAAV;AAAY;;AAAxB,CAAzC,EAAmE,CAAnE;;AAE3C,MAAMJ,cAAN,CAAqB;AAGhCK,cAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,IAA9B,EAAkD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA,SAFlDC,YAEkD,GAFnC,IAEmC;AAC9C,SAAKC,SAAL,GAAiBL,IAAjB;;AAEA,QAAIM,EAAEC,UAAF,CAAaL,IAAb,CAAJ,EAAwB;AACpB,WAAKM,QAAL,GAAgBN,IAAhB;AACH,KAFD,MAEO;AACH,WAAKA,IAAL,GAAYP,UAAUO,IAAV,CAAZ;AACH;;AAED,SAAKO,kBAAL,GAA0B,IAA1B;AACA,SAAKC,MAAL,GAAcP,QAAQO,MAAR,IAAkB,EAAhC;AACA,SAAKP,OAAL,GAAeA,OAAf;AACA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKU,SAAL,GAAiB,KAAjB;AACH;;AAED,MAAIX,IAAJ,GAAW;AACP,iCAAsB,KAAKK,SAA3B;AACH;;AAED,MAAIO,UAAJ,GAAiB;AACb,WAAO,CAAC,CAAC,KAAKJ,QAAd;AACH;;AAEDK,YAAUH,MAAV,EAAkB;AACd,SAAKA,MAAL,GAAcJ,EAAEQ,MAAF,CAAS,EAAT,EAAa,KAAKJ,MAAlB,EAA0BA,MAA1B,CAAd;AAEA,WAAO,IAAP;AACH;AAED;;;;;AAGAK,mBAAiBL,MAAjB,EAAyB;AACrBA,aAASA,UAAU,KAAKA,MAAxB;AAEA,UAAM;AAACM;AAAD,QAAmB,KAAKb,OAA9B;AACA,QAAI,CAACa,cAAL,EAAqB;;AAErB,QAAI;AACA,WAAKC,SAAL,CAAeD,cAAf,EAA+BN,MAA/B;AACH,KAFD,CAEE,OAAOQ,eAAP,EAAwB;AACtBC,cAAQC,KAAR,sDAA2D,KAAKf,SAAhE,WAAgFa,eAAhF;AACA,YAAMA,eAAN,CAFsB,CAEC;AAC1B;AACJ;;AAEDG,QAAMC,SAAN,EAAiB;AACb,UAAMZ,SAASJ,EAAEQ,MAAF,CAAS,EAAT,EAAanB,UAAU,KAAKe,MAAf,CAAb,EAAqCY,SAArC,CAAf;;AAEA,QAAID,QAAQ,IAAI,KAAKtB,WAAT,CACR,KAAKM,SADG,EAER,KAAKJ,UAFG,EAGR,KAAKW,UAAL,GAAkB,KAAKJ,QAAvB,GAAkCb,UAAU,KAAKO,IAAf,CAH1B,kCAKD,KAAKC,OALJ;AAMJO;AANI,OAAZ;AAUAW,UAAME,MAAN,GAAe,KAAKA,MAApB;;AACA,QAAI,KAAKC,YAAT,EAAuB;AACnBH,YAAMG,YAAN,GAAqB,KAAKA,YAA1B;AACH;;AAED,WAAOH,KAAP;AACH;AAED;;;;;;;AAKAJ,YAAUQ,SAAV,EAAqBf,MAArB,EAA6B;AACzB,QAAIJ,EAAEC,UAAF,CAAakB,SAAb,CAAJ,EAA6B;AACzBA,gBAAUC,IAAV,CAAe,IAAf,EAAqBhB,MAArB;AACH,KAFD,MAEO;AACHiB,YAAMjB,MAAN,EAAce,SAAd;AACH;AACJ;;AAlF+B","sourcesContent":["import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}"]},"sourceType":"script","hash":"1f718c328ff0818a9a224b1c42291fb1f2247678"}
