{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js"}},"code":"module.export({\n  categoryIds: () => categoryIds,\n  groupIds: () => groupIds,\n  authorIds: () => authorIds,\n  postIds: () => postIds,\n  default: () => createFixtures\n});\nlet Authors, Groups, Posts, Categories, AuthorProfiles;\nmodule.watch(require(\"./collections\"), {\n  Authors(v) {\n    Authors = v;\n  },\n\n  Groups(v) {\n    Groups = v;\n  },\n\n  Posts(v) {\n    Posts = v;\n  },\n\n  Categories(v) {\n    Categories = v;\n  },\n\n  AuthorProfiles(v) {\n    AuthorProfiles = v;\n  }\n\n}, 0);\nconst GROUPS = 3;\nconst CATEGORIES = 3;\nconst AUTHOR_PER_GROUPS = 3;\nconst POSTS_PER_AUTHOR = 3;\nlet categoryIds = [];\nlet groupIds = [];\nlet authorIds = [];\nlet postIds = [];\n\nfunction createFixtures() {\n  for (let i = 0; i < CATEGORIES; i++) {\n    const categoryId = Categories.insert({\n      name: `Category ${i}`\n    });\n    categoryIds.push(categoryId);\n  }\n\n  for (let i = 0; i < GROUPS; i++) {\n    const groupId = Groups.insert({\n      name: `Group ${i}`\n    });\n    groupIds.push(groupId);\n  }\n\n  groupIds.forEach(groupId => {\n    for (let i = 0; i < AUTHOR_PER_GROUPS; i++) {\n      const authorId = Authors.insert({\n        name: `Author ${authorIds.length}`,\n        createdAt: new Date()\n      });\n      const authorProfileId = AuthorProfiles.insert({\n        name: `Author ${authorIds.length}`,\n        createdAt: new Date()\n      });\n      Authors.getLink(authorId, 'profile').set(authorProfileId);\n      authorIds.push(authorId); // link it to the group\n\n      const groupLink = Authors.getLink(authorId, 'groups');\n      groupLink.add(groupId);\n\n      for (let j = 0; j < POSTS_PER_AUTHOR; j++) {\n        createPost(authorId);\n      }\n    }\n  });\n}\n\nfunction createPost(authorId) {\n  const postId = Posts.insert({\n    title: `Post ${postIds.length}`,\n    createdAt: new Date()\n  });\n  postIds.push(postId);\n  const authorLink = Posts.getLink(postId, 'author');\n  authorLink.set(authorId);\n  const randomCategoryId = categoryIds[Math.floor(Math.random() * categoryIds.length)];\n  const categoriesLink = Posts.getLink(postId, 'categories');\n  categoriesLink.add(randomCategoryId, {\n    createdAt: new Date()\n  });\n  return postId;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js"],"names":["module","export","categoryIds","groupIds","authorIds","postIds","default","createFixtures","Authors","Groups","Posts","Categories","AuthorProfiles","watch","require","v","GROUPS","CATEGORIES","AUTHOR_PER_GROUPS","POSTS_PER_AUTHOR","i","categoryId","insert","name","push","groupId","forEach","authorId","length","createdAt","Date","authorProfileId","getLink","set","groupLink","add","j","createPost","postId","title","authorLink","randomCategoryId","Math","floor","random","categoriesLink"],"mappings":"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","sourcesContent":["import {Authors, Groups, Posts, Categories, AuthorProfiles} from './collections';\n\nconst GROUPS = 3;\nconst CATEGORIES = 3;\nconst AUTHOR_PER_GROUPS = 3;\nconst POSTS_PER_AUTHOR = 3;\n\nexport let categoryIds = [];\nexport let groupIds = [];\nexport let authorIds = [];\nexport let postIds = [];\n\nexport default function createFixtures() {\n    for (let i = 0; i < CATEGORIES; i++) {\n        const categoryId = Categories.insert({\n            name: `Category ${i}`\n        });\n\n        categoryIds.push(categoryId);\n    }\n\n\n    for (let i = 0; i < GROUPS; i++) {\n        const groupId = Groups.insert({\n            name: `Group ${i}`\n        });\n\n        groupIds.push(groupId);\n    }\n\n    groupIds.forEach(groupId => {\n        for (let i = 0; i < AUTHOR_PER_GROUPS; i++) {\n            const authorId = Authors.insert({\n                name: `Author ${authorIds.length}`,\n                createdAt: new Date(),\n            });\n\n            const authorProfileId = AuthorProfiles.insert({\n                name: `Author ${authorIds.length}`,\n                createdAt: new Date(),\n            });\n\n            Authors.getLink(authorId, 'profile').set(authorProfileId);\n\n            authorIds.push(authorId);\n\n            // link it to the group\n            const groupLink = Authors.getLink(authorId, 'groups');\n            groupLink.add(groupId);\n\n            for (let j = 0; j < POSTS_PER_AUTHOR; j++) {\n                createPost(authorId);\n            }\n        }\n    });\n}\n\nfunction createPost(authorId) {\n    const postId = Posts.insert({\n        title: `Post ${postIds.length}`,\n        createdAt: new Date(),\n    });\n\n    postIds.push(postId);\n\n    const authorLink = Posts.getLink(postId, 'author');\n    authorLink.set(authorId);\n\n    const randomCategoryId = categoryIds[Math.floor(Math.random()*categoryIds.length)];\n\n    const categoriesLink = Posts.getLink(postId, 'categories');\n    categoriesLink.add(randomCategoryId, {\n        createdAt: new Date(),\n    });\n\n    return postId;\n}\n"]},"sourceType":"script","hash":"7fdadb472195fa08253791b7305a4a75c9d37113"}
