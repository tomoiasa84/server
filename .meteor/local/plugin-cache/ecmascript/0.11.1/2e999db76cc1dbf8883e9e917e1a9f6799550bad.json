{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/exposure.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/exposure.js"}},"code":"module.export({\n  \"default\": function () {\n    return Exposure;\n  }\n});\nvar genCountEndpoint;\nmodule.watch(require(\"../query/counts/genEndpoint.server.js\"), {\n  \"default\": function (v) {\n    genCountEndpoint = v;\n  }\n}, 0);\nvar createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  \"default\": function (v) {\n    createGraph = v;\n  }\n}, 1);\nvar recursiveCompose;\nmodule.watch(require(\"../query/lib/recursiveCompose.js\"), {\n  \"default\": function (v) {\n    recursiveCompose = v;\n  }\n}, 2);\nvar hypernova;\nmodule.watch(require(\"../query/hypernova/hypernova.js\"), {\n  \"default\": function (v) {\n    hypernova = v;\n  }\n}, 3);\nvar ExposureSchema, ExposureDefaults, validateBody;\nmodule.watch(require(\"./exposure.config.schema.js\"), {\n  ExposureSchema: function (v) {\n    ExposureSchema = v;\n  },\n  ExposureDefaults: function (v) {\n    ExposureDefaults = v;\n  },\n  validateBody: function (v) {\n    validateBody = v;\n  }\n}, 4);\nvar enforceMaxDepth;\nmodule.watch(require(\"./lib/enforceMaxDepth.js\"), {\n  \"default\": function (v) {\n    enforceMaxDepth = v;\n  }\n}, 5);\nvar enforceMaxLimit;\nmodule.watch(require(\"./lib/enforceMaxLimit.js\"), {\n  \"default\": function (v) {\n    enforceMaxLimit = v;\n  }\n}, 6);\nvar cleanBody;\nmodule.watch(require(\"./lib/cleanBody.js\"), {\n  \"default\": function (v) {\n    cleanBody = v;\n  }\n}, 7);\nvar deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  \"default\": function (v) {\n    deepClone = v;\n  }\n}, 8);\nvar restrictFieldsFn;\nmodule.watch(require(\"./lib/restrictFields.js\"), {\n  \"default\": function (v) {\n    restrictFieldsFn = v;\n  }\n}, 9);\nvar restrictLinks;\nmodule.watch(require(\"./lib/restrictLinks.js\"), {\n  \"default\": function (v) {\n    restrictLinks = v;\n  }\n}, 10);\nvar check;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 11);\nvar globalConfig = {};\n\nvar Exposure =\n/*#__PURE__*/\nfunction () {\n  Exposure.setConfig = function () {\n    function setConfig(config) {\n      Object.assign(globalConfig, config);\n    }\n\n    return setConfig;\n  }();\n\n  Exposure.getConfig = function () {\n    function getConfig() {\n      return globalConfig;\n    }\n\n    return getConfig;\n  }();\n\n  Exposure.restrictFields = function () {\n    function restrictFields() {\n      return restrictFieldsFn.apply(void 0, arguments);\n    }\n\n    return restrictFields;\n  }();\n\n  function Exposure(collection) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    collection.__isExposedForGrapher = true;\n    collection.__exposure = this;\n    this.collection = collection;\n    this.name = \"exposure_\" + collection._name;\n    this.config = config;\n\n    this._validateAndClean();\n\n    this.initSecurity();\n\n    if (this.config.publication) {\n      this.initPublication();\n    }\n\n    if (this.config.method) {\n      this.initMethod();\n    }\n\n    if (!this.config.method && !this.config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this.initCountMethod();\n    this.initCountPublication();\n  }\n\n  var _proto = Exposure.prototype;\n\n  _proto._validateAndClean = function () {\n    function _validateAndClean() {\n      if (typeof this.config === 'function') {\n        var firewall = this.config;\n        this.config = {\n          firewall: firewall\n        };\n      }\n\n      this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n      check(this.config, ExposureSchema);\n\n      if (this.config.body) {\n        validateBody(this.collection, this.config.body);\n      }\n    }\n\n    return _validateAndClean;\n  }();\n  /**\n   * Takes the body and intersects it with the exposure body, if it exists.\n   *\n   * @param body\n   * @param userId\n   * @returns {*}\n   */\n\n\n  _proto.getTransformedBody = function () {\n    function getTransformedBody(body, userId) {\n      if (!this.config.body) {\n        return body;\n      }\n\n      var processedBody = this.getBody(userId);\n\n      if (processedBody === true) {\n        return;\n      }\n\n      return cleanBody(processedBody, body);\n    }\n\n    return getTransformedBody;\n  }();\n  /**\n   * Gets the exposure body\n   */\n\n\n  _proto.getBody = function () {\n    function getBody(userId) {\n      if (!this.config.body) {\n        throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n      }\n\n      var body;\n\n      if (_.isFunction(this.config.body)) {\n        body = this.config.body.call(this, userId);\n      } else {\n        body = this.config.body;\n      } // it means we allow everything, no need for cloning.\n\n\n      if (body === true) {\n        return true;\n      }\n\n      return deepClone(body, userId);\n    }\n\n    return getBody;\n  }();\n  /**\n   * Initializing the publication for reactive query fetching\n   */\n\n\n  _proto.initPublication = function () {\n    function initPublication() {\n      var collection = this.collection;\n      var config = this.config;\n      var getTransformedBody = this.getTransformedBody.bind(this);\n      Meteor.publishComposite(this.name, function (body) {\n        var transformedBody = getTransformedBody(body);\n        var rootNode = createGraph(collection, transformedBody);\n        enforceMaxDepth(rootNode, config.maxDepth);\n        restrictLinks(rootNode, this.userId);\n        return recursiveCompose(rootNode, this.userId, {\n          bypassFirewalls: !!config.body\n        });\n      });\n    }\n\n    return initPublication;\n  }();\n  /**\n   * Initializez the method to retrieve the data via Meteor.call\n   */\n\n\n  _proto.initMethod = function () {\n    function initMethod() {\n      var _Meteor$methods;\n\n      var collection = this.collection;\n      var config = this.config;\n      var getTransformedBody = this.getTransformedBody.bind(this);\n\n      var methodBody = function (body) {\n        if (!config.blocking) {\n          this.unblock();\n        }\n\n        var transformedBody = getTransformedBody(body);\n        var rootNode = createGraph(collection, transformedBody);\n        enforceMaxDepth(rootNode, config.maxDepth);\n        restrictLinks(rootNode, this.userId); // if there is no exposure body defined, then we need to apply firewalls\n\n        return hypernova(rootNode, this.userId, {\n          bypassFirewalls: !!config.body\n        });\n      };\n\n      Meteor.methods((_Meteor$methods = {}, _Meteor$methods[this.name] = methodBody, _Meteor$methods));\n    }\n\n    return initMethod;\n  }();\n  /**\n   * Initializes the method to retrieve the count of the data via Meteor.call\n   * @returns {*}\n   */\n\n\n  _proto.initCountMethod = function () {\n    function initCountMethod() {\n      var _Meteor$methods2;\n\n      var collection = this.collection;\n      Meteor.methods((_Meteor$methods2 = {}, _Meteor$methods2[this.name + '.count'] = function (body) {\n        this.unblock();\n        return collection.find(body.$filters || {}, {}, this.userId).count();\n      }, _Meteor$methods2));\n    }\n\n    return initCountMethod;\n  }();\n  /**\n   * Initializes the reactive endpoint to retrieve the count of the data.\n   */\n\n\n  _proto.initCountPublication = function () {\n    function initCountPublication() {\n      var collection = this.collection;\n      genCountEndpoint(this.name, {\n        getCursor: function (_ref) {\n          var session = _ref.session;\n          return collection.find(session.filters, {\n            fields: {\n              _id: 1\n            }\n          }, this.userId);\n        },\n        getSession: function (body) {\n          return {\n            filters: body.$filters || {}\n          };\n        }\n      });\n    }\n\n    return initCountPublication;\n  }();\n  /**\n   * Initializes security enforcement\n   * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n   */\n\n\n  _proto.initSecurity = function () {\n    function initSecurity() {\n      var _this = this;\n\n      var collection = this.collection;\n      var _this$config = this.config,\n          firewall = _this$config.firewall,\n          maxLimit = _this$config.maxLimit,\n          restrictedFields = _this$config.restrictedFields;\n      var find = collection.find.bind(collection);\n      var findOne = collection.findOne.bind(collection);\n\n      collection.firewall = function (filters, options, userId) {\n        if (userId !== undefined) {\n          _this._callFirewall({\n            collection: collection\n          }, filters, options, userId);\n\n          enforceMaxLimit(options, maxLimit);\n\n          if (restrictedFields) {\n            Exposure.restrictFields(filters, options, restrictedFields);\n          }\n        }\n      };\n\n      collection.find = function (filters) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n        if (arguments.length == 0) {\n          filters = {};\n        } // If filters is undefined it should return an empty item\n\n\n        if (arguments.length > 0 && filters === undefined) {\n          return find(undefined, options);\n        }\n\n        collection.firewall(filters, options, userId);\n        return find(filters, options);\n      };\n\n      collection.findOne = function (filters) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n        // If filters is undefined it should return an empty item\n        if (arguments.length > 0 && filters === undefined) {\n          return null;\n        }\n\n        if (typeof filters === 'string') {\n          filters = {\n            _id: filters\n          };\n        }\n\n        collection.firewall(filters, options, userId);\n        return findOne(filters, options);\n      };\n    }\n\n    return initSecurity;\n  }();\n  /**\n   * @private\n   */\n\n\n  _proto._callFirewall = function () {\n    function _callFirewall() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var firewall = this.config.firewall;\n\n      if (!firewall) {\n        return;\n      }\n\n      if (_.isArray(firewall)) {\n        firewall.forEach(function (fire) {\n          fire.call.apply(fire, args);\n        });\n      } else {\n        firewall.call.apply(firewall, args);\n      }\n    }\n\n    return _callFirewall;\n  }();\n\n  return Exposure;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/exposure/exposure.js"],"names":["module","export","Exposure","genCountEndpoint","watch","require","v","createGraph","recursiveCompose","hypernova","ExposureSchema","ExposureDefaults","validateBody","enforceMaxDepth","enforceMaxLimit","cleanBody","deepClone","restrictFieldsFn","restrictLinks","check","globalConfig","setConfig","config","Object","assign","getConfig","restrictFields","collection","__isExposedForGrapher","__exposure","name","_name","_validateAndClean","initSecurity","publication","initPublication","method","initMethod","Meteor","Error","initCountMethod","initCountPublication","firewall","body","getTransformedBody","userId","processedBody","getBody","_","isFunction","call","bind","publishComposite","transformedBody","rootNode","maxDepth","bypassFirewalls","methodBody","blocking","unblock","methods","find","$filters","count","getCursor","session","filters","fields","_id","getSession","maxLimit","restrictedFields","findOne","options","undefined","_callFirewall","arguments","length","args","isArray","forEach","fire"],"mappings":"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","sourcesContent":["import genCountEndpoint from '../query/counts/genEndpoint.server.js';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveCompose from '../query/lib/recursiveCompose.js';\nimport hypernova from '../query/hypernova/hypernova.js';\nimport {\n    ExposureSchema,\n    ExposureDefaults,\n    validateBody,\n} from './exposure.config.schema.js';\nimport enforceMaxDepth from './lib/enforceMaxDepth.js';\nimport enforceMaxLimit from './lib/enforceMaxLimit.js';\nimport cleanBody from './lib/cleanBody.js';\nimport deepClone from 'lodash.clonedeep';\nimport restrictFieldsFn from './lib/restrictFields.js';\nimport restrictLinks from './lib/restrictLinks.js';\nimport { check } from 'meteor/check';\n\nlet globalConfig = {};\n\nexport default class Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n\n        this.config = config;\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof this.config === 'function') {\n            const firewall = this.config;\n            this.config = { firewall };\n        }\n\n        this.config = Object.assign(\n            {},\n            ExposureDefaults,\n            Exposure.getConfig(),\n            this.config\n        );\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    }\n\n    /**\n     * Takes the body and intersects it with the exposure body, if it exists.\n     *\n     * @param body\n     * @param userId\n     * @returns {*}\n     */\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    }\n\n    /**\n     * Gets the exposure body\n     */\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error(\n                'missing-body',\n                'Cannot get exposure body because it was not defined.'\n            );\n        }\n\n        let body;\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        }\n\n        // it means we allow everything, no need for cloning.\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(body, userId);\n    }\n\n    /**\n     * Initializing the publication for reactive query fetching\n     */\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        Meteor.publishComposite(this.name, function(body) {\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        });\n    }\n\n    /**\n     * Initializez the method to retrieve the data via Meteor.call\n     */\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function(body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            // if there is no exposure body defined, then we need to apply firewalls\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody,\n        });\n    }\n\n    /**\n     * Initializes the method to retrieve the count of the data via Meteor.call\n     * @returns {*}\n     */\n    initCountMethod() {\n        const collection = this.collection;\n\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n\n                return collection\n                    .find(body.$filters || {}, {}, this.userId)\n                    .count();\n            },\n        });\n    }\n\n    /**\n     * Initializes the reactive endpoint to retrieve the count of the data.\n     */\n    initCountPublication() {\n        const collection = this.collection;\n\n        genCountEndpoint(this.name, {\n            getCursor({ session }) {\n                return collection.find(\n                    session.filters,\n                    {\n                        fields: { _id: 1 },\n                    },\n                    this.userId\n                );\n            },\n\n            getSession(body) {\n                return { filters: body.$filters || {} };\n            },\n        });\n    }\n\n    /**\n     * Initializes security enforcement\n     * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n     */\n    initSecurity() {\n        const collection = this.collection;\n        const { firewall, maxLimit, restrictedFields } = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall(\n                    { collection: collection },\n                    filters,\n                    options,\n                    userId\n                );\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function(filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            }\n\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return find(filters, options);\n        };\n\n        collection.findOne = function(\n            filters,\n            options = {},\n            userId = undefined\n        ) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof filters === 'string') {\n                filters = { _id: filters };\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return findOne(filters, options);\n        };\n    }\n\n    /**\n     * @private\n     */\n    _callFirewall(...args) {\n        const { firewall } = this.config;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            });\n        } else {\n            firewall.call(...args);\n        }\n    }\n}\n"]},"sourceType":"script","hash":"2e999db76cc1dbf8883e9e917e1a9f6799550bad"}
