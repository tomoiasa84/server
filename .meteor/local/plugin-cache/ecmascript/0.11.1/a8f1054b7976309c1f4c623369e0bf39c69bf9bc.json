{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return Query;\n  }\n});\n\nvar _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\nvar CountSubscription;\nmodule.watch(require(\"./counts/countSubscription\"), {\n  \"default\": function (v) {\n    CountSubscription = v;\n  }\n}, 1);\nvar createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  \"default\": function (v) {\n    createGraph = v;\n  }\n}, 2);\nvar recursiveFetch;\nmodule.watch(require(\"./lib/recursiveFetch.js\"), {\n  \"default\": function (v) {\n    recursiveFetch = v;\n  }\n}, 3);\nvar prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  \"default\": function (v) {\n    prepareForProcess = v;\n  }\n}, 4);\nvar callWithPromise;\nmodule.watch(require(\"./lib/callWithPromise\"), {\n  \"default\": function (v) {\n    callWithPromise = v;\n  }\n}, 5);\nvar Base;\nmodule.watch(require(\"./query.base\"), {\n  \"default\": function (v) {\n    Base = v;\n  }\n}, 6);\n\nvar Query =\n/*#__PURE__*/\nfunction (_Base) {\n  (0, _inheritsLoose2.default)(Query, _Base);\n\n  function Query() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Query.prototype;\n\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  _proto.subscribe = function () {\n    function subscribe(callback) {\n      this.doValidateParams();\n      this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n      return this.subscriptionHandle;\n    }\n\n    return subscribe;\n  }();\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  _proto.subscribeCount = function () {\n    function subscribeCount(callback) {\n      this.doValidateParams();\n\n      if (!this._counter) {\n        this._counter = new CountSubscription(this);\n      }\n\n      return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n    }\n\n    return subscribeCount;\n  }();\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  _proto.unsubscribe = function () {\n    function unsubscribe() {\n      if (this.subscriptionHandle) {\n        this.subscriptionHandle.stop();\n      }\n\n      this.subscriptionHandle = null;\n    }\n\n    return unsubscribe;\n  }();\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  _proto.unsubscribeCount = function () {\n    function unsubscribeCount() {\n      if (this._counter) {\n        this._counter.unsubscribe();\n\n        this._counter = null;\n      }\n    }\n\n    return unsubscribeCount;\n  }();\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  _proto.fetchSync = function () {\n    function fetchSync() {\n      return _regenerator.default.async(function () {\n        function fetchSync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.doValidateParams();\n\n                if (!this.subscriptionHandle) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n\n              case 3:\n                _context.next = 5;\n                return _regenerator.default.awrap(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return fetchSync$;\n      }(), null, this);\n    }\n\n    return fetchSync;\n  }();\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  _proto.fetchOneSync = function () {\n    function fetchOneSync() {\n      return _regenerator.default.async(function () {\n        function fetchOneSync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = _;\n                _context2.next = 3;\n                return _regenerator.default.awrap(this.fetchSync());\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.first.call(_context2.t0, _context2.t1));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }\n\n        return fetchOneSync$;\n      }(), null, this);\n    }\n\n    return fetchOneSync;\n  }();\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  _proto.fetch = function () {\n    function fetch(callbackOrOptions) {\n      this.doValidateParams();\n\n      if (!this.subscriptionHandle) {\n        return this._fetchStatic(callbackOrOptions);\n      } else {\n        return this._fetchReactive(callbackOrOptions);\n      }\n    }\n\n    return fetch;\n  }();\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  _proto.fetchOne = function () {\n    function fetchOne() {\n      if (!this.subscriptionHandle) {\n        var callback = arguments.length <= 0 ? undefined : arguments[0];\n\n        if (!_.isFunction(callback)) {\n          throw new Meteor.Error('You did not provide a valid callback');\n        }\n\n        this.fetch(function (err, res) {\n          callback(err, res ? _.first(res) : null);\n        });\n      } else {\n        return _.first(this.fetch.apply(this, arguments));\n      }\n    }\n\n    return fetchOne;\n  }();\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  _proto.getCountSync = function () {\n    function getCountSync() {\n      return _regenerator.default.async(function () {\n        function getCountSync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._counter) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n\n              case 2:\n                _context3.next = 4;\n                return _regenerator.default.awrap(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return getCountSync$;\n      }(), null, this);\n    }\n\n    return getCountSync;\n  }();\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  _proto.getCount = function () {\n    function getCount(callback) {\n      if (this._counter) {\n        return this._counter.getCount();\n      } else {\n        if (!callback) {\n          throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n        } else {\n          return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n        }\n      }\n    }\n\n    return getCount;\n  }();\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _proto._fetchStatic = function () {\n    function _fetchStatic(callback) {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n      }\n\n      Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    return _fetchStatic;\n  }();\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _proto._fetchReactive = function () {\n    function _fetchReactive() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var body = prepareForProcess(this.body, this.params);\n\n      if (!options.allowSkip && body.$options && body.$options.skip) {\n        delete body.$options.skip;\n      }\n\n      return recursiveFetch(createGraph(this.collection, body), this.params);\n    }\n\n    return _fetchReactive;\n  }();\n\n  return Query;\n}(Base);","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.client.js"],"names":["module","export","Query","_","watch","require","v","CountSubscription","createGraph","recursiveFetch","prepareForProcess","callWithPromise","Base","subscribe","callback","doValidateParams","subscriptionHandle","Meteor","name","body","params","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","Error","fetchOneSync","first","fetch","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","isFunction","err","res","getCountSync","getCount","call","options","allowSkip","$options","skip","collection"],"mappings":"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","sourcesContent":["import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n"]},"sourceType":"script","hash":"a8f1054b7976309c1f4c623369e0bf39c69bf9bc"}
