{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/extension.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/extension.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/extension.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/extension.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/extension.js"}},"code":"let check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet addFieldMap;\nmodule.watch(require(\"./lib/addFieldMap\"), {\n  default(v) {\n    addFieldMap = v;\n  }\n\n}, 1);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * @param data\n   */\n  addReducers(data) {\n    if (!this[storage]) {\n      this[storage] = {};\n    }\n\n    _.each(data, (reducerConfig, reducerName) => {\n      if (!this[reducerConfig]) {\n        this[reducerConfig] = {};\n      }\n\n      if (this.getLinker(reducerName)) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`);\n      }\n\n      if (this[reducerConfig][reducerName]) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`);\n      }\n\n      check(reducerConfig, {\n        body: Object,\n        reduce: Function\n      });\n\n      _.extend(this[storage], {\n        [reducerName]: reducerConfig\n      });\n    });\n  },\n\n  /**\n   * @param name\n   * @returns {*}\n   */\n  getReducer(name) {\n    if (this[storage]) {\n      return this[storage][name];\n    }\n  },\n\n  /**\n   * This creates reducers that makes sort of aliases for the database fields we use\n   */\n  addFieldMap\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/extension.js"],"names":["check","module","watch","require","v","addFieldMap","default","storage","Object","assign","Mongo","Collection","prototype","addReducers","data","_","each","reducerConfig","reducerName","getLinker","Meteor","Error","_name","body","reduce","Function","extend","getReducer","name"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,WAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACG,UAAQF,CAAR,EAAU;AAACC,kBAAYD,CAAZ;AAAc;;AAA1B,CAA1C,EAAsE,CAAtE;AAGtF,MAAMG,UAAU,YAAhB;AACAC,OAAOC,MAAP,CAAcC,MAAMC,UAAN,CAAiBC,SAA/B,EAA0C;AACtC;;;AAGAC,cAAYC,IAAZ,EAAkB;AACd,QAAI,CAAC,KAAKP,OAAL,CAAL,EAAoB;AAChB,WAAKA,OAAL,IAAgB,EAAhB;AACH;;AAEDQ,MAAEC,IAAF,CAAOF,IAAP,EAAa,CAACG,aAAD,EAAgBC,WAAhB,KAAgC;AACzC,UAAI,CAAC,KAAKD,aAAL,CAAL,EAA0B;AACtB,aAAKA,aAAL,IAAsB,EAAtB;AACH;;AAED,UAAI,KAAKE,SAAL,CAAeD,WAAf,CAAJ,EAAiC;AAC7B,cAAM,IAAIE,OAAOC,KAAX,CACD,yCAAwCH,WAAY,+CACjD,KAAKI,KACR,aAHC,CAAN;AAKH;;AAED,UAAI,KAAKL,aAAL,EAAoBC,WAApB,CAAJ,EAAsC;AAClC,cAAM,IAAIE,OAAOC,KAAX,CACD,yCAAwCH,WAAY,oCACjD,KAAKI,KACR,aAHC,CAAN;AAKH;;AAEDtB,YAAMiB,aAAN,EAAqB;AACjBM,cAAMf,MADW;AAEjBgB,gBAAQC;AAFS,OAArB;;AAKAV,QAAEW,MAAF,CAAS,KAAKnB,OAAL,CAAT,EAAwB;AACpB,SAACW,WAAD,GAAeD;AADK,OAAxB;AAGH,KA7BD;AA8BH,GAvCqC;;AAyCtC;;;;AAIAU,aAAWC,IAAX,EAAiB;AACb,QAAI,KAAKrB,OAAL,CAAJ,EAAmB;AACf,aAAO,KAAKA,OAAL,EAAcqB,IAAd,CAAP;AACH;AACJ,GAjDqC;;AAmDtC;;;AAGAvB;AAtDsC,CAA1C","sourcesContent":["import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n"]},"sourceType":"script","hash":"2208bdb8a3b09eddb1f1eab6501ecd31070b9aff"}
