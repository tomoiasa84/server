{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/links/linker.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/linker.js"}},"code":"module.export({\n  default: () => Linker\n});\nlet LinkMany;\nmodule.watch(require(\"./linkTypes/linkMany.js\"), {\n  default(v) {\n    LinkMany = v;\n  }\n\n}, 0);\nlet LinkManyMeta;\nmodule.watch(require(\"./linkTypes/linkManyMeta.js\"), {\n  default(v) {\n    LinkManyMeta = v;\n  }\n\n}, 1);\nlet LinkOne;\nmodule.watch(require(\"./linkTypes/linkOne.js\"), {\n  default(v) {\n    LinkOne = v;\n  }\n\n}, 2);\nlet LinkOneMeta;\nmodule.watch(require(\"./linkTypes/linkOneMeta.js\"), {\n  default(v) {\n    LinkOneMeta = v;\n  }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.watch(require(\"./config.schema.js\"), {\n  LinkConfigSchema(v) {\n    LinkConfigSchema = v;\n  },\n\n  LinkConfigDefaults(v) {\n    LinkConfigDefaults = v;\n  }\n\n}, 4);\nlet smartArguments;\nmodule.watch(require(\"./linkTypes/lib/smartArguments\"), {\n  default(v) {\n    smartArguments = v;\n  }\n\n}, 5);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n  default(v) {\n    dot = v;\n  }\n\n}, 6);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 7);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 8);\n\nclass Linker {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  constructor(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  get oneTypes() {\n    return ['one', '1'];\n  }\n  /**\n   * Returns the strategies: one, many, one-meta, many-meta\n   * @returns {string}\n   */\n\n\n  get strategy() {\n    let strategy = this.isMany() ? 'many' : 'one';\n\n    if (this.linkConfig.metadata) {\n      strategy += '-meta';\n    }\n\n    return strategy;\n  }\n  /**\n   * Returns the field name in the document where the actual relationships are stored.\n   * @returns string\n   */\n\n\n  get linkStorageField() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.linkStorageField;\n    }\n\n    return this.linkConfig.field;\n  }\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n\n\n  getLinkedCollection() {\n    return this.linkConfig.collection;\n  }\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n\n\n  isMany() {\n    return !this.isSingle();\n  }\n  /**\n   * If the relationship for this link contains metadata\n   */\n\n\n  isMeta() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isMeta();\n    }\n\n    return !!this.linkConfig.metadata;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isSingle() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isSingle();\n    }\n\n    return _.contains(this.oneTypes, this.linkConfig.type);\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isVirtual() {\n    return !!this.linkConfig.inversedBy;\n  }\n  /**\n   * Should return a single result.\n   */\n\n\n  isOneResult() {\n    return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n  }\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n\n\n  createLink(object, collection = null) {\n    let helperClass = this._getHelperClass();\n\n    return new helperClass(this, object, collection);\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _validateAndClean() {\n    if (!this.linkConfig.collection) {\n      throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`);\n    }\n\n    if (typeof this.linkConfig.collection === 'string') {\n      const collectionName = this.linkConfig.collection;\n      this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n      }\n    }\n\n    if (this.isVirtual()) {\n      return this._prepareVirtual();\n    } else {\n      if (!this.linkConfig.type) {\n        this.linkConfig.type = 'one';\n      }\n\n      if (!this.linkConfig.field) {\n        this.linkConfig.field = this._generateFieldName();\n      } else {\n        if (this.linkConfig.field == this.linkName) {\n          throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n        }\n      }\n    }\n\n    check(this.linkConfig, LinkConfigSchema);\n  }\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n\n\n  _prepareVirtual() {\n    const {\n      collection,\n      inversedBy\n    } = this.linkConfig;\n    let linker = collection.getLinker(inversedBy);\n\n    if (!linker) {\n      // it is possible that the collection doesn't have a linker created yet.\n      // so we will create it on startup after all links have been defined\n      Meteor.startup(() => {\n        linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n          throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`);\n        } else {\n          this._setupVirtualConfig(linker);\n        }\n      });\n    } else {\n      this._setupVirtualConfig(linker);\n    }\n  }\n  /**\n   * @param linker\n   * @private\n   */\n\n\n  _setupVirtualConfig(linker) {\n    const virtualLinkConfig = linker.linkConfig;\n\n    if (!virtualLinkConfig) {\n      throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`);\n    }\n\n    _.extend(this.linkConfig, {\n      metadata: virtualLinkConfig.metadata,\n      relatedLinker: linker\n    });\n  }\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n\n\n  _getHelperClass() {\n    switch (this.strategy) {\n      case 'many-meta':\n        return LinkManyMeta;\n\n      case 'many':\n        return LinkMany;\n\n      case 'one-meta':\n        return LinkOneMeta;\n\n      case 'one':\n        return LinkOne;\n    }\n\n    throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n  }\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n\n\n  _generateFieldName() {\n    let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n    let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n    switch (this.strategy) {\n      case 'many-meta':\n        return `${defaultFieldPrefix}_metas`;\n\n      case 'many':\n        return `${defaultFieldPrefix}_ids`;\n\n      case 'one-meta':\n        return `${defaultFieldPrefix}_meta`;\n\n      case 'one':\n        return `${defaultFieldPrefix}_id`;\n    }\n  }\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n\n\n  _handleReferenceRemovalForVirtualLinks() {\n    this.mainCollection.after.remove((userId, doc) => {\n      // this problem may occur when you do a .remove() before Meteor.startup()\n      if (!this.linkConfig.relatedLinker) {\n        console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n        return;\n      }\n\n      let accessor = this.createLink(doc);\n\n      _.each(accessor.fetch(), linkedObj => {\n        const {\n          relatedLinker\n        } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n        // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n        // if a removal happens before Meteor.startup this may fail\n\n        if (relatedLinker) {\n          let link = relatedLinker.createLink(linkedObj);\n\n          if (relatedLinker.isSingle()) {\n            link.unset();\n          } else {\n            link.remove(doc);\n          }\n        }\n      });\n    });\n  }\n\n  _initIndex() {\n    if (Meteor.isServer) {\n      let field = this.linkConfig.field;\n\n      if (this.linkConfig.metadata) {\n        field = field + '._id';\n      }\n\n      if (this.linkConfig.index) {\n        if (this.isVirtual()) {\n          throw new Meteor.Error('You cannot set index on an inversed link.');\n        }\n\n        let options;\n\n        if (this.linkConfig.unique) {\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          options = {\n            unique: true\n          };\n        }\n\n        this.mainCollection._ensureIndex({\n          [field]: 1\n        }, options);\n      } else {\n        if (this.linkConfig.unique) {\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set unique property on an inversed link.');\n          }\n\n          if (this.isMany()) {\n            throw new Meteor.Error('You cannot set unique property on a multi field.');\n          }\n\n          this.mainCollection._ensureIndex({\n            [field]: 1\n          }, {\n            unique: true\n          });\n        }\n      }\n    }\n  }\n\n  _initAutoremove() {\n    if (!this.linkConfig.autoremove) {\n      return;\n    }\n\n    if (!this.isVirtual()) {\n      this.mainCollection.after.remove((userId, doc) => {\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: smartArguments.getIds(doc[this.linkStorageField])\n          }\n        });\n      });\n    } else {\n      this.mainCollection.after.remove((userId, doc) => {\n        const linker = this.mainCollection.getLink(doc, this.linkName);\n        const ids = linker.find({}, {\n          fields: {\n            _id: 1\n          }\n        }).fetch().map(item => item._id);\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: ids\n          }\n        });\n      });\n    }\n  }\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n\n\n  _initDenormalization() {\n    if (!this.linkConfig.denormalize || !Meteor.isServer) {\n      return;\n    }\n\n    const packageExists = !!Package['herteby:denormalize'];\n\n    if (!packageExists) {\n      throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`);\n    }\n\n    const {\n      field,\n      body,\n      bypassSchema\n    } = this.linkConfig.denormalize;\n    let cacheConfig;\n    let referenceFieldSuffix = '';\n\n    if (this.isMeta()) {\n      referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n    }\n\n    if (this.isVirtual()) {\n      let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n      let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n      cacheConfig = {\n        type: type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: inversedLink.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    } else {\n      cacheConfig = {\n        type: this.linkConfig.type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: this.linkConfig.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    }\n\n    if (this.isVirtual()) {\n      Meteor.startup(() => {\n        this.mainCollection.cache(cacheConfig);\n      });\n    } else {\n      this.mainCollection.cache(cacheConfig);\n    }\n  }\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isDenormalized() {\n    return !!this.linkConfig.denormalize;\n  }\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isSubBodyDenormalized(body) {\n    const cacheBody = this.linkConfig.denormalize.body;\n\n    const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n    const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n    return _.difference(bodyFields, cacheBodyFields).length === 0;\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linker.js"],"names":["module","export","default","Linker","LinkMany","watch","require","v","LinkManyMeta","LinkOne","LinkOneMeta","LinkConfigSchema","LinkConfigDefaults","smartArguments","dot","check","_","constructor","mainCollection","linkName","linkConfig","Object","assign","_validateAndClean","_initAutoremove","_initDenormalization","isVirtual","autoremove","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","metadata","linkStorageField","relatedLinker","field","getLinkedCollection","collection","isSingle","isMeta","contains","type","inversedBy","isOneResult","unique","createLink","object","helperClass","_getHelperClass","Meteor","Error","collectionName","Mongo","Collection","get","_prepareVirtual","_generateFieldName","linker","getLinker","startup","_name","_setupVirtualConfig","virtualLinkConfig","extend","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","console","warn","accessor","each","fetch","linkedObj","link","unset","isServer","index","options","_ensureIndex","_id","$in","getIds","getLink","ids","find","fields","map","item","denormalize","packageExists","Package","body","bypassSchema","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","keys","bodyFields","omit","difference","length"],"mappings":"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","sourcesContent":["import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport {LinkConfigSchema, LinkConfigDefaults} from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport {check} from 'meteor/check';\nimport {_} from 'meteor/underscore';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique)\n            || (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`)\n        }\n\n        if (typeof(this.linkConfig.collection) === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const {collection, inversedBy} = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`)\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            })\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`)\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {relatedLinker} = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        })\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {unique: true}\n                }\n\n                this.mainCollection._ensureIndex({[field]: 1}, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {unique: true})\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                })\n            })\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {fields: {_id: 1}}).fetch().map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: {$in: ids}\n                })\n            })\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`)\n        }\n\n        const {field, body, bypassSchema} = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = (this.isSingle() ? '._id' : ':_id');\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            })\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(\n            dot.dot(\n                _.omit(body, '_id')\n            )\n        );\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}"]},"sourceType":"script","hash":"bc655cbf8d16e1988fbb6b148e5abbf5b4884671"}
