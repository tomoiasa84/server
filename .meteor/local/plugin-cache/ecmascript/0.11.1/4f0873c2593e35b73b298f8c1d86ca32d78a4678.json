{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/initialize.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:apollo/server/initialize.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/initialize.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/initialize.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:apollo/server/initialize.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  default: () => initialize\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet db;\nmodule.watch(require(\"meteor/cultofcoders:grapher\"), {\n  db(v) {\n    db = v;\n  }\n\n}, 1);\nlet WebApp;\nmodule.watch(require(\"meteor/webapp\"), {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 2);\nlet ApolloServer;\nmodule.watch(require(\"apollo-server-express\"), {\n  ApolloServer(v) {\n    ApolloServer = v;\n  }\n\n}, 3);\nlet getSchema;\nmodule.watch(require(\"graphql-load\"), {\n  getSchema(v) {\n    getSchema = v;\n  }\n\n}, 4);\nlet AUTH_TOKEN_KEY;\nmodule.watch(require(\"../constants\"), {\n  AUTH_TOKEN_KEY(v) {\n    AUTH_TOKEN_KEY = v;\n  }\n\n}, 5);\nlet defaultSchemaDirectives;\nmodule.watch(require(\"./directives\"), {\n  default(v) {\n    defaultSchemaDirectives = v;\n  }\n\n}, 6);\nlet getUserForContext;\nmodule.watch(require(\"./core/users\"), {\n  getUserForContext(v) {\n    getUserForContext = v;\n  }\n\n}, 7);\n\nfunction initialize(apolloConfig = {}, meteorApolloConfig = {}) {\n  meteorApolloConfig = Object.assign({\n    gui: Meteor.isDevelopment,\n    middlewares: [],\n    userFields: {\n      _id: 1,\n      roles: 1,\n      username: 1,\n      emails: 1\n    }\n  }, meteorApolloConfig);\n  const {\n    typeDefs,\n    resolvers\n  } = getSchema();\n  const initialApolloConfig = Object.assign({}, apolloConfig);\n  apolloConfig = (0, _objectSpread2.default)({\n    introspection: Meteor.isDevelopment,\n    debug: Meteor.isDevelopment,\n    path: '/graphql',\n    formatError: e => ({\n      message: e.message,\n      locations: e.locations,\n      path: e.path\n    })\n  }, initialApolloConfig, {\n    typeDefs,\n    resolvers,\n    schemaDirectives: (0, _objectSpread2.default)({}, defaultSchemaDirectives, initialApolloConfig.schemaDirectives ? initialApolloConfig.schemaDirectives : []),\n    context: getContextCreator(meteorApolloConfig, initialApolloConfig.context),\n    subscriptions: getSubscriptionConfig(meteorApolloConfig)\n  });\n  const server = new ApolloServer(apolloConfig);\n  server.applyMiddleware({\n    app: WebApp.connectHandlers,\n    gui: meteorApolloConfig.gui\n  });\n  server.installSubscriptionHandlers(WebApp.httpServer);\n  meteorApolloConfig.middlewares.forEach(middleware => {\n    WebApp.connectHandlers.use('/graphql', middleware);\n  }); // We are doing this work-around because Playground sets headers and WebApp also sets headers\n  // Resulting into a conflict and a server side exception of \"Headers already sent\"\n\n  WebApp.connectHandlers.use('/graphql', (req, res) => {\n    if (req.method === 'GET') {\n      res.end();\n    }\n  });\n  return {\n    server\n  };\n}\n\nfunction getContextCreator(meteorApolloConfig, defaultContextResolver) {\n  return function getContext({\n    req,\n    connection\n  }) {\n    return Promise.asyncApply(() => {\n      const defaultContext = defaultContextResolver ? Promise.await(defaultContextResolver()) : {};\n      Object.assign(defaultContext, {\n        db\n      });\n\n      if (connection) {\n        return (0, _objectSpread2.default)({}, defaultContext, connection.context);\n      } else {\n        let userContext = {};\n\n        if (Package['accounts-base']) {\n          const loginToken = req.headers['meteor-login-token'] || req.cookies['meteor-login-token'];\n          userContext = Promise.await(getUserForContext(loginToken, meteorApolloConfig.userFields));\n        }\n\n        return (0, _objectSpread2.default)({}, defaultContext, userContext);\n      }\n    });\n  };\n}\n\nfunction getSubscriptionConfig(meteorApolloConfig) {\n  return {\n    onConnect: (connectionParams, webSocket, context) => Promise.asyncApply(() => {\n      const loginToken = connectionParams[AUTH_TOKEN_KEY];\n      return new Promise((resolve, reject) => {\n        if (loginToken) {\n          const userContext = getUserForContext(loginToken, meteorApolloConfig.userFields).then(userContext => {\n            resolve(userContext);\n          });\n        } else {\n          resolve({});\n        }\n      });\n    })\n  };\n}","map":{"version":3,"sources":["packages/cultofcoders:apollo/server/initialize.js"],"names":["module","export","default","initialize","Meteor","watch","require","v","db","WebApp","ApolloServer","getSchema","AUTH_TOKEN_KEY","defaultSchemaDirectives","getUserForContext","apolloConfig","meteorApolloConfig","Object","assign","gui","isDevelopment","middlewares","userFields","_id","roles","username","emails","typeDefs","resolvers","initialApolloConfig","introspection","debug","path","formatError","e","message","locations","schemaDirectives","context","getContextCreator","subscriptions","getSubscriptionConfig","server","applyMiddleware","app","connectHandlers","installSubscriptionHandlers","httpServer","forEach","middleware","use","req","res","method","end","defaultContextResolver","getContext","connection","defaultContext","userContext","Package","loginToken","headers","cookies","onConnect","connectionParams","webSocket","Promise","resolve","reject","then"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { db } from 'meteor/cultofcoders:grapher';\nimport { WebApp } from 'meteor/webapp';\nimport { ApolloServer } from 'apollo-server-express';\nimport { getSchema } from 'graphql-load';\nimport { AUTH_TOKEN_KEY } from '../constants';\nimport defaultSchemaDirectives from './directives';\nimport { getUserForContext } from './core/users';\n\n/**\n *\n * @param {*} apolloConfig Options https://www.apollographql.com/docs/apollo-server/api/apollo-server.html#constructor-options-lt-ApolloServer-gt\n * @param {MeteorApolloConfig} meteorApolloConfig\n */\nexport default function initialize(apolloConfig = {}, meteorApolloConfig = {}) {\n  meteorApolloConfig = Object.assign(\n    {\n      gui: Meteor.isDevelopment,\n      middlewares: [],\n      userFields: {\n        _id: 1,\n        roles: 1,\n        username: 1,\n        emails: 1,\n      },\n    },\n    meteorApolloConfig\n  );\n\n  const { typeDefs, resolvers } = getSchema();\n\n  const initialApolloConfig = Object.assign({}, apolloConfig);\n  apolloConfig = {\n    introspection: Meteor.isDevelopment,\n    debug: Meteor.isDevelopment,\n    path: '/graphql',\n    formatError: e => ({\n      message: e.message,\n      locations: e.locations,\n      path: e.path,\n    }),\n    ...initialApolloConfig,\n    typeDefs,\n    resolvers,\n    schemaDirectives: {\n      ...defaultSchemaDirectives,\n      ...(initialApolloConfig.schemaDirectives\n        ? initialApolloConfig.schemaDirectives\n        : []),\n    },\n    context: getContextCreator(meteorApolloConfig, initialApolloConfig.context),\n    subscriptions: getSubscriptionConfig(meteorApolloConfig),\n  };\n\n  const server = new ApolloServer(apolloConfig);\n\n  server.applyMiddleware({\n    app: WebApp.connectHandlers,\n    gui: meteorApolloConfig.gui,\n  });\n\n  server.installSubscriptionHandlers(WebApp.httpServer);\n\n  meteorApolloConfig.middlewares.forEach(middleware => {\n    WebApp.connectHandlers.use('/graphql', middleware);\n  });\n\n  // We are doing this work-around because Playground sets headers and WebApp also sets headers\n  // Resulting into a conflict and a server side exception of \"Headers already sent\"\n  WebApp.connectHandlers.use('/graphql', (req, res) => {\n    if (req.method === 'GET') {\n      res.end();\n    }\n  });\n\n  return {\n    server,\n  };\n}\n\nfunction getContextCreator(meteorApolloConfig, defaultContextResolver) {\n  return async function getContext({ req, connection }) {\n    const defaultContext = defaultContextResolver\n      ? await defaultContextResolver()\n      : {};\n\n    Object.assign(defaultContext, { db });\n\n    if (connection) {\n      return {\n        ...defaultContext,\n        ...connection.context,\n      };\n    } else {\n      let userContext = {};\n      if (Package['accounts-base']) {\n        const loginToken =\n          req.headers['meteor-login-token'] ||\n          req.cookies['meteor-login-token'];\n        userContext = await getUserForContext(\n          loginToken,\n          meteorApolloConfig.userFields\n        );\n      }\n\n      return {\n        ...defaultContext,\n        ...userContext,\n      };\n    }\n  };\n}\n\nfunction getSubscriptionConfig(meteorApolloConfig) {\n  return {\n    onConnect: async (connectionParams, webSocket, context) => {\n      const loginToken = connectionParams[AUTH_TOKEN_KEY];\n\n      return new Promise((resolve, reject) => {\n        if (loginToken) {\n          const userContext = getUserForContext(\n            loginToken,\n            meteorApolloConfig.userFields\n          ).then(userContext => {\n            resolve(userContext);\n          });\n        } else {\n          resolve({});\n        }\n      });\n    },\n  };\n}\n"]},"sourceType":"script","hash":"4f0873c2593e35b73b298f8c1d86ca32d78a4678"}
