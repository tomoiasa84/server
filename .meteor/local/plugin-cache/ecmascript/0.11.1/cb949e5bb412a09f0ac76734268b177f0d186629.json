{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/base.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/base.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/base.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/base.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/base.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nmodule.export({\n  \"default\": function () {\n    return Link;\n  }\n});\nvar SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n  \"default\": function (v) {\n    SmartArgs = v;\n  }\n}, 0);\nvar createSearchFilters;\nmodule.watch(require(\"../lib/createSearchFilters\"), {\n  \"default\": function (v) {\n    createSearchFilters = v;\n  }\n}, 1);\n\nvar Link =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Link, [{\n    key: \"config\",\n    get: function () {\n      return this.linker.linkConfig;\n    }\n  }, {\n    key: \"isVirtual\",\n    get: function () {\n      return this.linker.isVirtual();\n    }\n  }]);\n\n  function Link(linker, object, collection) {\n    this.linker = linker;\n    this.object = object;\n    this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n    if (this.linker.isVirtual()) {\n      this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n    } else {\n      this.linkStorageField = this.config.field;\n    }\n  }\n  /**\n   * Gets the stored link information value\n   * @returns {*}\n   */\n\n\n  var _proto = Link.prototype;\n\n  _proto.value = function () {\n    function value() {\n      if (this.isVirtual) {\n        throw new Meteor.Error('You can only take the value from the main link.');\n      }\n\n      return this.object[this.linkStorageField];\n    }\n\n    return value;\n  }();\n  /**\n   * Finds linked data.\n   *\n   * @param filters\n   * @param options\n   * @returns {*}\n   * @param userId\n   */\n\n\n  _proto.find = function () {\n    function find() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var linker = this.linker;\n      var linkedCollection = this.linkedCollection;\n      var $metaFilters;\n\n      if (filters.$meta) {\n        $metaFilters = filters.$meta;\n        delete filters.$meta;\n      }\n\n      var searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n      var appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n      // happens due to recursive importing of modules\n      // TODO: find another way to do this\n\n\n      if (linkedCollection.find) {\n        return linkedCollection.find(appliedFilters, options, userId);\n      } else {\n        return linkedCollection.default.find(appliedFilters, options, userId);\n      }\n    }\n\n    return find;\n  }();\n  /**\n   * @param filters\n   * @param options\n   * @param others\n   * @returns {*|{content}|any}\n   */\n\n\n  _proto.fetch = function () {\n    function fetch(filters, options) {\n      for (var _len = arguments.length, others = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        others[_key - 2] = arguments[_key];\n      }\n\n      var result = this.find.apply(this, [filters, options].concat(others)).fetch();\n\n      if (this.linker.isOneResult()) {\n        return _.first(result);\n      }\n\n      return result;\n    }\n\n    return fetch;\n  }();\n  /**\n   * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n   * We use clean to make it an empty array by default.\n   */\n\n\n  _proto.clean = function () {\n    function clean() {}\n\n    return clean;\n  }();\n  /**\n   * Extracts a single id\n   */\n\n\n  _proto.identifyId = function () {\n    function identifyId(what, saveToDatabase) {\n      return SmartArgs.getId(what, {\n        saveToDatabase: saveToDatabase,\n        collection: this.linkedCollection\n      });\n    }\n\n    return identifyId;\n  }();\n  /**\n   * Extracts the ids of object(s) or strings and returns an array.\n   */\n\n\n  _proto.identifyIds = function () {\n    function identifyIds(what, saveToDatabase) {\n      return SmartArgs.getIds(what, {\n        saveToDatabase: saveToDatabase,\n        collection: this.linkedCollection\n      });\n    }\n\n    return identifyIds;\n  }();\n  /**\n   * Checks when linking data, if the ids are valid with the linked collection.\n   * @throws Meteor.Error\n   * @param ids\n   *\n   * @protected\n   */\n\n\n  _proto._validateIds = function () {\n    function _validateIds(ids) {\n      if (!_.isArray(ids)) {\n        ids = [ids];\n      }\n\n      var validIds = this.linkedCollection.find({\n        _id: {\n          $in: ids\n        }\n      }, {\n        fields: {\n          _id: 1\n        }\n      }).fetch().map(function (doc) {\n        return doc._id;\n      });\n\n      if (validIds.length != ids.length) {\n        throw new Meteor.Error('not-found', \"You tried to create links with non-existing id(s) inside \\\"\" + this.linkedCollection._name + \"\\\": \" + _.difference(ids, validIds).join(', '));\n      }\n    }\n\n    return _validateIds;\n  }();\n  /**\n   * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n   *\n   * @param action\n   * @param what\n   * @param metadata\n   *\n   * @protected\n   */\n\n\n  _proto._virtualAction = function () {\n    function _virtualAction(action, what, metadata) {\n      var _this = this;\n\n      var linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n      if (what === undefined) {\n        var reversedLink = linker.createLink(this.fetch());\n        reversedLink.unset();\n        return;\n      }\n\n      if (!_.isArray(what)) {\n        what = [what];\n      }\n\n      what = _.map(what, function (element) {\n        if (!_.isObject(element)) {\n          return linker.mainCollection.findOne(element);\n        } else {\n          if (!element._id) {\n            var elementId = linker.mainCollection.insert(element);\n\n            _.extend(element, linker.mainCollection.findOne(elementId));\n          }\n\n          return element;\n        }\n      });\n      return _.map(what, function (element) {\n        var reversedLink = linker.createLink(element);\n\n        if (action == 'metadata') {\n          if (linker.isSingle()) {\n            return reversedLink.metadata(metadata);\n          } else {\n            return reversedLink.metadata(_this.object, metadata);\n          }\n        } else if (action == 'add' || action == 'set') {\n          if (linker.isSingle()) {\n            reversedLink.set(_this.object, metadata);\n          } else {\n            reversedLink.add(_this.object, metadata);\n          }\n        } else {\n          if (linker.isSingle()) {\n            reversedLink.unset();\n          } else {\n            reversedLink.remove(_this.object);\n          }\n        }\n      });\n    }\n\n    return _virtualAction;\n  }();\n\n  return Link;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/base.js"],"names":["module","export","Link","SmartArgs","watch","require","v","createSearchFilters","linker","linkConfig","isVirtual","object","collection","linkedCollection","getLinkedCollection","linkStorageField","config","relatedLinker","field","value","Meteor","Error","find","filters","options","userId","undefined","$metaFilters","$meta","searchFilters","strategy","appliedFilters","_","extend","default","fetch","others","result","isOneResult","first","clean","identifyId","what","saveToDatabase","getId","identifyIds","getIds","_validateIds","ids","isArray","validIds","_id","$in","fields","map","doc","length","_name","difference","join","_virtualAction","action","metadata","reversedLink","createLink","unset","isObject","element","mainCollection","findOne","elementId","insert","isSingle","set","add","remove"],"mappings":"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","sourcesContent":["import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n"]},"sourceType":"script","hash":"cb949e5bb412a09f0ac76734268b177f0d186629"}
