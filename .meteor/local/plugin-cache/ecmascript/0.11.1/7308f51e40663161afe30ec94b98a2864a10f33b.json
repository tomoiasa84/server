{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js"}},"code":"module.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.watch(require(\"./counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.watch(require(\"./lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"./lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  async fetchSync() {\n    this.doValidateParams();\n\n    if (this.subscriptionHandle) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  async fetchOneSync() {\n    return _.first((await this.fetchSync()));\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    if (!this.subscriptionHandle) {\n      const callback = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...arguments));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  async getCountSync() {\n    if (this._counter) {\n      throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n    }\n\n    return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.client.js"],"names":["module","export","default","Query","_","watch","require","v","CountSubscription","createGraph","recursiveFetch","prepareForProcess","callWithPromise","Base","subscribe","callback","doValidateParams","subscriptionHandle","Meteor","name","body","params","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","Error","fetchOneSync","first","fetch","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","isFunction","err","res","getCountSync","getCount","call","options","allowSkip","$options","skip","collection"],"mappings":"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","sourcesContent":["import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n"]},"sourceType":"script","hash":"7308f51e40663161afe30ec94b98a2864a10f33b"}
