{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/imports/api/modules/contacts/API.resolvers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/modules/contacts/API.resolvers.js","filename":"/Users/simiontomoiaga/git/server/imports/api/modules/contacts/API.resolvers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/imports/api/modules/contacts/API.resolvers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/modules/contacts/API.resolvers.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.exportDefault({\n  Query: {\n    contacts(_, _ref, _ref2, ast) {\n      let {\n        filters,\n        options\n      } = _ref;\n      let {\n        userId,\n        db\n      } = _ref2;\n      console.log(userId);\n      $filters = filters;\n      $options = options;\n      const users = db.contacts.astToQuery(ast, {\n        $filters,\n        $options\n      }).fetch();\n      return users;\n    }\n\n  },\n  Mutation: {\n    contactCreate: (_, _ref3, _ref4) => {\n      let {\n        data\n      } = _ref3;\n      let {\n        db\n      } = _ref4;\n      console.log(data);\n      data.createdAt = new Date();\n      const contactId = db.contacts.insert((0, _objectSpread2.default)({}, data));\n      return db.contacts.findOne(contactId);\n    },\n\n    contactUpdate(_, _ref5, _ref6) {\n      let {\n        contactId,\n        data\n      } = _ref5;\n      let {\n        db\n      } = _ref6;\n      const contact = db.contacts.createQuery({\n        $filters: {\n          _id: contactId\n        }\n      }).fetchOne();\n\n      if (contact._id === contactId) {\n        return db.contacts.update(contactId, {\n          $set: (0, _objectSpread2.default)({}, data)\n        });\n      } else throw new Meteor.Error(\"no rights to update this contact\");\n    }\n\n  }\n});","map":{"version":3,"sources":["imports/api/modules/contacts/API.resolvers.js"],"names":["module","exportDefault","Query","contacts","_","ast","filters","options","userId","db","console","log","$filters","$options","users","astToQuery","fetch","Mutation","contactCreate","data","createdAt","Date","contactId","insert","findOne","contactUpdate","contact","createQuery","_id","fetchOne","update","$set","Meteor","Error"],"mappings":";;;;AAAAA,OAAOC,aAAP,CAAe;AACXC,SAAO;AACHC,aAASC,CAAT,eAAkDC,GAAlD,EAAuD;AAAA,UAA3C;AAAEC,eAAF;AAAWC;AAAX,OAA2C;AAAA,UAArB;AAAEC,cAAF;AAAUC;AAAV,OAAqB;AACnDC,cAAQC,GAAR,CAAYH,MAAZ;AACAI,iBAAWN,OAAX;AACAO,iBAAWN,OAAX;AACA,YAAMO,QAAQL,GAAGN,QAAH,CAAYY,UAAZ,CAAuBV,GAAvB,EAA4B;AACtCO,gBADsC;AAEtCC;AAFsC,OAA5B,EAGXG,KAHW,EAAd;AAIA,aAAOF,KAAP;AACH;;AAVE,GADI;AAcXG,YAAU;AACNC,mBAAe,CAACd,CAAD,mBAAqB;AAAA,UAAjB;AAACe;AAAD,OAAiB;AAAA,UAAT;AAACV;AAAD,OAAS;AAChCC,cAAQC,GAAR,CAAYQ,IAAZ;AACAA,WAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;AACA,YAAMC,YAAYb,GAAGN,QAAH,CAAYoB,MAAZ,iCACXJ,IADW,EAAlB;AAGA,aAAOV,GAAGN,QAAH,CAAYqB,OAAZ,CAAoBF,SAApB,CAAP;AACH,KARK;;AAUNG,kBAAcrB,CAAd,gBAA6C;AAAA,UAA5B;AAAEkB,iBAAF;AAAaH;AAAb,OAA4B;AAAA,UAAP;AAAEV;AAAF,OAAO;AACzC,YAAMiB,UAAUjB,GAAGN,QAAH,CAAYwB,WAAZ,CAAwB;AACpCf,kBAAU;AAACgB,eAAKN;AAAN;AAD0B,OAAxB,EAEbO,QAFa,EAAhB;;AAIA,UAAGH,QAAQE,GAAR,KAAgBN,SAAnB,EAA6B;AACzB,eAAOb,GAAGN,QAAH,CAAY2B,MAAZ,CAAmBR,SAAnB,EAA8B;AACjCS,gDAAUZ,IAAV;AADiC,SAA9B,CAAP;AAGH,OAJD,MAMI,MAAM,IAAIa,OAAOC,KAAX,CAAiB,kCAAjB,CAAN;AACP;;AAtBK;AAdC,CAAf","sourcesContent":["export default {\n    Query: {\n        contacts(_, { filters, options }, { userId, db }, ast) {\n            console.log(userId)\n            $filters = filters\n            $options = options\n            const users = db.contacts.astToQuery(ast, {\n                $filters,\n                $options\n            }).fetch()\n            return users\n        }\n\n    },\n    Mutation: {\n        contactCreate: (_, {data}, {db}) => {\n            console.log(data)\n            data.createdAt = new Date();\n            const contactId = db.contacts.insert({\n                ...data\n            });\n            return db.contacts.findOne(contactId);\n        },\n\n        contactUpdate(_, { contactId, data }, { db }){\n            const contact = db.contacts.createQuery({\n                $filters: {_id: contactId},\n            }).fetchOne();\n\n            if(contact._id === contactId){\n                return db.contacts.update(contactId, {\n                    $set: {...data}\n                });\n            }\n            else\n                throw new Meteor.Error(\"no rights to update this contact\");\n        },\n    }\n}"]},"sourceType":"script","hash":"3a74cfc18375b8347b4707f7b577609b8116105f"}
