{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"}},"code":"module.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n      return {\n        _id: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"],"names":["module","export","default","AggregateFilters","sift","watch","require","v","constructor","collectionNode","metaFilters","linker","isVirtual","linkStorageField","parentObjects","parent","results","create","strategy","createOne","createOneMeta","createMany","createManyMeta","Meteor","Error","type","_id","$in","_","uniq","pluck","eligibleObjects","filter","object","storages","ids","each","storage","push","filters","value","key","arrayOfIds","union","isValid","$elemMatch"],"mappings":"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","sourcesContent":["import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}"]},"sourceType":"script","hash":"05f0b704f33c45209b6631592f8414739eeba6d4"}
