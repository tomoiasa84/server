{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js"}},"code":"let _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"./constants\"), {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  let containsDottedFields = false;\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const collection = childCollectionNode.collection;\n  let pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  let _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  let dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, (value, field) => {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    let $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice\n        }\n      }\n    });\n  }\n\n  return {\n    pipeline,\n    containsDottedFields\n  };\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js"],"names":["_","module","watch","require","v","SAFE_DOTTED_FIELD_REPLACEMENT","exportDefault","childCollectionNode","filters","options","userId","containsDottedFields","linker","linkStorageField","collection","pipeline","firewall","push","$match","sort","keys","length","$sort","_id","isMeta","dataPush","each","fields","value","field","indexOf","safeField","replace","$group","data","$push","limit","skip","$slice","$project"],"mappings":"AAAA,IAAIA,CAAJ;;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,IAAEI,CAAF,EAAI;AAACJ,QAAEI,CAAF;AAAI;;AAAV,CAA1C,EAAsD,CAAtD;AAAyD,IAAIC,6BAAJ;AAAkCJ,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACE,gCAA8BD,CAA9B,EAAgC;AAACC,oCAA8BD,CAA9B;AAAgC;;AAAlE,CAApC,EAAwG,CAAxG;AAAjGH,OAAOK,aAAP,CAGe,UAAUC,mBAAV,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyD;AACpE,MAAIC,uBAAuB,KAA3B;AACA,QAAMC,SAASL,oBAAoBK,MAAnC;AACA,QAAMC,mBAAmBD,OAAOC,gBAAhC;AACA,QAAMC,aAAaP,oBAAoBO,UAAvC;AAEA,MAAIC,WAAW,EAAf;;AAEA,MAAID,WAAWE,QAAf,EAAyB;AACrBF,eAAWE,QAAX,CAAoBR,OAApB,EAA6BC,OAA7B,EAAsCC,MAAtC;AACH;;AAEDK,WAASE,IAAT,CAAc;AAACC,YAAQV;AAAT,GAAd;;AAEA,MAAIC,QAAQU,IAAR,IAAgBnB,EAAEoB,IAAF,CAAOX,QAAQU,IAAf,EAAqBE,MAArB,GAA8B,CAAlD,EAAqD;AACjDN,aAASE,IAAT,CAAc;AAACK,aAAOb,QAAQU;AAAhB,KAAd;AACH;;AAED,MAAII,MAAMV,gBAAV;;AACA,MAAID,OAAOY,MAAP,EAAJ,EAAqB;AACjBD,WAAO,MAAP;AACH;;AAED,MAAIE,WAAW;AACXF,SAAK;AADM,GAAf;;AAIAvB,IAAE0B,IAAF,CAAOjB,QAAQkB,MAAf,EAAuB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,QAAIA,MAAMC,OAAN,CAAc,GAAd,KAAsB,CAA1B,EAA6B;AACzBnB,6BAAuB,IAAvB;AACH;;AACD,UAAMoB,YAAYF,MAAMG,OAAN,CAAc,KAAd,EAAqB3B,6BAArB,CAAlB;AACAoB,aAASM,SAAT,IAAsB,MAAMF,KAA5B;AACH,GAND;;AAQA,MAAIjB,OAAOY,MAAP,EAAJ,EAAqB;AACjBC,aAASZ,gBAAT,IAA6B,MAAMA,gBAAnC;AACH;;AAEDE,WAASE,IAAT,CAAc;AACVgB,YAAQ;AACJV,WAAK,MAAMA,GADP;AAEJW,YAAM;AACFC,eAAOV;AADL;AAFF;AADE,GAAd;;AASA,MAAIhB,QAAQ2B,KAAR,IAAiB3B,QAAQ4B,IAA7B,EAAmC;AAC/B,QAAIC,SAAS,CAAC,OAAD,CAAb;AACA,QAAI7B,QAAQ4B,IAAZ,EAAkBC,OAAOrB,IAAP,CAAYR,QAAQ4B,IAApB;AAClB,QAAI5B,QAAQ2B,KAAZ,EAAmBE,OAAOrB,IAAP,CAAYR,QAAQ2B,KAApB;AAEnBrB,aAASE,IAAT,CAAc;AACVsB,gBAAU;AACNhB,aAAK,CADC;AAENW,cAAM;AAACI;AAAD;AAFA;AADA,KAAd;AAMH;;AAED,SAAO;AAACvB,YAAD;AAAWJ;AAAX,GAAP;AACH,CAjED","sourcesContent":["import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}"]},"sourceType":"script","hash":"916c4e85eacb2bf5a6566ce868721aafab94e0d0"}
