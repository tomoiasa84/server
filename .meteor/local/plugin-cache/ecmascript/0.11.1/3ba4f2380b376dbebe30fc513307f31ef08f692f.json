{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js"}},"code":"let CountSubscription;\nmodule.watch(require(\"../query/counts/countSubscription\"), {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveFetch;\nmodule.watch(require(\"../query/lib/recursiveFetch.js\"), {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 2);\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"../query/lib/callWithPromise\"), {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\nmodule.exportDefault(class extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(this.params, callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, this.params));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', this.params));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', this.params, callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, this.params, callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = this.body;\n\n    if (this.params.$body) {\n      body = intersectDeep(body, this.params.$body);\n    }\n\n    body = prepareForProcess(body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body));\n  }\n\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js"],"names":["CountSubscription","module","watch","require","default","v","createGraph","recursiveFetch","prepareForProcess","_","callWithPromise","Base","exportDefault","subscribe","callback","isResolver","Meteor","Error","subscriptionHandle","name","params","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","first","fetch","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","args","isFunction","err","res","getCountSync","getCount","call","options","body","$body","intersectDeep","allowSkip","$options","skip","collection"],"mappings":"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","sourcesContent":["import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n"]},"sourceType":"script","hash":"3ba4f2380b376dbebe30fc513307f31ef08f692f"}
