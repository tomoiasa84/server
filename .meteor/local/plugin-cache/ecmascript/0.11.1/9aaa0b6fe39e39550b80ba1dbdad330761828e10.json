{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nmodule.export({\n  cleanOptions: function () {\n    return cleanOptions;\n  },\n  cleanFilters: function () {\n    return cleanFilters;\n  },\n  fieldExists: function () {\n    return fieldExists;\n  }\n});\n\nfunction cleanOptions(options, ensureFields) {\n  if (!options) {\n    return;\n  }\n\n  if (options.fields) {\n    var _ref;\n\n    options.fields = (_ref = _).pick.apply(_ref, [options.fields].concat((0, _toConsumableArray2.default)(ensureFields)));\n  }\n\n  if (options.sort) {\n    var _ref2;\n\n    options.sort = (_ref2 = _).pick.apply(_ref2, [options.sort].concat((0, _toConsumableArray2.default)(ensureFields)));\n  }\n}\n\nvar deepFilterFieldsArray = ['$and', '$or', '$nor'];\nvar deepFilterFieldsObject = ['$not'];\nvar special = deepFilterFieldsArray.concat(deepFilterFieldsObject);\n\nfunction cleanFilters(filters, ensureFields) {\n  if (!filters) {\n    return;\n  }\n\n  _.each(filters, function (value, key) {\n    if (!_.contains(special, key)) {\n      if (!fieldExists(ensureFields, key)) {\n        delete filters[key];\n      }\n    }\n  });\n\n  deepFilterFieldsArray.forEach(function (field) {\n    if (filters[field]) {\n      filters[field].forEach(function (element) {\n        return cleanFilters(element, ensureFields);\n      });\n    }\n  });\n  deepFilterFieldsObject.forEach(function (field) {\n    if (filters[field]) {\n      cleanFilters(filters[field], ensureFields);\n    }\n  });\n}\n\nfunction fieldExists(fields, key) {\n  for (var i = 0; i < fields.length; i++) {\n    if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js"],"names":["module","export","cleanOptions","cleanFilters","fieldExists","options","ensureFields","fields","pick","sort","deepFilterFieldsArray","deepFilterFieldsObject","special","filters","_","each","value","key","contains","forEach","field","element","i","length","indexOf"],"mappings":";;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAa;AAAA,WAAIA,YAAJ;AAAA,GAAd;AAA+BC,gBAAa;AAAA,WAAIA,YAAJ;AAAA,GAA5C;AAA6DC,eAAY;AAAA,WAAIA,WAAJ;AAAA;AAAzE,CAAd;;AAAO,SAASF,YAAT,CAAsBG,OAAtB,EAA+BC,YAA/B,EAA6C;AAChD,MAAI,CAACD,OAAL,EAAc;AACV;AACH;;AAED,MAAIA,QAAQE,MAAZ,EAAoB;AAAA;;AAChBF,YAAQE,MAAR,GAAiB,WAAEC,IAAF,cAAOH,QAAQE,MAAf,0CAA0BD,YAA1B,GAAjB;AACH;;AAED,MAAID,QAAQI,IAAZ,EAAkB;AAAA;;AACdJ,YAAQI,IAAR,GAAe,YAAED,IAAF,eAAOH,QAAQI,IAAf,0CAAwBH,YAAxB,GAAf;AACH;AACJ;;AAED,IAAMI,wBAAwB,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAA9B;AACA,IAAMC,yBAAyB,CAAC,MAAD,CAA/B;AACA,IAAMC,UAAcF,qBAAd,QAAwCC,sBAAxC,CAAN;;AAEO,SAASR,YAAT,CAAsBU,OAAtB,EAA+BP,YAA/B,EAA6C;AAChD,MAAI,CAACO,OAAL,EAAc;AACV;AACH;;AAEDC,IAAEC,IAAF,CAAOF,OAAP,EAAgB,UAACG,KAAD,EAAQC,GAAR,EAAgB;AAC5B,QAAI,CAACH,EAAEI,QAAF,CAAWN,OAAX,EAAoBK,GAApB,CAAL,EAA+B;AAC3B,UAAI,CAACb,YAAYE,YAAZ,EAA0BW,GAA1B,CAAL,EAAqC;AACjC,eAAOJ,QAAQI,GAAR,CAAP;AACH;AACJ;AACJ,GAND;;AAQAP,wBAAsBS,OAAtB,CAA8B,iBAAS;AACnC,QAAIN,QAAQO,KAAR,CAAJ,EAAoB;AAChBP,cAAQO,KAAR,EAAeD,OAAf,CAAuB;AAAA,eAAWhB,aAAakB,OAAb,EAAsBf,YAAtB,CAAX;AAAA,OAAvB;AACH;AACJ,GAJD;AAMAK,yBAAuBQ,OAAvB,CAA+B,iBAAS;AACpC,QAAIN,QAAQO,KAAR,CAAJ,EAAoB;AAChBjB,mBAAaU,QAAQO,KAAR,CAAb,EAA6Bd,YAA7B;AACH;AACJ,GAJD;AAKH;;AAUM,SAASF,WAAT,CAAqBG,MAArB,EAA6BU,GAA7B,EAAkC;AACrC,OAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIf,OAAOgB,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,QAAIf,OAAOe,CAAP,MAAcL,GAAd,IAAqBA,IAAIO,OAAJ,CAAYjB,OAAOe,CAAP,IAAY,GAAxB,MAAiC,CAA1D,EAA6D;AACzD,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH","sourcesContent":["export function cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nexport function cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\n/**\n * This will check if a field exists in a set of fields\n * If fields contains [\"profile\"], then \"profile.something\" will return true\n *\n * @param fields\n * @param key\n * @returns {boolean}\n */\nexport function fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n"]},"sourceType":"script","hash":"9aaa0b6fe39e39550b80ba1dbdad330761828e10"}
