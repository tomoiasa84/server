{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js"}},"code":"module.export({\n  default: () => createSearchFilters,\n  createOne: () => createOne,\n  createOneVirtual: () => createOneVirtual,\n  createOneMeta: () => createOneMeta,\n  createOneMetaVirtual: () => createOneMetaVirtual,\n  createMany: () => createMany,\n  createManyVirtual: () => createManyVirtual,\n  createManyMeta: () => createManyMeta,\n  createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: object[fieldStorage]\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  const value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  let value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return {\n    [fieldStorage]: {\n      $elemMatch: filters\n    }\n  };\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js"],"names":["module","export","default","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","watch","require","v","object","fieldStorage","strategy","isVirtual","metaFilters","Meteor","Error","_id","value","undefined","filters","_","each","key","$in","pluck","$elemMatch"],"mappings":"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","sourcesContent":["import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}"]},"sourceType":"script","hash":"38852e86c6c24d7a2130d65cf39ab68577e8c83e"}
