{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js"}},"code":"module.export({\n  categoryIds: function () {\n    return categoryIds;\n  },\n  groupIds: function () {\n    return groupIds;\n  },\n  authorIds: function () {\n    return authorIds;\n  },\n  postIds: function () {\n    return postIds;\n  },\n  \"default\": function () {\n    return createFixtures;\n  }\n});\nvar Authors, Groups, Posts, Categories, AuthorProfiles;\nmodule.watch(require(\"./collections\"), {\n  Authors: function (v) {\n    Authors = v;\n  },\n  Groups: function (v) {\n    Groups = v;\n  },\n  Posts: function (v) {\n    Posts = v;\n  },\n  Categories: function (v) {\n    Categories = v;\n  },\n  AuthorProfiles: function (v) {\n    AuthorProfiles = v;\n  }\n}, 0);\nvar GROUPS = 3;\nvar CATEGORIES = 3;\nvar AUTHOR_PER_GROUPS = 3;\nvar POSTS_PER_AUTHOR = 3;\nvar categoryIds = [];\nvar groupIds = [];\nvar authorIds = [];\nvar postIds = [];\n\nfunction createFixtures() {\n  for (var i = 0; i < CATEGORIES; i++) {\n    var categoryId = Categories.insert({\n      name: \"Category \" + i\n    });\n    categoryIds.push(categoryId);\n  }\n\n  for (var _i = 0; _i < GROUPS; _i++) {\n    var groupId = Groups.insert({\n      name: \"Group \" + _i\n    });\n    groupIds.push(groupId);\n  }\n\n  groupIds.forEach(function (groupId) {\n    for (var _i2 = 0; _i2 < AUTHOR_PER_GROUPS; _i2++) {\n      var authorId = Authors.insert({\n        name: \"Author \" + authorIds.length,\n        createdAt: new Date()\n      });\n      var authorProfileId = AuthorProfiles.insert({\n        name: \"Author \" + authorIds.length,\n        createdAt: new Date()\n      });\n      Authors.getLink(authorId, 'profile').set(authorProfileId);\n      authorIds.push(authorId); // link it to the group\n\n      var groupLink = Authors.getLink(authorId, 'groups');\n      groupLink.add(groupId);\n\n      for (var j = 0; j < POSTS_PER_AUTHOR; j++) {\n        createPost(authorId);\n      }\n    }\n  });\n}\n\nfunction createPost(authorId) {\n  var postId = Posts.insert({\n    title: \"Post \" + postIds.length,\n    createdAt: new Date()\n  });\n  postIds.push(postId);\n  var authorLink = Posts.getLink(postId, 'author');\n  authorLink.set(authorId);\n  var randomCategoryId = categoryIds[Math.floor(Math.random() * categoryIds.length)];\n  var categoriesLink = Posts.getLink(postId, 'categories');\n  categoriesLink.add(randomCategoryId, {\n    createdAt: new Date()\n  });\n  return postId;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/link-cache/fixtures.js"],"names":["module","export","categoryIds","groupIds","authorIds","postIds","createFixtures","Authors","Groups","Posts","Categories","AuthorProfiles","watch","require","v","GROUPS","CATEGORIES","AUTHOR_PER_GROUPS","POSTS_PER_AUTHOR","i","categoryId","insert","name","push","groupId","forEach","authorId","length","createdAt","Date","authorProfileId","getLink","set","groupLink","add","j","createPost","postId","title","authorLink","randomCategoryId","Math","floor","random","categoriesLink"],"mappings":"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","sourcesContent":["import {Authors, Groups, Posts, Categories, AuthorProfiles} from './collections';\n\nconst GROUPS = 3;\nconst CATEGORIES = 3;\nconst AUTHOR_PER_GROUPS = 3;\nconst POSTS_PER_AUTHOR = 3;\n\nexport let categoryIds = [];\nexport let groupIds = [];\nexport let authorIds = [];\nexport let postIds = [];\n\nexport default function createFixtures() {\n    for (let i = 0; i < CATEGORIES; i++) {\n        const categoryId = Categories.insert({\n            name: `Category ${i}`\n        });\n\n        categoryIds.push(categoryId);\n    }\n\n\n    for (let i = 0; i < GROUPS; i++) {\n        const groupId = Groups.insert({\n            name: `Group ${i}`\n        });\n\n        groupIds.push(groupId);\n    }\n\n    groupIds.forEach(groupId => {\n        for (let i = 0; i < AUTHOR_PER_GROUPS; i++) {\n            const authorId = Authors.insert({\n                name: `Author ${authorIds.length}`,\n                createdAt: new Date(),\n            });\n\n            const authorProfileId = AuthorProfiles.insert({\n                name: `Author ${authorIds.length}`,\n                createdAt: new Date(),\n            });\n\n            Authors.getLink(authorId, 'profile').set(authorProfileId);\n\n            authorIds.push(authorId);\n\n            // link it to the group\n            const groupLink = Authors.getLink(authorId, 'groups');\n            groupLink.add(groupId);\n\n            for (let j = 0; j < POSTS_PER_AUTHOR; j++) {\n                createPost(authorId);\n            }\n        }\n    });\n}\n\nfunction createPost(authorId) {\n    const postId = Posts.insert({\n        title: `Post ${postIds.length}`,\n        createdAt: new Date(),\n    });\n\n    postIds.push(postId);\n\n    const authorLink = Posts.getLink(postId, 'author');\n    authorLink.set(authorId);\n\n    const randomCategoryId = categoryIds[Math.floor(Math.random()*categoryIds.length)];\n\n    const categoriesLink = Posts.getLink(postId, 'categories');\n    categoriesLink.add(randomCategoryId, {\n        createdAt: new Date(),\n    });\n\n    return postId;\n}\n"]},"sourceType":"script","hash":"2938619792de13ffe25eee580d2ccdf1c976cb18"}
