{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n  \"default\": function (v) {\n    prepareForProcess = v;\n  }\n}, 0);\nvar Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n  \"default\": function (v) {\n    Base = v;\n  }\n}, 1);\nvar deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n  \"default\": function (v) {\n    deepClone = v;\n  }\n}, 2);\nvar MemoryResultCacher;\nmodule.watch(require(\"./cache/MemoryResultCacher\"), {\n  \"default\": function (v) {\n    MemoryResultCacher = v;\n  }\n}, 3);\nvar intersectDeep;\nmodule.watch(require(\"../query/lib/intersectDeep\"), {\n  \"default\": function (v) {\n    intersectDeep = v;\n  }\n}, 4);\nmodule.exportDefault(\n/*#__PURE__*/\nfunction (_Base) {\n  (0, _inheritsLoose2.default)(_class, _Base);\n\n  function _class() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = _class.prototype;\n\n  /**\n   * Retrieves the data.\n   * @returns {*}\n   */\n  _proto.fetch = function () {\n    function fetch(context) {\n      this._performSecurityChecks(context, this.params);\n\n      if (this.isResolver) {\n        return this._fetchResolverData(context);\n      } else {\n        body = deepClone(this.body);\n\n        if (this.params.$body) {\n          body = intersectDeep(body, this.params.$body);\n        } // we must apply emobdyment here\n\n\n        this.doEmbodimentIfItApplies(body);\n        var query = this.collection.createQuery(deepClone(body), {\n          params: deepClone(this.params)\n        });\n\n        if (this.cacher) {\n          var cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n          return this.cacher.fetch(cacheId, {\n            query: query\n          });\n        }\n\n        return query.fetch();\n      }\n    }\n\n    return fetch;\n  }();\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  _proto.fetchOne = function () {\n    function fetchOne() {\n      return _.first(this.fetch.apply(this, arguments));\n    }\n\n    return fetchOne;\n  }();\n  /**\n   * Gets the count of matching elements.\n   *\n   * @returns {any}\n   */\n\n\n  _proto.getCount = function () {\n    function getCount(context) {\n      this._performSecurityChecks(context, this.params);\n\n      var countCursor = this.getCursorForCounting();\n\n      if (this.cacher) {\n        var cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          countCursor: countCursor\n        });\n      }\n\n      return countCursor.count();\n    }\n\n    return getCount;\n  }();\n  /**\n   * Returns the cursor for counting\n   * This is most likely used for counts cursor\n   */\n\n\n  _proto.getCursorForCounting = function () {\n    function getCursorForCounting() {\n      var body = deepClone(this.body);\n      this.doEmbodimentIfItApplies(body);\n      body = prepareForProcess(body, this.params);\n      return this.collection.find(body.$filters || {}, {\n        fields: {\n          _id: 1\n        }\n      });\n    }\n\n    return getCursorForCounting;\n  }();\n  /**\n   * @param cacher\n   */\n\n\n  _proto.cacheResults = function () {\n    function cacheResults(cacher) {\n      if (!cacher) {\n        cacher = new MemoryResultCacher();\n      }\n\n      this.cacher = cacher;\n    }\n\n    return cacheResults;\n  }();\n  /**\n   * Configure resolve. This doesn't actually call the resolver, it just sets it\n   * @param fn\n   */\n\n\n  _proto.resolve = function () {\n    function resolve(fn) {\n      if (!this.isResolver) {\n        throw new Meteor.Error('invalid-call', \"You cannot use resolve() on a non resolver NamedQuery\");\n      }\n\n      this.resolver = fn;\n    }\n\n    return resolve;\n  }();\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _proto._fetchResolverData = function () {\n    function _fetchResolverData(context) {\n      var resolver = this.resolver;\n      var self = this;\n      var query = {\n        fetch: function () {\n          return resolver.call(context, self.params);\n        }\n      };\n\n      if (this.cacher) {\n        var cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          query: query\n        });\n      }\n\n      return query.fetch();\n    }\n\n    return _fetchResolverData;\n  }();\n  /**\n   * @param context Meteor method/publish context\n   * @param params\n   *\n   * @private\n   */\n\n\n  _proto._performSecurityChecks = function () {\n    function _performSecurityChecks(context, params) {\n      if (context && this.exposeConfig) {\n        this._callFirewall(context, context.userId, params);\n      }\n\n      this.doValidateParams(params);\n    }\n\n    return _performSecurityChecks;\n  }();\n\n  return _class;\n}(Base));","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js"],"names":["prepareForProcess","module","watch","require","v","Base","deepClone","MemoryResultCacher","intersectDeep","exportDefault","fetch","context","_performSecurityChecks","params","isResolver","_fetchResolverData","body","$body","doEmbodimentIfItApplies","query","collection","createQuery","cacher","cacheId","generateQueryId","queryName","fetchOne","_","first","getCount","countCursor","getCursorForCounting","count","find","$filters","fields","_id","cacheResults","resolve","fn","Meteor","Error","resolver","self","call","exposeConfig","_callFirewall","userId","doValidateParams"],"mappings":"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","sourcesContent":["import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}"]},"sourceType":"script","hash":"264c79f81c96a3c0ed6bed75a6cf4df78fc8181d"}
