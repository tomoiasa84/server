{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/tracker/tracker_tests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/tracker/tracker_tests.js","filename":"/Users/simiontomoiaga/git/server/packages/tracker/tracker_tests.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/tracker/tracker_tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/tracker/tracker_tests.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nTinytest.add('tracker - run', function (test) {\n  var d = new Tracker.Dependency();\n  var x = 0;\n  var handle = Tracker.autorun(function (handle) {\n    d.depend();\n    ++x;\n  });\n  test.equal(x, 1);\n  Tracker.flush();\n  test.equal(x, 1);\n  d.changed();\n  test.equal(x, 1);\n  Tracker.flush();\n  test.equal(x, 2);\n  d.changed();\n  test.equal(x, 2);\n  Tracker.flush();\n  test.equal(x, 3);\n  d.changed(); // Prevent the function from running further.\n\n  handle.stop();\n  Tracker.flush();\n  test.equal(x, 3);\n  d.changed();\n  Tracker.flush();\n  test.equal(x, 3);\n  Tracker.autorun(function (internalHandle) {\n    d.depend();\n    ++x;\n    if (x == 6) internalHandle.stop();\n  });\n  test.equal(x, 4);\n  d.changed();\n  Tracker.flush();\n  test.equal(x, 5);\n  d.changed(); // Increment to 6 and stop.\n\n  Tracker.flush();\n  test.equal(x, 6);\n  d.changed();\n  Tracker.flush(); // Still 6!\n\n  test.equal(x, 6);\n  test.throws(function () {\n    Tracker.autorun();\n  });\n  test.throws(function () {\n    Tracker.autorun({});\n  });\n});\nTinytest.add(\"tracker - nested run\", function (test) {\n  var a = new Tracker.Dependency();\n  var b = new Tracker.Dependency();\n  var c = new Tracker.Dependency();\n  var d = new Tracker.Dependency();\n  var e = new Tracker.Dependency();\n  var f = new Tracker.Dependency();\n  var buf = \"\";\n  var c1 = Tracker.autorun(function () {\n    a.depend();\n    buf += 'a';\n    Tracker.autorun(function () {\n      b.depend();\n      buf += 'b';\n      Tracker.autorun(function () {\n        c.depend();\n        buf += 'c';\n        var c2 = Tracker.autorun(function () {\n          d.depend();\n          buf += 'd';\n          Tracker.autorun(function () {\n            e.depend();\n            buf += 'e';\n            Tracker.autorun(function () {\n              f.depend();\n              buf += 'f';\n            });\n          });\n          Tracker.onInvalidate(function () {\n            // only run once\n            c2.stop();\n          });\n        });\n      });\n    });\n    Tracker.onInvalidate(function (c1) {\n      c1.stop();\n    });\n  });\n\n  var expect = function (str) {\n    test.equal(buf, str);\n    buf = \"\";\n  };\n\n  expect('abcdef');\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isTrue(d.hasDependents());\n  test.isTrue(e.hasDependents());\n  test.isTrue(f.hasDependents());\n  b.changed();\n  expect(''); // didn't flush yet\n\n  Tracker.flush();\n  expect('bcdef');\n  c.changed();\n  Tracker.flush();\n  expect('cdef');\n\n  var changeAndExpect = function (v, str) {\n    v.changed();\n    Tracker.flush();\n    expect(str);\n  }; // should cause running\n\n\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f'); // invalidate inner context\n\n  changeAndExpect(d, ''); // no more running!\n\n  changeAndExpect(e, '');\n  changeAndExpect(f, '');\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isFalse(d.hasDependents());\n  test.isFalse(e.hasDependents());\n  test.isFalse(f.hasDependents()); // rerun C\n\n  changeAndExpect(c, 'cdef');\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f'); // rerun B\n\n  changeAndExpect(b, 'bcdef');\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f');\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isTrue(d.hasDependents());\n  test.isTrue(e.hasDependents());\n  test.isTrue(f.hasDependents()); // kill A\n\n  a.changed();\n  changeAndExpect(f, '');\n  changeAndExpect(e, '');\n  changeAndExpect(d, '');\n  changeAndExpect(c, '');\n  changeAndExpect(b, '');\n  changeAndExpect(a, '');\n  test.isFalse(a.hasDependents());\n  test.isFalse(b.hasDependents());\n  test.isFalse(c.hasDependents());\n  test.isFalse(d.hasDependents());\n  test.isFalse(e.hasDependents());\n  test.isFalse(f.hasDependents());\n});\nTinytest.add(\"tracker - flush\", function (test) {\n  var buf = \"\";\n  var c1 = Tracker.autorun(function (c) {\n    buf += 'a'; // invalidate first time\n\n    if (c.firstRun) c.invalidate();\n  });\n  test.equal(buf, 'a');\n  Tracker.flush();\n  test.equal(buf, 'aa');\n  Tracker.flush();\n  test.equal(buf, 'aa');\n  c1.stop();\n  Tracker.flush();\n  test.equal(buf, 'aa'); //////\n\n  buf = \"\";\n  var c2 = Tracker.autorun(function (c) {\n    buf += 'a'; // invalidate first time\n\n    if (c.firstRun) c.invalidate();\n    Tracker.onInvalidate(function () {\n      buf += \"*\";\n    });\n  });\n  test.equal(buf, 'a*');\n  Tracker.flush();\n  test.equal(buf, 'a*a');\n  c2.stop();\n  test.equal(buf, 'a*a*');\n  Tracker.flush();\n  test.equal(buf, 'a*a*'); /////\n  // Can flush a different run from a run;\n  // no current computation in afterFlush\n\n  buf = \"\";\n  var c3 = Tracker.autorun(function (c) {\n    buf += 'a'; // invalidate first time\n\n    if (c.firstRun) c.invalidate();\n    Tracker.afterFlush(function () {\n      buf += Tracker.active ? \"1\" : \"0\";\n    });\n  });\n  Tracker.afterFlush(function () {\n    buf += 'c';\n  });\n  var c4 = Tracker.autorun(function (c) {\n    c4 = c;\n    buf += 'b';\n  });\n  Tracker.flush();\n  test.equal(buf, 'aba0c0');\n  c3.stop();\n  c4.stop();\n  Tracker.flush(); // cases where flush throws\n\n  var ran = false;\n  Tracker.afterFlush(function (arg) {\n    ran = true;\n    test.equal((0, _typeof2.default)(arg), 'undefined');\n    test.throws(function () {\n      Tracker.flush(); // illegal nested flush\n    });\n  });\n  Tracker.flush();\n  test.isTrue(ran);\n  test.throws(function () {\n    Tracker.autorun(function () {\n      Tracker.flush(); // illegal to flush from a computation\n    });\n  });\n  test.throws(function () {\n    Tracker.autorun(function () {\n      Tracker.autorun(function () {});\n      Tracker.flush();\n    });\n  });\n});\nTinytest.add(\"tracker - lifecycle\", function (test) {\n  test.isFalse(Tracker.active);\n  test.equal(null, Tracker.currentComputation);\n  var runCount = 0;\n  var firstRun = true;\n  var buf = [];\n  var cbId = 1;\n\n  var makeCb = function () {\n    var id = cbId++;\n    return function () {\n      buf.push(id);\n    };\n  };\n\n  var shouldStop = false;\n  var c1 = Tracker.autorun(function (c) {\n    test.isTrue(Tracker.active);\n    test.equal(c, Tracker.currentComputation);\n    test.equal(c.stopped, false);\n    test.equal(c.invalidated, false);\n    test.equal(c.firstRun, firstRun);\n    Tracker.onInvalidate(makeCb()); // 1, 6, ...\n\n    Tracker.afterFlush(makeCb()); // 2, 7, ...\n\n    Tracker.autorun(function (x) {\n      x.stop();\n      c.onInvalidate(makeCb()); // 3, 8, ...\n\n      Tracker.onInvalidate(makeCb()); // 4, 9, ...\n\n      Tracker.afterFlush(makeCb()); // 5, 10, ...\n    });\n    runCount++;\n    if (shouldStop) c.stop();\n  });\n  firstRun = false;\n  test.equal(runCount, 1);\n  test.equal(buf, [4]);\n  c1.invalidate();\n  test.equal(runCount, 1);\n  test.equal(c1.invalidated, true);\n  test.equal(c1.stopped, false);\n  test.equal(buf, [4, 1, 3]);\n  Tracker.flush();\n  test.equal(runCount, 2);\n  test.equal(c1.invalidated, false);\n  test.equal(buf, [4, 1, 3, 9, 2, 5, 7, 10]); // test self-stop\n\n  buf.length = 0;\n  shouldStop = true;\n  c1.invalidate();\n  test.equal(buf, [6, 8]);\n  Tracker.flush();\n  test.equal(buf, [6, 8, 14, 11, 13, 12, 15]);\n});\nTinytest.add(\"tracker - onInvalidate\", function (test) {\n  var buf = \"\";\n  var c1 = Tracker.autorun(function () {\n    buf += \"*\";\n  });\n\n  var append = function (x, expectedComputation) {\n    return function (givenComputation) {\n      test.isFalse(Tracker.active);\n      test.equal(givenComputation, expectedComputation || c1);\n      buf += x;\n    };\n  };\n\n  c1.onStop(append('s'));\n  c1.onInvalidate(append('a'));\n  c1.onInvalidate(append('b'));\n  test.equal(buf, '*');\n  Tracker.autorun(function (me) {\n    Tracker.onInvalidate(append('z', me));\n    me.stop();\n    test.equal(buf, '*z');\n    c1.invalidate();\n  });\n  test.equal(buf, '*zab');\n  c1.onInvalidate(append('c'));\n  c1.onInvalidate(append('d'));\n  test.equal(buf, '*zabcd');\n  Tracker.flush();\n  test.equal(buf, '*zabcd*'); // afterFlush ordering\n\n  buf = '';\n  c1.onInvalidate(append('a'));\n  c1.onInvalidate(append('b'));\n  Tracker.afterFlush(function () {\n    append('x')(c1);\n    c1.onInvalidate(append('c'));\n    c1.invalidate();\n    Tracker.afterFlush(function () {\n      append('y')(c1);\n      c1.onInvalidate(append('d'));\n      c1.invalidate();\n    });\n  });\n  Tracker.afterFlush(function () {\n    append('z')(c1);\n    c1.onInvalidate(append('e'));\n    c1.invalidate();\n  });\n  test.equal(buf, '');\n  Tracker.flush();\n  test.equal(buf, 'xabc*ze*yd*');\n  buf = \"\";\n  c1.onInvalidate(append('m'));\n  Tracker.flush();\n  test.equal(buf, '');\n  c1.stop();\n  test.equal(buf, 'ms'); // s is from onStop\n\n  Tracker.flush();\n  test.equal(buf, 'ms');\n  c1.onStop(append('S'));\n  test.equal(buf, 'msS');\n});\nTinytest.add('tracker - invalidate at flush time', function (test) {\n  // Test this sentence of the docs: Functions are guaranteed to be\n  // called at a time when there are no invalidated computations that\n  // need rerunning.\n  var buf = [];\n  Tracker.afterFlush(function () {\n    buf.push('C');\n  }); // When c1 is invalidated, it invalidates c2, then stops.\n\n  var c1 = Tracker.autorun(function (c) {\n    if (!c.firstRun) {\n      buf.push('A');\n      c2.invalidate();\n      c.stop();\n    }\n  });\n  var c2 = Tracker.autorun(function (c) {\n    if (!c.firstRun) {\n      buf.push('B');\n      c.stop();\n    }\n  }); // Invalidate c1.  If all goes well, the re-running of\n  // c2 should happen before the afterFlush.\n\n  c1.invalidate();\n  Tracker.flush();\n  test.equal(buf.join(''), 'ABC');\n});\nTinytest.add('tracker - throwFirstError', function (test) {\n  var d = new Tracker.Dependency();\n  Tracker.autorun(function (c) {\n    d.depend();\n    if (!c.firstRun) throw new Error(\"foo\");\n  });\n  d.changed(); // doesn't throw; logs instead.\n\n  Meteor._suppress_log(1);\n\n  Tracker.flush();\n  d.changed();\n  test.throws(function () {\n    Tracker.flush({\n      _throwFirstError: true\n    });\n  }, /foo/);\n});\nTinytest.addAsync('tracker - no infinite recomputation', function (test, onComplete) {\n  var reran = false;\n  var c = Tracker.autorun(function (c) {\n    if (!c.firstRun) reran = true;\n    c.invalidate();\n  });\n  test.isFalse(reran);\n  Meteor.setTimeout(function () {\n    c.stop();\n    Tracker.afterFlush(function () {\n      test.isTrue(reran);\n      test.isTrue(c.stopped);\n      onComplete();\n    });\n  }, 100);\n});\nTinytest.add('tracker - Tracker.flush finishes', function (test) {\n  // Currently, _runFlush will \"yield\" every 1000 computations... unless run in\n  // Tracker.flush. So this test validates that Tracker.flush is capable of\n  // running 2000 computations. Which isn't quite the same as infinity, but it's\n  // getting there.\n  var n = 0;\n  var c = Tracker.autorun(function (c) {\n    if (++n < 2000) {\n      c.invalidate();\n    }\n  });\n  test.equal(n, 1);\n  Tracker.flush();\n  test.equal(n, 2000);\n});\ntestAsyncMulti('tracker - Tracker.autorun, onError option', [function (test, expect) {\n  var d = new Tracker.Dependency();\n  var c = Tracker.autorun(function (c) {\n    d.depend();\n    if (!c.firstRun) throw new Error(\"foo\");\n  }, {\n    onError: expect(function (err) {\n      test.equal(err.message, \"foo\");\n    })\n  });\n  d.changed();\n  Tracker.flush();\n}]);\nTinytest.add('computation - #flush', function (test) {\n  var i = 0,\n      j = 0,\n      d = new Tracker.Dependency();\n  var c1 = Tracker.autorun(function () {\n    d.depend();\n    i = i + 1;\n  });\n  var c2 = Tracker.autorun(function () {\n    d.depend();\n    j = j + 1;\n  });\n  test.equal(i, 1);\n  test.equal(j, 1);\n  d.changed();\n  c1.flush();\n  test.equal(i, 2);\n  test.equal(j, 1);\n  Tracker.flush();\n  test.equal(i, 2);\n  test.equal(j, 2);\n});\nTinytest.add('computation - #run', function (test) {\n  var i = 0,\n      d = new Tracker.Dependency(),\n      d2 = new Tracker.Dependency();\n  var computation = Tracker.autorun(function (c) {\n    d.depend();\n    i = i + 1; //when #run() is called, this dependency should be picked up\n\n    if (i >= 2 && i < 4) {\n      d2.depend();\n    }\n  });\n  test.equal(i, 1);\n  computation.run();\n  test.equal(i, 2);\n  d.changed();\n  Tracker.flush();\n  test.equal(i, 3); //we expect to depend on d2 at this point\n\n  d2.changed();\n  Tracker.flush();\n  test.equal(i, 4); //we no longer depend on d2, only d\n\n  d2.changed();\n  Tracker.flush();\n  test.equal(i, 4);\n  d.changed();\n  Tracker.flush();\n  test.equal(i, 5);\n});","map":{"version":3,"sources":["packages/tracker/tracker_tests.js"],"names":["Tinytest","add","test","d","Tracker","Dependency","x","handle","autorun","depend","equal","flush","changed","stop","internalHandle","throws","a","b","c","e","f","buf","c1","c2","onInvalidate","expect","str","isTrue","hasDependents","changeAndExpect","v","isFalse","firstRun","invalidate","c3","afterFlush","active","c4","ran","arg","currentComputation","runCount","cbId","makeCb","id","push","shouldStop","stopped","invalidated","length","append","expectedComputation","givenComputation","onStop","me","join","Error","Meteor","_suppress_log","_throwFirstError","addAsync","onComplete","reran","setTimeout","n","testAsyncMulti","onError","err","message","i","j","d2","computation","run"],"mappings":"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","sourcesContent":["Tinytest.add('tracker - run', function (test) {\n  var d = new Tracker.Dependency;\n  var x = 0;\n  var handle = Tracker.autorun(function (handle) {\n    d.depend();\n    ++x;\n  });\n  test.equal(x, 1);\n  Tracker.flush();\n  test.equal(x, 1);\n  d.changed();\n  test.equal(x, 1);\n  Tracker.flush();\n  test.equal(x, 2);\n  d.changed();\n  test.equal(x, 2);\n  Tracker.flush();\n  test.equal(x, 3);\n  d.changed();\n  // Prevent the function from running further.\n  handle.stop();\n  Tracker.flush();\n  test.equal(x, 3);\n  d.changed();\n  Tracker.flush();\n  test.equal(x, 3);\n\n  Tracker.autorun(function (internalHandle) {\n    d.depend();\n    ++x;\n    if (x == 6)\n      internalHandle.stop();\n  });\n  test.equal(x, 4);\n  d.changed();\n  Tracker.flush();\n  test.equal(x, 5);\n  d.changed();\n  // Increment to 6 and stop.\n  Tracker.flush();\n  test.equal(x, 6);\n  d.changed();\n  Tracker.flush();\n  // Still 6!\n  test.equal(x, 6);\n\n  test.throws(function () {\n    Tracker.autorun();\n  });\n  test.throws(function () {\n    Tracker.autorun({});\n  });\n});\n\nTinytest.add(\"tracker - nested run\", function (test) {\n  var a = new Tracker.Dependency;\n  var b = new Tracker.Dependency;\n  var c = new Tracker.Dependency;\n  var d = new Tracker.Dependency;\n  var e = new Tracker.Dependency;\n  var f = new Tracker.Dependency;\n\n  var buf = \"\";\n\n  var c1 = Tracker.autorun(function () {\n    a.depend();\n    buf += 'a';\n    Tracker.autorun(function () {\n      b.depend();\n      buf += 'b';\n      Tracker.autorun(function () {\n        c.depend();\n        buf += 'c';\n        var c2 = Tracker.autorun(function () {\n          d.depend();\n          buf += 'd';\n          Tracker.autorun(function () {\n            e.depend();\n            buf += 'e';\n            Tracker.autorun(function () {\n              f.depend();\n              buf += 'f';\n            });\n          });\n          Tracker.onInvalidate(function () {\n            // only run once\n            c2.stop();\n          });\n        });\n      });\n    });\n    Tracker.onInvalidate(function (c1) {\n      c1.stop();\n    });\n  });\n\n  var expect = function (str) {\n    test.equal(buf, str);\n    buf = \"\";\n  };\n\n  expect('abcdef');\n\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isTrue(d.hasDependents());\n  test.isTrue(e.hasDependents());\n  test.isTrue(f.hasDependents());\n\n  b.changed();\n  expect(''); // didn't flush yet\n  Tracker.flush();\n  expect('bcdef');\n\n  c.changed();\n  Tracker.flush();\n  expect('cdef');\n\n  var changeAndExpect = function (v, str) {\n    v.changed();\n    Tracker.flush();\n    expect(str);\n  };\n\n  // should cause running\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f');\n  // invalidate inner context\n  changeAndExpect(d, '');\n  // no more running!\n  changeAndExpect(e, '');\n  changeAndExpect(f, '');\n\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isFalse(d.hasDependents());\n  test.isFalse(e.hasDependents());\n  test.isFalse(f.hasDependents());\n\n  // rerun C\n  changeAndExpect(c, 'cdef');\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f');\n  // rerun B\n  changeAndExpect(b, 'bcdef');\n  changeAndExpect(e, 'ef');\n  changeAndExpect(f, 'f');\n\n  test.isTrue(a.hasDependents());\n  test.isTrue(b.hasDependents());\n  test.isTrue(c.hasDependents());\n  test.isTrue(d.hasDependents());\n  test.isTrue(e.hasDependents());\n  test.isTrue(f.hasDependents());\n\n  // kill A\n  a.changed();\n  changeAndExpect(f, '');\n  changeAndExpect(e, '');\n  changeAndExpect(d, '');\n  changeAndExpect(c, '');\n  changeAndExpect(b, '');\n  changeAndExpect(a, '');\n\n  test.isFalse(a.hasDependents());\n  test.isFalse(b.hasDependents());\n  test.isFalse(c.hasDependents());\n  test.isFalse(d.hasDependents());\n  test.isFalse(e.hasDependents());\n  test.isFalse(f.hasDependents());\n});\n\nTinytest.add(\"tracker - flush\", function (test) {\n\n  var buf = \"\";\n\n  var c1 = Tracker.autorun(function (c) {\n    buf += 'a';\n    // invalidate first time\n    if (c.firstRun)\n      c.invalidate();\n  });\n\n  test.equal(buf, 'a');\n  Tracker.flush();\n  test.equal(buf, 'aa');\n  Tracker.flush();\n  test.equal(buf, 'aa');\n  c1.stop();\n  Tracker.flush();\n  test.equal(buf, 'aa');\n\n  //////\n\n  buf = \"\";\n\n  var c2 = Tracker.autorun(function (c) {\n    buf += 'a';\n    // invalidate first time\n    if (c.firstRun)\n      c.invalidate();\n\n    Tracker.onInvalidate(function () {\n      buf += \"*\";\n    });\n  });\n\n  test.equal(buf, 'a*');\n  Tracker.flush();\n  test.equal(buf, 'a*a');\n  c2.stop();\n  test.equal(buf, 'a*a*');\n  Tracker.flush();\n  test.equal(buf, 'a*a*');\n\n  /////\n  // Can flush a different run from a run;\n  // no current computation in afterFlush\n\n  buf = \"\";\n\n  var c3 = Tracker.autorun(function (c) {\n    buf += 'a';\n    // invalidate first time\n    if (c.firstRun)\n      c.invalidate();\n    Tracker.afterFlush(function () {\n      buf += (Tracker.active ? \"1\" : \"0\");\n    });\n  });\n\n  Tracker.afterFlush(function () {\n    buf += 'c';\n  });\n\n  var c4 = Tracker.autorun(function (c) {\n    c4 = c;\n    buf += 'b';\n  });\n\n  Tracker.flush();\n  test.equal(buf, 'aba0c0');\n  c3.stop();\n  c4.stop();\n  Tracker.flush();\n\n  // cases where flush throws\n\n  var ran = false;\n  Tracker.afterFlush(function (arg) {\n    ran = true;\n    test.equal(typeof arg, 'undefined');\n    test.throws(function () {\n      Tracker.flush(); // illegal nested flush\n    });\n  });\n\n  Tracker.flush();\n  test.isTrue(ran);\n\n  test.throws(function () {\n    Tracker.autorun(function () {\n      Tracker.flush(); // illegal to flush from a computation\n    });\n  });\n\n  test.throws(function () {\n    Tracker.autorun(function () {\n      Tracker.autorun(function () {});\n      Tracker.flush();\n    });\n  });\n});\n\nTinytest.add(\"tracker - lifecycle\", function (test) {\n\n  test.isFalse(Tracker.active);\n  test.equal(null, Tracker.currentComputation);\n\n  var runCount = 0;\n  var firstRun = true;\n  var buf = [];\n  var cbId = 1;\n  var makeCb = function () {\n    var id = cbId++;\n    return function () {\n      buf.push(id);\n    };\n  };\n\n  var shouldStop = false;\n\n  var c1 = Tracker.autorun(function (c) {\n    test.isTrue(Tracker.active);\n    test.equal(c, Tracker.currentComputation);\n    test.equal(c.stopped, false);\n    test.equal(c.invalidated, false);\n      test.equal(c.firstRun, firstRun);\n\n    Tracker.onInvalidate(makeCb()); // 1, 6, ...\n    Tracker.afterFlush(makeCb()); // 2, 7, ...\n\n    Tracker.autorun(function (x) {\n      x.stop();\n      c.onInvalidate(makeCb()); // 3, 8, ...\n\n      Tracker.onInvalidate(makeCb()); // 4, 9, ...\n      Tracker.afterFlush(makeCb()); // 5, 10, ...\n    });\n    runCount++;\n\n    if (shouldStop)\n      c.stop();\n  });\n\n  firstRun = false;\n\n  test.equal(runCount, 1);\n\n  test.equal(buf, [4]);\n  c1.invalidate();\n  test.equal(runCount, 1);\n  test.equal(c1.invalidated, true);\n  test.equal(c1.stopped, false);\n  test.equal(buf, [4, 1, 3]);\n\n  Tracker.flush();\n\n  test.equal(runCount, 2);\n  test.equal(c1.invalidated, false);\n  test.equal(buf, [4, 1, 3, 9, 2, 5, 7, 10]);\n\n  // test self-stop\n  buf.length = 0;\n  shouldStop = true;\n  c1.invalidate();\n  test.equal(buf, [6, 8]);\n  Tracker.flush();\n  test.equal(buf, [6, 8, 14, 11, 13, 12, 15]);\n\n});\n\nTinytest.add(\"tracker - onInvalidate\", function (test) {\n  var buf = \"\";\n\n  var c1 = Tracker.autorun(function () {\n    buf += \"*\";\n  });\n\n  var append = function (x, expectedComputation) {\n    return function (givenComputation) {\n      test.isFalse(Tracker.active);\n      test.equal(givenComputation, expectedComputation || c1);\n      buf += x;\n    };\n  };\n\n  c1.onStop(append('s'));\n\n  c1.onInvalidate(append('a'));\n  c1.onInvalidate(append('b'));\n  test.equal(buf, '*');\n  Tracker.autorun(function (me) {\n    Tracker.onInvalidate(append('z', me));\n    me.stop();\n    test.equal(buf, '*z');\n    c1.invalidate();\n  });\n  test.equal(buf, '*zab');\n  c1.onInvalidate(append('c'));\n  c1.onInvalidate(append('d'));\n  test.equal(buf, '*zabcd');\n  Tracker.flush();\n  test.equal(buf, '*zabcd*');\n\n  // afterFlush ordering\n  buf = '';\n  c1.onInvalidate(append('a'));\n  c1.onInvalidate(append('b'));\n  Tracker.afterFlush(function () {\n    append('x')(c1);\n    c1.onInvalidate(append('c'));\n    c1.invalidate();\n    Tracker.afterFlush(function () {\n      append('y')(c1);\n      c1.onInvalidate(append('d'));\n      c1.invalidate();\n    });\n  });\n  Tracker.afterFlush(function () {\n    append('z')(c1);\n    c1.onInvalidate(append('e'));\n    c1.invalidate();\n  });\n\n  test.equal(buf, '');\n  Tracker.flush();\n  test.equal(buf, 'xabc*ze*yd*');\n\n  buf = \"\";\n  c1.onInvalidate(append('m'));\n  Tracker.flush();\n  test.equal(buf, '');\n  c1.stop();\n  test.equal(buf, 'ms');  // s is from onStop\n  Tracker.flush();\n  test.equal(buf, 'ms');\n  c1.onStop(append('S'));\n  test.equal(buf, 'msS');\n});\n\nTinytest.add('tracker - invalidate at flush time', function (test) {\n  // Test this sentence of the docs: Functions are guaranteed to be\n  // called at a time when there are no invalidated computations that\n  // need rerunning.\n\n  var buf = [];\n\n  Tracker.afterFlush(function () {\n    buf.push('C');\n  });\n\n  // When c1 is invalidated, it invalidates c2, then stops.\n  var c1 = Tracker.autorun(function (c) {\n    if (! c.firstRun) {\n      buf.push('A');\n      c2.invalidate();\n      c.stop();\n    }\n  });\n\n  var c2 = Tracker.autorun(function (c) {\n    if (! c.firstRun) {\n      buf.push('B');\n      c.stop();\n    }\n  });\n\n  // Invalidate c1.  If all goes well, the re-running of\n  // c2 should happen before the afterFlush.\n  c1.invalidate();\n  Tracker.flush();\n\n  test.equal(buf.join(''), 'ABC');\n\n});\n\nTinytest.add('tracker - throwFirstError', function (test) {\n  var d = new Tracker.Dependency;\n  Tracker.autorun(function (c) {\n    d.depend();\n\n    if (!c.firstRun)\n      throw new Error(\"foo\");\n  });\n\n  d.changed();\n  // doesn't throw; logs instead.\n  Meteor._suppress_log(1);\n  Tracker.flush();\n\n  d.changed();\n  test.throws(function () {\n    Tracker.flush({_throwFirstError: true});\n  }, /foo/);\n});\n\nTinytest.addAsync('tracker - no infinite recomputation', function (test, onComplete) {\n  var reran = false;\n  var c = Tracker.autorun(function (c) {\n    if (! c.firstRun)\n      reran = true;\n    c.invalidate();\n  });\n  test.isFalse(reran);\n  Meteor.setTimeout(function () {\n    c.stop();\n    Tracker.afterFlush(function () {\n      test.isTrue(reran);\n      test.isTrue(c.stopped);\n      onComplete();\n    });\n  }, 100);\n});\n\nTinytest.add('tracker - Tracker.flush finishes', function (test) {\n  // Currently, _runFlush will \"yield\" every 1000 computations... unless run in\n  // Tracker.flush. So this test validates that Tracker.flush is capable of\n  // running 2000 computations. Which isn't quite the same as infinity, but it's\n  // getting there.\n  var n = 0;\n  var c = Tracker.autorun(function (c) {\n    if (++n < 2000) {\n      c.invalidate();\n    }\n  });\n  test.equal(n, 1);\n  Tracker.flush();\n  test.equal(n, 2000);\n});\n\ntestAsyncMulti('tracker - Tracker.autorun, onError option', [function (test, expect) {\n  var d = new Tracker.Dependency;\n  var c = Tracker.autorun(function (c) {\n    d.depend();\n\n    if (! c.firstRun)\n      throw new Error(\"foo\");\n  }, {\n    onError: expect(function (err) {\n      test.equal(err.message, \"foo\");\n    })\n  });\n\n  d.changed();\n  Tracker.flush();\n}]);\n\nTinytest.add('computation - #flush', function (test) {\n  var i = 0, j = 0, d = new Tracker.Dependency;\n  var c1 = Tracker.autorun(function () {\n    d.depend();\n    i = i + 1;\n  });\n  var c2 = Tracker.autorun(function () {\n    d.depend();\n    j = j + 1;\n  });\n  test.equal(i,1);\n  test.equal(j,1);\n\n  d.changed();\n  c1.flush();\n  test.equal(i, 2);\n  test.equal(j, 1);\n\n  Tracker.flush();\n  test.equal(i, 2);\n  test.equal(j, 2);\n});\n\nTinytest.add('computation - #run', function (test) {\n  var i = 0, d = new Tracker.Dependency, d2 = new Tracker.Dependency;\n  var computation = Tracker.autorun(function (c) {\n    d.depend();\n    i = i + 1;\n    //when #run() is called, this dependency should be picked up\n    if (i>=2 && i<4) { d2.depend(); }\n  });\n  test.equal(i,1);\n  computation.run();\n  test.equal(i,2);\n\n  d.changed(); Tracker.flush();\n  test.equal(i,3);\n\n  //we expect to depend on d2 at this point\n  d2.changed(); Tracker.flush();\n  test.equal(i,4);\n\n  //we no longer depend on d2, only d\n  d2.changed(); Tracker.flush();\n  test.equal(i,4);\n  d.changed(); Tracker.flush();\n  test.equal(i,5);\n});\n"]},"sourceType":"script","hash":"d4488b95ed14f5960e58bbb466bcd910912d73d3"}
