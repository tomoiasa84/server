{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"}},"code":"module.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root, results) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    let childResults;\n\n    if (node.isOneResult) {\n      childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n    } else {\n      childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n    }\n\n    cleanReducerLeftovers(node, childResults);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.filter(result => !!result[fieldName]).map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"],"names":["module","export","default","cleanReducerLeftovers","dot","link","v","root","results","_","each","collectionNodes","node","scheduledForDeletion","forEach","result","linkName","childResults","isOneResult","map","filter","element","flatten","fieldNodes","cleanNestedFields","name","split","reducerNodes","parts","snapCacheField","snapCaches","fieldName","length","isObject","shift","keys"],"mappings":"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","sourcesContent":["import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root, results) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        let childResults;\n        if (node.isOneResult) {\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n        } else {\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n        }\n\n        cleanReducerLeftovers(node, childResults);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(\n        parts, \n        results\n            .filter(result => !!result[fieldName])\n            .map(result => result[fieldName]),\n        root\n    );\n    \n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n"]},"sourceType":"script","hash":"a605ce6e1410468bdf39f921f4f86b0983c1c90e"}
