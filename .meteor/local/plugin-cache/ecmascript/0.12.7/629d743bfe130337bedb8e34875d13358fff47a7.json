{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.server.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.server.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.server.js"}},"code":"module.export({\n  default: () => Query\n});\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 1);\nlet hypernova;\nmodule.link(\"./hypernova/hypernova.js\", {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 2);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 3);\n\nclass Query extends Base {\n  /**\n   * Retrieves the data.\n   * @param context\n   * @returns {*}\n   */\n  fetch() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n    return hypernova(node, context.userId, {\n      params: this.params\n    });\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne() {\n    return _.first(this.fetch(...arguments));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @returns {integer}\n   */\n\n\n  getCount() {\n    return this.collection.find(this.body.$filters || {}, {}).count();\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.server.js"],"names":["module","export","default","Query","createGraph","link","v","prepareForProcess","hypernova","Base","fetch","context","node","collection","body","params","userId","fetchOne","_","first","getCount","find","$filters","count"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAAmC,IAAIC,WAAJ;AAAgBJ,MAAM,CAACK,IAAP,CAAY,sBAAZ,EAAmC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,WAAW,GAACE,CAAZ;AAAc;;AAA1B,CAAnC,EAA+D,CAA/D;AAAkE,IAAIC,iBAAJ;AAAsBP,MAAM,CAACK,IAAP,CAAY,4BAAZ,EAAyC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACC,IAAAA,iBAAiB,GAACD,CAAlB;AAAoB;;AAAhC,CAAzC,EAA2E,CAA3E;AAA8E,IAAIE,SAAJ;AAAcR,MAAM,CAACK,IAAP,CAAY,0BAAZ,EAAuC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACE,IAAAA,SAAS,GAACF,CAAV;AAAY;;AAAxB,CAAvC,EAAiE,CAAjE;AAAoE,IAAIG,IAAJ;AAAST,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACG,IAAAA,IAAI,GAACH,CAAL;AAAO;;AAAnB,CAA3B,EAAgD,CAAhD;;AAKrS,MAAMH,KAAN,SAAoBM,IAApB,CAAyB;AACpC;;;;;AAKAC,EAAAA,KAAK,GAAe;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAChB,UAAMC,IAAI,GAAGR,WAAW,CACpB,KAAKS,UADe,EAEpBN,iBAAiB,CAAC,KAAKO,IAAN,EAAY,KAAKC,MAAjB,CAFG,CAAxB;AAKA,WAAOP,SAAS,CAACI,IAAD,EAAOD,OAAO,CAACK,MAAf,EAAuB;AAACD,MAAAA,MAAM,EAAE,KAAKA;AAAd,KAAvB,CAAhB;AACH;AAED;;;;;;AAIAE,EAAAA,QAAQ,GAAU;AACd,WAAOC,CAAC,CAACC,KAAF,CAAQ,KAAKT,KAAL,CAAW,YAAX,CAAR,CAAP;AACH;AAED;;;;;;AAIAU,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKP,UAAL,CAAgBQ,IAAhB,CAAqB,KAAKP,IAAL,CAAUQ,QAAV,IAAsB,EAA3C,EAA+C,EAA/C,EAAmDC,KAAnD,EAAP;AACH;;AA7BmC","sourcesContent":["import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}"]},"sourceType":"script","hash":"629d743bfe130337bedb8e34875d13358fff47a7"}
