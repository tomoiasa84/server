{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js"}},"code":"module.export({\n  \"default\": function () {\n    return addReducers;\n  },\n  handleAddElement: function () {\n    return handleAddElement;\n  },\n  handleAddReducer: function () {\n    return handleAddReducer;\n  },\n  handleAddLink: function () {\n    return handleAddLink;\n  },\n  handleAddField: function () {\n    return handleAddField;\n  }\n});\nvar dot;\nmodule.link(\"dot-object\", {\n  \"default\": function (v) {\n    dot = v;\n  }\n}, 0);\nvar createNodes;\nmodule.link(\"../../lib/createGraph\", {\n  createNodes: function (v) {\n    createNodes = v;\n  }\n}, 1);\nvar CollectionNode;\nmodule.link(\"../../nodes/collectionNode\", {\n  \"default\": function (v) {\n    CollectionNode = v;\n  }\n}, 2);\nvar FieldNode;\nmodule.link(\"../../nodes/fieldNode\", {\n  \"default\": function (v) {\n    FieldNode = v;\n  }\n}, 3);\nvar ReducerNode;\nmodule.link(\"../../nodes/reducerNode\", {\n  \"default\": function (v) {\n    ReducerNode = v;\n  }\n}, 4);\nvar embedReducerWithLink;\nmodule.link(\"./embedReducerWithLink\", {\n  \"default\": function (v) {\n    embedReducerWithLink = v;\n  }\n}, 5);\nvar specialFields;\nmodule.link(\"../../lib/createGraph\", {\n  specialFields: function (v) {\n    specialFields = v;\n  }\n}, 6);\n\nfunction addReducers(root) {\n  // we add reducers last, after we have added all the fields.\n  root.reducerNodes.forEach(function (reducer) {\n    _.each(reducer.body, function (body, fieldName) {\n      handleAddElement(reducer, root, fieldName, body);\n    });\n  });\n}\n\nfunction handleAddElement(reducerNode, root, fieldName, body) {\n  // if it's a link\n  var collection = root.collection;\n  var linker = collection.getLinker(fieldName);\n\n  if (linker) {\n    return handleAddLink(reducerNode, fieldName, body, root, linker);\n  }\n\n  var reducer = collection.getReducer(fieldName);\n\n  if (reducer) {\n    reducerNode.dependencies.push(fieldName);\n    return handleAddReducer(fieldName, reducer, root);\n  } // we assume it's a field in this case\n\n\n  return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, _ref, root) {\n  var body = _ref.body,\n      reduce = _ref.reduce;\n\n  if (!root.hasReducerNode(fieldName)) {\n    var childReducerNode = new ReducerNode(fieldName, {\n      body: body,\n      reduce: reduce\n    });\n    root.add(childReducerNode);\n    childReducerNode.scheduledForDeletion = true;\n\n    _.each(childReducerNode.body, function (body, fieldName) {\n      handleAddElement(childReducerNode, root, fieldName, body);\n    });\n  }\n}\n\nfunction handleAddLink(reducerNode, fieldName, body, parent, linker) {\n  if (parent.hasCollectionNode(fieldName)) {\n    var collectionNode = parent.getCollectionNode(fieldName);\n    embedReducerWithLink(reducerNode, body, collectionNode);\n  } else {\n    // add\n    var _collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n\n    _collectionNode.scheduledForDeletion = true;\n    parent.add(_collectionNode, linker);\n    createNodes(_collectionNode);\n  }\n}\n\nfunction handleAddField(fieldName, body, root) {\n  if (_.contains(specialFields, fieldName)) {\n    root.addProp(fieldName, body);\n    return;\n  }\n\n  if (_.isObject(body)) {\n    var _dot$dot;\n\n    // if reducer specifies a nested field\n    // if it's a prop\n    var dots = dot.dot((_dot$dot = {}, _dot$dot[fieldName] = body, _dot$dot));\n\n    _.each(dots, function (value, key) {\n      addFieldIfRequired(root, key, value);\n    });\n  } else {\n    // if reducer does not specify a nested field, and the field does not exist.\n    addFieldIfRequired(root, fieldName, body);\n  }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n  if (!root.hasField(fieldName, true)) {\n    /**\n     * Check if there are any nested fields for this field.\n     * Adding root field here and scheduling for deletion would not work if there is already nested field, \n     * for example:\n     * when trying to add meta: 1, it should be checked that there are no meta.* fields\n     * */\n    var nestedFields = root.fieldNodes.filter(function (_ref2) {\n      var name = _ref2.name;\n      return name.startsWith(fieldName + \".\");\n    }); // remove nested fields - important for minimongo which complains for these situations\n    // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n    // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n    // and removing anything else\n\n    nestedFields.forEach(function (node) {\n      return root.remove(node);\n    });\n    var fieldNode = new FieldNode(fieldName, body); // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n\n    fieldNode.scheduledForDeletion = nestedFields.every(function (field) {\n      return field.scheduledForDeletion;\n    });\n    root.add(fieldNode);\n  }\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js"],"names":["module","export","addReducers","handleAddElement","handleAddReducer","handleAddLink","handleAddField","dot","link","v","createNodes","CollectionNode","FieldNode","ReducerNode","embedReducerWithLink","specialFields","root","reducerNodes","forEach","reducer","_","each","body","fieldName","reducerNode","collection","linker","getLinker","getReducer","dependencies","push","reduce","hasReducerNode","childReducerNode","add","scheduledForDeletion","parent","hasCollectionNode","collectionNode","getCollectionNode","getLinkedCollection","contains","addProp","isObject","dots","value","key","addFieldIfRequired","hasField","nestedFields","fieldNodes","filter","name","startsWith","node","remove","fieldNode","every","field"],"mappings":"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","sourcesContent":["import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\nimport { specialFields } from '../../lib/createGraph';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(reducer, root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(reducerNode, root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(reducerNode, fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        reducerNode.dependencies.push(fieldName);\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, {body, reduce}, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let childReducerNode = new ReducerNode(fieldName, {body, reduce});\n        root.add(childReducerNode);\n        childReducerNode.scheduledForDeletion = true;\n\n        _.each(childReducerNode.body, (body, fieldName) => {\n            handleAddElement(childReducerNode, root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(reducerNode, fieldName, body, parent, linker) {\n    if (parent.hasCollectionNode(fieldName)) {\n        const collectionNode = parent.getCollectionNode(fieldName);\n\n        embedReducerWithLink(reducerNode, body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        parent.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.contains(specialFields, fieldName)) {\n        root.addProp(fieldName, body);\n\n        return;\n    }\n\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        // if it's a prop\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            addFieldIfRequired(root, key, value);\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        addFieldIfRequired(root, fieldName, body);\n    }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n    if (!root.hasField(fieldName, true)) {\n        /**\n         * Check if there are any nested fields for this field.\n         * Adding root field here and scheduling for deletion would not work if there is already nested field, \n         * for example:\n         * when trying to add meta: 1, it should be checked that there are no meta.* fields\n         * */\n\n        const nestedFields = root.fieldNodes.filter(({name}) => name.startsWith(`${fieldName}.`));\n        // remove nested fields - important for minimongo which complains for these situations\n        // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n        // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n        // and removing anything else\n        nestedFields.forEach(node => root.remove(node));\n \n        let fieldNode = new FieldNode(fieldName, body);\n        // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n        fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n\n        root.add(fieldNode);\n    }\n}\n"]},"sourceType":"script","hash":"521c3f0b48b6cee7ac8995e9a57db0dc593b204d"}
