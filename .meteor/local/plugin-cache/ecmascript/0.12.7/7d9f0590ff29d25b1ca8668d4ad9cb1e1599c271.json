{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js"}},"code":"var _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\nvar SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.link(\"./constants\", {\n  SAFE_DOTTED_FIELD_REPLACEMENT: function (v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  var containsDottedFields = false;\n  var linker = childCollectionNode.linker;\n  var linkStorageField = linker.linkStorageField;\n  var collection = childCollectionNode.collection;\n  var pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  var _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  var dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, function (value, field) {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    var safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    var $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice: $slice\n        }\n      }\n    });\n  }\n\n  return {\n    pipeline: pipeline,\n    containsDottedFields: containsDottedFields\n  };\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js"],"names":["_","module","link","v","SAFE_DOTTED_FIELD_REPLACEMENT","exportDefault","childCollectionNode","filters","options","userId","containsDottedFields","linker","linkStorageField","collection","pipeline","firewall","push","$match","sort","keys","length","$sort","_id","isMeta","dataPush","each","fields","value","field","indexOf","safeField","replace","$group","data","$push","limit","skip","$slice","$project"],"mappings":"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","sourcesContent":["import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}"]},"sourceType":"script","hash":"7d9f0590ff29d25b1ca8668d4ad9cb1e1599c271"}
