{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js"}},"code":"let applyProps;\nmodule.link(\"./applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet getNodeNamespace;\nmodule.link(\"./createGraph\", {\n  getNodeNamespace(v) {\n    getNodeNamespace = v;\n  }\n\n}, 1);\n\n/**\n * Adds _query_path fields to the cursor docs which are used for scoped query filtering on the client.\n * \n * @param cursor \n * @param ns \n */\nfunction patchCursor(cursor, ns) {\n  const originalObserve = cursor.observe;\n\n  cursor.observe = function (callbacks) {\n    const newCallbacks = Object.assign({}, callbacks);\n\n    if (callbacks.added) {\n      newCallbacks.added = doc => {\n        doc = _.clone(doc);\n        doc[`_query_path_${ns}`] = 1;\n        callbacks.added(doc);\n      };\n    }\n\n    return originalObserve.call(cursor, newCallbacks);\n  };\n}\n\nfunction compose(node, userId, config) {\n  return {\n    find(parent) {\n      if (parent) {\n        let {\n          filters,\n          options\n        } = applyProps(node); // composition\n\n        let linker = node.linker;\n        let accessor = linker.createLink(parent); // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n\n        if (linker.isVirtual()) {\n          options.fields = options.fields || {};\n\n          _.extend(options.fields, {\n            [linker.linkStorageField]: 1\n          });\n        }\n\n        const cursor = accessor.find(filters, options, userId);\n\n        if (config.scoped) {\n          patchCursor(cursor, getNodeNamespace(node));\n        }\n\n        return cursor;\n      }\n    },\n\n    children: _.map(node.collectionNodes, n => compose(n, userId, config))\n  };\n}\n\nmodule.exportDefault((node, userId, config = {\n  bypassFirewalls: false,\n  scoped: false\n}) => {\n  return {\n    find() {\n      let {\n        filters,\n        options\n      } = applyProps(node);\n      const cursor = node.collection.find(filters, options, userId);\n\n      if (config.scoped) {\n        patchCursor(cursor, getNodeNamespace(node));\n      }\n\n      return cursor;\n    },\n\n    children: _.map(node.collectionNodes, n => {\n      const userIdToPass = config.bypassFirewalls ? undefined : userId;\n      return compose(n, userIdToPass, config);\n    })\n  };\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js"],"names":["applyProps","module","link","default","v","getNodeNamespace","patchCursor","cursor","ns","originalObserve","observe","callbacks","newCallbacks","Object","assign","added","doc","_","clone","call","compose","node","userId","config","find","parent","filters","options","linker","accessor","createLink","isVirtual","fields","extend","linkStorageField","scoped","children","map","collectionNodes","n","exportDefault","bypassFirewalls","collection","userIdToPass","undefined"],"mappings":"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","sourcesContent":["import applyProps from './applyProps.js';\nimport {getNodeNamespace} from './createGraph';\n\n/**\n * Adds _query_path fields to the cursor docs which are used for scoped query filtering on the client.\n * \n * @param cursor \n * @param ns \n */\nfunction patchCursor(cursor, ns) {\n    const originalObserve = cursor.observe;\n    cursor.observe = function (callbacks) {\n        const newCallbacks = Object.assign({}, callbacks);\n        if (callbacks.added) {\n            newCallbacks.added = doc => {\n                doc = _.clone(doc);\n                doc[`_query_path_${ns}`] = 1;\n                callbacks.added(doc);\n            };\n        }\n        return originalObserve.call(cursor, newCallbacks);\n    };\n}\n\nfunction compose(node, userId, config) {\n    return {\n        find(parent) {\n            if (parent) {\n                let {filters, options} = applyProps(node);\n\n                // composition\n                let linker = node.linker;\n                let accessor = linker.createLink(parent);\n\n                // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n                if (linker.isVirtual()) {\n                    options.fields = options.fields || {};\n                    _.extend(options.fields, {\n                        [linker.linkStorageField]: 1\n                    });\n                }\n\n                const cursor = accessor.find(filters, options, userId);\n                if (config.scoped) {\n                    patchCursor(cursor, getNodeNamespace(node));\n                }\n                return cursor;\n            }\n        },\n\n        children: _.map(node.collectionNodes, n => compose(n, userId, config))\n    }\n}\n\nexport default (node, userId, config = {bypassFirewalls: false, scoped: false}) => {\n    return {\n        find() {\n            let {filters, options} = applyProps(node);\n\n            const cursor = node.collection.find(filters, options, userId);\n            if (config.scoped) {\n                patchCursor(cursor, getNodeNamespace(node));\n            }\n            return cursor;\n        },\n\n        children: _.map(node.collectionNodes, n => {\n            const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n\n            return compose(n, userIdToPass, config);\n        })\n    }\n}\n"]},"sourceType":"script","hash":"ef18cb5f1b064658ef03f1733f1444be72db381b"}
