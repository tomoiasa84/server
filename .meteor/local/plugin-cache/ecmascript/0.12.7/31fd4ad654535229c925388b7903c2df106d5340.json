{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/query.client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/query.client.js"}},"code":"module.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.link(\"./counts/countSubscription\", {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.link(\"./lib/recursiveFetch.js\", {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.link(\"./lib/callWithPromise\", {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      this.doValidateParams();\n\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.client.js"],"names":["module","export","default","Query","_","link","v","CountSubscription","createGraph","recursiveFetch","prepareForProcess","callWithPromise","Base","subscribe","callback","doValidateParams","subscriptionHandle","Meteor","name","body","params","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","Error","fetchOneSync","first","fetch","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","args","isFunction","err","res","getCountSync","getCount","call","options","allowSkip","$options","skip","collection"],"mappings":"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","sourcesContent":["import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n"]},"sourceType":"script","hash":"31fd4ad654535229c925388b7903c2df106d5340"}
