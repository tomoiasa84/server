{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js"}},"code":"module.export({\n  \"default\": function () {\n    return createSearchFilters;\n  },\n  createOne: function () {\n    return createOne;\n  },\n  createOneVirtual: function () {\n    return createOneVirtual;\n  },\n  createOneMeta: function () {\n    return createOneMeta;\n  },\n  createOneMetaVirtual: function () {\n    return createOneMetaVirtual;\n  },\n  createMany: function () {\n    return createMany;\n  },\n  createManyVirtual: function () {\n    return createManyVirtual;\n  },\n  createManyMeta: function () {\n    return createManyMeta;\n  },\n  createManyMetaVirtual: function () {\n    return createManyMetaVirtual;\n  }\n});\nvar sift;\nmodule.link(\"sift\", {\n  \"default\": function (v) {\n    sift = v;\n  }\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \" + strategy);\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(\"Invalid linking strategy: \" + strategy);\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: object[fieldStorage]\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  var _ref;\n\n  return _ref = {}, _ref[fieldStorage] = object._id, _ref;\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  var value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  var filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, function (value, key) {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  var _ref2;\n\n  return _ref2 = {}, _ref2[fieldStorage] = object._id, _ref2;\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  var value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  var _ref3;\n\n  var filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, function (value, key) {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return _ref3 = {}, _ref3[fieldStorage] = {\n    $elemMatch: filters\n  }, _ref3;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js"],"names":["module","export","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","link","v","object","fieldStorage","strategy","isVirtual","metaFilters","Meteor","Error","_id","value","undefined","filters","_","each","key","$in","pluck","$elemMatch"],"mappings":"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","sourcesContent":["import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}"]},"sourceType":"script","hash":"14869b5e164c78550b050fbc356ee5ca16de8eb5"}
