{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js"}},"code":"module.export({\n  cleanOptions: () => cleanOptions,\n  cleanFilters: () => cleanFilters,\n  fieldExists: () => fieldExists\n});\n\nfunction cleanOptions(options, ensureFields) {\n  if (!options) {\n    return;\n  }\n\n  if (options.fields) {\n    options.fields = _.pick(options.fields, ...ensureFields);\n  }\n\n  if (options.sort) {\n    options.sort = _.pick(options.sort, ...ensureFields);\n  }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nfunction cleanFilters(filters, ensureFields) {\n  if (!filters) {\n    return;\n  }\n\n  _.each(filters, (value, key) => {\n    if (!_.contains(special, key)) {\n      if (!fieldExists(ensureFields, key)) {\n        delete filters[key];\n      }\n    }\n  });\n\n  deepFilterFieldsArray.forEach(field => {\n    if (filters[field]) {\n      filters[field].forEach(element => cleanFilters(element, ensureFields));\n    }\n  });\n  deepFilterFieldsObject.forEach(field => {\n    if (filters[field]) {\n      cleanFilters(filters[field], ensureFields);\n    }\n  });\n}\n\nfunction fieldExists(fields, key) {\n  for (let i = 0; i < fields.length; i++) {\n    if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js"],"names":["module","export","cleanOptions","cleanFilters","fieldExists","options","ensureFields","fields","_","pick","sort","deepFilterFieldsArray","deepFilterFieldsObject","special","filters","each","value","key","contains","forEach","field","element","i","length","indexOf"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,YAAY,EAAC,MAAIA,YAAlB;AAA+BC,EAAAA,YAAY,EAAC,MAAIA,YAAhD;AAA6DC,EAAAA,WAAW,EAAC,MAAIA;AAA7E,CAAd;;AAAO,SAASF,YAAT,CAAsBG,OAAtB,EAA+BC,YAA/B,EAA6C;AAChD,MAAI,CAACD,OAAL,EAAc;AACV;AACH;;AAED,MAAIA,OAAO,CAACE,MAAZ,EAAoB;AAChBF,IAAAA,OAAO,CAACE,MAAR,GAAiBC,CAAC,CAACC,IAAF,CAAOJ,OAAO,CAACE,MAAf,EAAuB,GAAGD,YAA1B,CAAjB;AACH;;AAED,MAAID,OAAO,CAACK,IAAZ,EAAkB;AACdL,IAAAA,OAAO,CAACK,IAAR,GAAeF,CAAC,CAACC,IAAF,CAAOJ,OAAO,CAACK,IAAf,EAAqB,GAAGJ,YAAxB,CAAf;AACH;AACJ;;AAED,MAAMK,qBAAqB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAA9B;AACA,MAAMC,sBAAsB,GAAG,CAAC,MAAD,CAA/B;AACA,MAAMC,OAAO,GAAG,CAAC,GAAGF,qBAAJ,EAA2B,GAAGC,sBAA9B,CAAhB;;AAEO,SAAST,YAAT,CAAsBW,OAAtB,EAA+BR,YAA/B,EAA6C;AAChD,MAAI,CAACQ,OAAL,EAAc;AACV;AACH;;AAEDN,EAAAA,CAAC,CAACO,IAAF,CAAOD,OAAP,EAAgB,CAACE,KAAD,EAAQC,GAAR,KAAgB;AAC5B,QAAI,CAACT,CAAC,CAACU,QAAF,CAAWL,OAAX,EAAoBI,GAApB,CAAL,EAA+B;AAC3B,UAAI,CAACb,WAAW,CAACE,YAAD,EAAeW,GAAf,CAAhB,EAAqC;AACjC,eAAOH,OAAO,CAACG,GAAD,CAAd;AACH;AACJ;AACJ,GAND;;AAQAN,EAAAA,qBAAqB,CAACQ,OAAtB,CAA8BC,KAAK,IAAI;AACnC,QAAIN,OAAO,CAACM,KAAD,CAAX,EAAoB;AAChBN,MAAAA,OAAO,CAACM,KAAD,CAAP,CAAeD,OAAf,CAAuBE,OAAO,IAAIlB,YAAY,CAACkB,OAAD,EAAUf,YAAV,CAA9C;AACH;AACJ,GAJD;AAMAM,EAAAA,sBAAsB,CAACO,OAAvB,CAA+BC,KAAK,IAAI;AACpC,QAAIN,OAAO,CAACM,KAAD,CAAX,EAAoB;AAChBjB,MAAAA,YAAY,CAACW,OAAO,CAACM,KAAD,CAAR,EAAiBd,YAAjB,CAAZ;AACH;AACJ,GAJD;AAKH;;AAUM,SAASF,WAAT,CAAqBG,MAArB,EAA6BU,GAA7B,EAAkC;AACrC,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACgB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,QAAIf,MAAM,CAACe,CAAD,CAAN,KAAcL,GAAd,IAAqBA,GAAG,CAACO,OAAJ,CAAYjB,MAAM,CAACe,CAAD,CAAN,GAAY,GAAxB,MAAiC,CAA1D,EAA6D;AACzD,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH","sourcesContent":["export function cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nexport function cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\n/**\n * This will check if a field exists in a set of fields\n * If fields contains [\"profile\"], then \"profile.something\" will return true\n *\n * @param fields\n * @param key\n * @returns {boolean}\n */\nexport function fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n"]},"sourceType":"script","hash":"97213caf4fe11fcbcf3f1b5570c099859b5c3d26"}
