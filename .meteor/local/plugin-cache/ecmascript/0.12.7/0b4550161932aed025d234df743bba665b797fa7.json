{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/exposure.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/exposure/exposure.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/exposure/exposure.js"}},"code":"module.export({\n  default: () => Exposure\n});\nlet genCountEndpoint;\nmodule.link(\"../query/counts/genEndpoint.server.js\", {\n  default(v) {\n    genCountEndpoint = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.link(\"../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveCompose;\nmodule.link(\"../query/lib/recursiveCompose.js\", {\n  default(v) {\n    recursiveCompose = v;\n  }\n\n}, 2);\nlet hypernova;\nmodule.link(\"../query/hypernova/hypernova.js\", {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 3);\nlet ExposureSchema, ExposureDefaults, validateBody;\nmodule.link(\"./exposure.config.schema.js\", {\n  ExposureSchema(v) {\n    ExposureSchema = v;\n  },\n\n  ExposureDefaults(v) {\n    ExposureDefaults = v;\n  },\n\n  validateBody(v) {\n    validateBody = v;\n  }\n\n}, 4);\nlet enforceMaxDepth;\nmodule.link(\"./lib/enforceMaxDepth.js\", {\n  default(v) {\n    enforceMaxDepth = v;\n  }\n\n}, 5);\nlet enforceMaxLimit;\nmodule.link(\"./lib/enforceMaxLimit.js\", {\n  default(v) {\n    enforceMaxLimit = v;\n  }\n\n}, 6);\nlet cleanBody;\nmodule.link(\"./lib/cleanBody.js\", {\n  default(v) {\n    cleanBody = v;\n  }\n\n}, 7);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 8);\nlet restrictFieldsFn;\nmodule.link(\"./lib/restrictFields.js\", {\n  default(v) {\n    restrictFieldsFn = v;\n  }\n\n}, 9);\nlet restrictLinks;\nmodule.link(\"./lib/restrictLinks.js\", {\n  default(v) {\n    restrictLinks = v;\n  }\n\n}, 10);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 11);\nlet globalConfig = {};\n\nclass Exposure {\n  static setConfig(config) {\n    Object.assign(globalConfig, config);\n  }\n\n  static getConfig() {\n    return globalConfig;\n  }\n\n  static restrictFields(...args) {\n    return restrictFieldsFn(...args);\n  }\n\n  constructor(collection, config = {}) {\n    collection.__isExposedForGrapher = true;\n    collection.__exposure = this;\n    this.collection = collection;\n    this.name = `exposure_${collection._name}`;\n    this.config = config;\n\n    this._validateAndClean();\n\n    this.initSecurity();\n\n    if (this.config.publication) {\n      this.initPublication();\n    }\n\n    if (this.config.method) {\n      this.initMethod();\n    }\n\n    if (!this.config.method && !this.config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this.initCountMethod();\n    this.initCountPublication();\n  }\n\n  _validateAndClean() {\n    if (typeof this.config === 'function') {\n      const firewall = this.config;\n      this.config = {\n        firewall\n      };\n    }\n\n    this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n    check(this.config, ExposureSchema);\n\n    if (this.config.body) {\n      validateBody(this.collection, this.config.body);\n    }\n  }\n  /**\n   * Takes the body and intersects it with the exposure body, if it exists.\n   *\n   * @param body\n   * @param userId\n   * @returns {*}\n   */\n\n\n  getTransformedBody(body, userId) {\n    if (!this.config.body) {\n      return body;\n    }\n\n    const processedBody = this.getBody(userId);\n\n    if (processedBody === true) {\n      return;\n    }\n\n    return cleanBody(processedBody, body);\n  }\n  /**\n   * Gets the exposure body\n   */\n\n\n  getBody(userId) {\n    if (!this.config.body) {\n      throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n    }\n\n    let body;\n\n    if (_.isFunction(this.config.body)) {\n      body = this.config.body.call(this, userId);\n    } else {\n      body = this.config.body;\n    } // it means we allow everything, no need for cloning.\n\n\n    if (body === true) {\n      return true;\n    }\n\n    return deepClone(body, userId);\n  }\n  /**\n   * Initializing the publication for reactive query fetching\n   */\n\n\n  initPublication() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n    Meteor.publishComposite(this.name, function (body) {\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId);\n      return recursiveCompose(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    });\n  }\n  /**\n   * Initializez the method to retrieve the data via Meteor.call\n   */\n\n\n  initMethod() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n\n    const methodBody = function (body) {\n      if (!config.blocking) {\n        this.unblock();\n      }\n\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId); // if there is no exposure body defined, then we need to apply firewalls\n\n      return hypernova(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    };\n\n    Meteor.methods({\n      [this.name]: methodBody\n    });\n  }\n  /**\n   * Initializes the method to retrieve the count of the data via Meteor.call\n   * @returns {*}\n   */\n\n\n  initCountMethod() {\n    const collection = this.collection;\n    Meteor.methods({\n      [this.name + '.count'](body) {\n        this.unblock();\n        return collection.find(body.$filters || {}, {}, this.userId).count();\n      }\n\n    });\n  }\n  /**\n   * Initializes the reactive endpoint to retrieve the count of the data.\n   */\n\n\n  initCountPublication() {\n    const collection = this.collection;\n    genCountEndpoint(this.name, {\n      getCursor({\n        session\n      }) {\n        return collection.find(session.filters, {\n          fields: {\n            _id: 1\n          }\n        }, this.userId);\n      },\n\n      getSession(body) {\n        return {\n          filters: body.$filters || {}\n        };\n      }\n\n    });\n  }\n  /**\n   * Initializes security enforcement\n   * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n   */\n\n\n  initSecurity() {\n    const collection = this.collection;\n    const {\n      firewall,\n      maxLimit,\n      restrictedFields\n    } = this.config;\n    const find = collection.find.bind(collection);\n    const findOne = collection.findOne.bind(collection);\n\n    collection.firewall = (filters, options, userId) => {\n      if (userId !== undefined) {\n        this._callFirewall({\n          collection: collection\n        }, filters, options, userId);\n\n        enforceMaxLimit(options, maxLimit);\n\n        if (restrictedFields) {\n          Exposure.restrictFields(filters, options, restrictedFields);\n        }\n      }\n    };\n\n    collection.find = function (filters, options = {}, userId = undefined) {\n      if (arguments.length == 0) {\n        filters = {};\n      } // If filters is undefined it should return an empty item\n\n\n      if (arguments.length > 0 && filters === undefined) {\n        return find(undefined, options);\n      }\n\n      collection.firewall(filters, options, userId);\n      return find(filters, options);\n    };\n\n    collection.findOne = function (filters, options = {}, userId = undefined) {\n      // If filters is undefined it should return an empty item\n      if (arguments.length > 0 && filters === undefined) {\n        return null;\n      }\n\n      if (typeof filters === 'string') {\n        filters = {\n          _id: filters\n        };\n      }\n\n      collection.firewall(filters, options, userId);\n      return findOne(filters, options);\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  _callFirewall(...args) {\n    const {\n      firewall\n    } = this.config;\n\n    if (!firewall) {\n      return;\n    }\n\n    if (_.isArray(firewall)) {\n      firewall.forEach(fire => {\n        fire.call(...args);\n      });\n    } else {\n      firewall.call(...args);\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/exposure/exposure.js"],"names":["module","export","default","Exposure","genCountEndpoint","link","v","createGraph","recursiveCompose","hypernova","ExposureSchema","ExposureDefaults","validateBody","enforceMaxDepth","enforceMaxLimit","cleanBody","deepClone","restrictFieldsFn","restrictLinks","check","globalConfig","setConfig","config","Object","assign","getConfig","restrictFields","args","constructor","collection","__isExposedForGrapher","__exposure","name","_name","_validateAndClean","initSecurity","publication","initPublication","method","initMethod","Meteor","Error","initCountMethod","initCountPublication","firewall","body","getTransformedBody","userId","processedBody","getBody","_","isFunction","call","bind","publishComposite","transformedBody","rootNode","maxDepth","bypassFirewalls","methodBody","blocking","unblock","methods","find","$filters","count","getCursor","session","filters","fields","_id","getSession","maxLimit","restrictedFields","findOne","options","undefined","_callFirewall","arguments","length","isArray","forEach","fire"],"mappings":"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","sourcesContent":["import genCountEndpoint from '../query/counts/genEndpoint.server.js';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveCompose from '../query/lib/recursiveCompose.js';\nimport hypernova from '../query/hypernova/hypernova.js';\nimport {\n    ExposureSchema,\n    ExposureDefaults,\n    validateBody,\n} from './exposure.config.schema.js';\nimport enforceMaxDepth from './lib/enforceMaxDepth.js';\nimport enforceMaxLimit from './lib/enforceMaxLimit.js';\nimport cleanBody from './lib/cleanBody.js';\nimport deepClone from 'lodash.clonedeep';\nimport restrictFieldsFn from './lib/restrictFields.js';\nimport restrictLinks from './lib/restrictLinks.js';\nimport { check } from 'meteor/check';\n\nlet globalConfig = {};\n\nexport default class Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n\n        this.config = config;\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof this.config === 'function') {\n            const firewall = this.config;\n            this.config = { firewall };\n        }\n\n        this.config = Object.assign(\n            {},\n            ExposureDefaults,\n            Exposure.getConfig(),\n            this.config\n        );\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    }\n\n    /**\n     * Takes the body and intersects it with the exposure body, if it exists.\n     *\n     * @param body\n     * @param userId\n     * @returns {*}\n     */\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    }\n\n    /**\n     * Gets the exposure body\n     */\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error(\n                'missing-body',\n                'Cannot get exposure body because it was not defined.'\n            );\n        }\n\n        let body;\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        }\n\n        // it means we allow everything, no need for cloning.\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(body, userId);\n    }\n\n    /**\n     * Initializing the publication for reactive query fetching\n     */\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        Meteor.publishComposite(this.name, function(body) {\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        });\n    }\n\n    /**\n     * Initializez the method to retrieve the data via Meteor.call\n     */\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function(body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            // if there is no exposure body defined, then we need to apply firewalls\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody,\n        });\n    }\n\n    /**\n     * Initializes the method to retrieve the count of the data via Meteor.call\n     * @returns {*}\n     */\n    initCountMethod() {\n        const collection = this.collection;\n\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n\n                return collection\n                    .find(body.$filters || {}, {}, this.userId)\n                    .count();\n            },\n        });\n    }\n\n    /**\n     * Initializes the reactive endpoint to retrieve the count of the data.\n     */\n    initCountPublication() {\n        const collection = this.collection;\n\n        genCountEndpoint(this.name, {\n            getCursor({ session }) {\n                return collection.find(\n                    session.filters,\n                    {\n                        fields: { _id: 1 },\n                    },\n                    this.userId\n                );\n            },\n\n            getSession(body) {\n                return { filters: body.$filters || {} };\n            },\n        });\n    }\n\n    /**\n     * Initializes security enforcement\n     * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n     */\n    initSecurity() {\n        const collection = this.collection;\n        const { firewall, maxLimit, restrictedFields } = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall(\n                    { collection: collection },\n                    filters,\n                    options,\n                    userId\n                );\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function(filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            }\n\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return find(filters, options);\n        };\n\n        collection.findOne = function(\n            filters,\n            options = {},\n            userId = undefined\n        ) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof filters === 'string') {\n                filters = { _id: filters };\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return findOne(filters, options);\n        };\n    }\n\n    /**\n     * @private\n     */\n    _callFirewall(...args) {\n        const { firewall } = this.config;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            });\n        } else {\n            firewall.call(...args);\n        }\n    }\n}\n"]},"sourceType":"script","hash":"0b4550161932aed025d234df743bba665b797fa7"}
