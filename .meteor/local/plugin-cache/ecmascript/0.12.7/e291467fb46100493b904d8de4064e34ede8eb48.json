{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher-schema-directives/LinkDirective.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher-schema-directives/LinkDirective.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher-schema-directives/LinkDirective.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher-schema-directives/LinkDirective.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher-schema-directives/LinkDirective.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => LinkDirective\n});\nlet SchemaDirectiveVisitor;\nmodule.link(\"graphql-tools\", {\n  SchemaDirectiveVisitor(v) {\n    SchemaDirectiveVisitor = v;\n  }\n\n}, 0);\nlet GraphQLList, GraphQLObjectType, GraphQLNonNull;\nmodule.link(\"graphql/type\", {\n  GraphQLList(v) {\n    GraphQLList = v;\n  },\n\n  GraphQLObjectType(v) {\n    GraphQLObjectType = v;\n  },\n\n  GraphQLNonNull(v) {\n    GraphQLNonNull = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\nlet setupMongoDirective;\nmodule.link(\"./MongoDirective\", {\n  setupMongoDirective(v) {\n    setupMongoDirective = v;\n  }\n\n}, 3);\n\nclass LinkDirective extends SchemaDirectiveVisitor {\n  visitFieldDefinition(field, details) {\n    const {\n      objectType\n    } = details;\n    const {\n      args\n    } = this;\n\n    if (!objectType._mongoCollectionName) {\n      throw new Meteor.Error('collection-not-found', `You are trying to set the link: ${field.name} but your object type does not have @mongo directive set-up`);\n    }\n\n    const isArrayField = field.type instanceof GraphQLList;\n    let referencedType;\n\n    if (isArrayField) {\n      referencedType = field.type.ofType;\n    } else {\n      referencedType = field.type;\n    }\n\n    if (referencedType instanceof GraphQLNonNull) {\n      referencedType = referencedType.ofType;\n    } else {\n      if (!(referencedType instanceof GraphQLObjectType)) {\n        throw new Meteor.Error('invalid-type', `You are trying to attach a link on a invalid type. @link directive only works with GraphQLObjectType `);\n      }\n    }\n\n    let referencedCollectionName = referencedType._mongoCollectionName;\n\n    if (!referencedCollectionName) {\n      const objectNodeDirectives = referencedType.astNode.directives;\n      const mongoDirective = objectNodeDirectives.find(directive => {\n        return directive.name.value === 'mongo';\n      });\n\n      if (mongoDirective) {\n        const nameArgument = mongoDirective.arguments.find(argument => argument.name.value === 'name');\n        setupMongoDirective(referencedType, {\n          name: nameArgument.value.value\n        });\n        referencedCollectionName = nameArgument.value.value;\n      } else {\n        throw new Meteor.Error('invalid-collection', `The referenced type does not have a collection setup using @mongo directive`);\n      }\n    }\n\n    const thisCollectionName = objectType._mongoCollectionName;\n    const referencedCollection = Mongo.Collection.get(referencedCollectionName);\n    const thisCollection = Mongo.Collection.get(thisCollectionName);\n    let config = {};\n\n    if (args.to) {\n      config = Object.assign({}, args);\n      config.inversedBy = args.to;\n      delete config.to;\n    } else {\n      if (args.field) {\n        config = Object.assign({\n          type: isArrayField ? 'many' : 'one',\n          field: args.field,\n          index: true\n        }, args);\n      } else {\n        throw new Meteor.Error(`invalid-args`, `You have provided invalid arguments for this link in ${thisCollectionName}. The \"field\" property is missing.`);\n      }\n    }\n\n    thisCollection.addLinks({\n      [field.name]: (0, _objectSpread2.default)({\n        collection: referencedCollection\n      }, config)\n    });\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-schema-directives/LinkDirective.js"],"names":["module","export","default","LinkDirective","SchemaDirectiveVisitor","link","v","GraphQLList","GraphQLObjectType","GraphQLNonNull","Mongo","setupMongoDirective","visitFieldDefinition","field","details","objectType","args","_mongoCollectionName","Meteor","Error","name","isArrayField","type","referencedType","ofType","referencedCollectionName","objectNodeDirectives","astNode","directives","mongoDirective","find","directive","value","nameArgument","arguments","argument","thisCollectionName","referencedCollection","Collection","get","thisCollection","config","to","Object","assign","inversedBy","index","addLinks","collection"],"mappings":"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","sourcesContent":["import { SchemaDirectiveVisitor } from 'graphql-tools';\nimport { GraphQLList, GraphQLObjectType, GraphQLNonNull } from 'graphql/type';\nimport { Mongo } from 'meteor/mongo';\nimport { setupMongoDirective } from './MongoDirective';\n\nexport default class LinkDirective extends SchemaDirectiveVisitor {\n  visitFieldDefinition(field, details) {\n    const { objectType } = details;\n    const { args } = this;\n\n    if (!objectType._mongoCollectionName) {\n      throw new Meteor.Error(\n        'collection-not-found',\n        `You are trying to set the link: ${\n          field.name\n        } but your object type does not have @mongo directive set-up`\n      );\n    }\n\n    const isArrayField = field.type instanceof GraphQLList;\n    let referencedType;\n\n    if (isArrayField) {\n      referencedType = field.type.ofType;\n    } else {\n      referencedType = field.type;\n    }\n\n    if (referencedType instanceof GraphQLNonNull) {\n      referencedType = referencedType.ofType;\n    } else {\n      if (!(referencedType instanceof GraphQLObjectType)) {\n        throw new Meteor.Error(\n          'invalid-type',\n          `You are trying to attach a link on a invalid type. @link directive only works with GraphQLObjectType `\n        );\n      }\n    }\n\n    let referencedCollectionName = referencedType._mongoCollectionName;\n    if (!referencedCollectionName) {\n      const objectNodeDirectives = referencedType.astNode.directives;\n      const mongoDirective = objectNodeDirectives.find(directive => {\n        return directive.name.value === 'mongo';\n      });\n\n      if (mongoDirective) {\n        const nameArgument = mongoDirective.arguments.find(\n          argument => argument.name.value === 'name'\n        );\n\n        setupMongoDirective(referencedType, {\n          name: nameArgument.value.value,\n        });\n\n        referencedCollectionName = nameArgument.value.value;\n      } else {\n        throw new Meteor.Error(\n          'invalid-collection',\n          `The referenced type does not have a collection setup using @mongo directive`\n        );\n      }\n    }\n\n    const thisCollectionName = objectType._mongoCollectionName;\n\n    const referencedCollection = Mongo.Collection.get(referencedCollectionName);\n    const thisCollection = Mongo.Collection.get(thisCollectionName);\n\n    let config = {};\n    if (args.to) {\n      config = Object.assign({}, args);\n      config.inversedBy = args.to;\n      delete config.to;\n    } else {\n      if (args.field) {\n        config = Object.assign(\n          {\n            type: isArrayField ? 'many' : 'one',\n            field: args.field,\n            index: true,\n          },\n          args\n        );\n      } else {\n        throw new Meteor.Error(\n          `invalid-args`,\n          `You have provided invalid arguments for this link in ${thisCollectionName}. The \"field\" property is missing.`\n        );\n      }\n    }\n\n    thisCollection.addLinks({\n      [field.name]: {\n        collection: referencedCollection,\n        ...config,\n      },\n    });\n  }\n}\n"]},"sourceType":"script","hash":"e291467fb46100493b904d8de4064e34ede8eb48"}
