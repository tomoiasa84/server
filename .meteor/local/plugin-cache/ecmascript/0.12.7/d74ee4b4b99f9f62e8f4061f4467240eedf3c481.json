{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/morpher/getFields.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:apollo/server/morpher/getFields.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/morpher/getFields.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:apollo/server/morpher/getFields.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:apollo/server/morpher/getFields.js"}},"code":"module.export({\n  default: () => getFields\n});\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\n\nfunction getFields(mutator) {\n  // compute modified fields\n  var fields = [];\n  var topLevelFields = [];\n\n  _.each(mutator, function (params, op) {\n    if (op[0] == '$') {\n      _.each(_.keys(params), function (field) {\n        // record the field we are trying to change\n        if (!_.contains(fields, field)) {\n          // fields.push(field);\n          // topLevelFields.push(field.split('.')[0]);\n          // like { $set: { 'array.1.xx' } }\n          const specificPositionFieldMatch = /\\.[\\d]+(\\.)?/.exec(field);\n\n          if (specificPositionFieldMatch) {\n            fields.push(field.slice(0, specificPositionFieldMatch.index));\n          } else {\n            if (field.indexOf('.$') !== -1) {\n              if (field.indexOf('.$.') !== -1) {\n                fields.push(field.split('.$.')[0]);\n              } else {\n                fields.push(field.split('.$')[0]);\n              }\n            } else {\n              fields.push(field);\n            }\n          }\n\n          topLevelFields.push(field.split('.')[0]);\n        }\n      });\n    } else {\n      fields.push(op);\n    }\n  });\n\n  return {\n    fields,\n    topLevelFields\n  };\n}","map":{"version":3,"sources":["packages/cultofcoders:apollo/server/morpher/getFields.js"],"names":["module","export","default","getFields","_","link","v","mutator","fields","topLevelFields","each","params","op","keys","field","contains","specificPositionFieldMatch","exec","push","slice","index","indexOf","split"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;;AAAuC,IAAIC,CAAJ;;AAAMJ,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACD,EAAAA,CAAC,CAACE,CAAD,EAAG;AAACF,IAAAA,CAAC,GAACE,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;;AAK9B,SAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACzC;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,cAAc,GAAG,EAArB;;AAEAL,EAAAA,CAAC,CAACM,IAAF,CAAOH,OAAP,EAAgB,UAASI,MAAT,EAAiBC,EAAjB,EAAqB;AACnC,QAAIA,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AAChBR,MAAAA,CAAC,CAACM,IAAF,CAAON,CAAC,CAACS,IAAF,CAAOF,MAAP,CAAP,EAAuB,UAASG,KAAT,EAAgB;AACrC;AACA,YAAI,CAACV,CAAC,CAACW,QAAF,CAAWP,MAAX,EAAmBM,KAAnB,CAAL,EAAgC;AAC9B;AACA;AAEA;AACA,gBAAME,0BAA0B,GAAG,eAAeC,IAAf,CAAoBH,KAApB,CAAnC;;AACA,cAAIE,0BAAJ,EAAgC;AAC9BR,YAAAA,MAAM,CAACU,IAAP,CAAYJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeH,0BAA0B,CAACI,KAA1C,CAAZ;AACD,WAFD,MAEO;AACL,gBAAIN,KAAK,CAACO,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,kBAAIP,KAAK,CAACO,OAAN,CAAc,KAAd,MAAyB,CAAC,CAA9B,EAAiC;AAC/Bb,gBAAAA,MAAM,CAACU,IAAP,CAAYJ,KAAK,CAACQ,KAAN,CAAY,KAAZ,EAAmB,CAAnB,CAAZ;AACD,eAFD,MAEO;AACLd,gBAAAA,MAAM,CAACU,IAAP,CAAYJ,KAAK,CAACQ,KAAN,CAAY,IAAZ,EAAkB,CAAlB,CAAZ;AACD;AACF,aAND,MAMO;AACLd,cAAAA,MAAM,CAACU,IAAP,CAAYJ,KAAZ;AACD;AACF;;AAEDL,UAAAA,cAAc,CAACS,IAAf,CAAoBJ,KAAK,CAACQ,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAApB;AACD;AACF,OAxBD;AAyBD,KA1BD,MA0BO;AACLd,MAAAA,MAAM,CAACU,IAAP,CAAYN,EAAZ;AACD;AACF,GA9BD;;AAgCA,SAAO;AAAEJ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACD","sourcesContent":["import { _ } from 'meteor/underscore';\n\n/**\n * @param mutator\n */\nexport default function getFields(mutator) {\n  // compute modified fields\n  var fields = [];\n  var topLevelFields = [];\n\n  _.each(mutator, function(params, op) {\n    if (op[0] == '$') {\n      _.each(_.keys(params), function(field) {\n        // record the field we are trying to change\n        if (!_.contains(fields, field)) {\n          // fields.push(field);\n          // topLevelFields.push(field.split('.')[0]);\n\n          // like { $set: { 'array.1.xx' } }\n          const specificPositionFieldMatch = /\\.[\\d]+(\\.)?/.exec(field);\n          if (specificPositionFieldMatch) {\n            fields.push(field.slice(0, specificPositionFieldMatch.index));\n          } else {\n            if (field.indexOf('.$') !== -1) {\n              if (field.indexOf('.$.') !== -1) {\n                fields.push(field.split('.$.')[0]);\n              } else {\n                fields.push(field.split('.$')[0]);\n              }\n            } else {\n              fields.push(field);\n            }\n          }\n\n          topLevelFields.push(field.split('.')[0]);\n        }\n      });\n    } else {\n      fields.push(op);\n    }\n  });\n\n  return { fields, topLevelFields };\n}\n"]},"sourceType":"script","hash":"d74ee4b4b99f9f62e8f4061f4467240eedf3c481"}
