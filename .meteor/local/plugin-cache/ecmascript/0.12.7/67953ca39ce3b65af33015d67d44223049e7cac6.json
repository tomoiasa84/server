{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/links/linker.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linker.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/linker.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nmodule.export({\n  \"default\": function () {\n    return Linker;\n  }\n});\nvar LinkMany;\nmodule.link(\"./linkTypes/linkMany.js\", {\n  \"default\": function (v) {\n    LinkMany = v;\n  }\n}, 0);\nvar LinkManyMeta;\nmodule.link(\"./linkTypes/linkManyMeta.js\", {\n  \"default\": function (v) {\n    LinkManyMeta = v;\n  }\n}, 1);\nvar LinkOne;\nmodule.link(\"./linkTypes/linkOne.js\", {\n  \"default\": function (v) {\n    LinkOne = v;\n  }\n}, 2);\nvar LinkOneMeta;\nmodule.link(\"./linkTypes/linkOneMeta.js\", {\n  \"default\": function (v) {\n    LinkOneMeta = v;\n  }\n}, 3);\nvar LinkConfigSchema, LinkConfigDefaults;\nmodule.link(\"./config.schema.js\", {\n  LinkConfigSchema: function (v) {\n    LinkConfigSchema = v;\n  },\n  LinkConfigDefaults: function (v) {\n    LinkConfigDefaults = v;\n  }\n}, 4);\nvar smartArguments;\nmodule.link(\"./linkTypes/lib/smartArguments\", {\n  \"default\": function (v) {\n    smartArguments = v;\n  }\n}, 5);\nvar dot;\nmodule.link(\"dot-object\", {\n  \"default\": function (v) {\n    dot = v;\n  }\n}, 6);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 7);\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 8);\nvar access;\nmodule.link(\"fs\", {\n  access: function (v) {\n    access = v;\n  }\n}, 9);\n\nvar Linker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  function Linker(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  var _proto = Linker.prototype;\n\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n  _proto.getLinkedCollection = function () {\n    function getLinkedCollection() {\n      return this.linkConfig.collection;\n    }\n\n    return getLinkedCollection;\n  }()\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n  ;\n\n  _proto.isMany = function () {\n    function isMany() {\n      return !this.isSingle();\n    }\n\n    return isMany;\n  }()\n  /**\n   * If the relationship for this link contains metadata\n   */\n  ;\n\n  _proto.isMeta = function () {\n    function isMeta() {\n      if (this.isVirtual()) {\n        return this.linkConfig.relatedLinker.isMeta();\n      }\n\n      return !!this.linkConfig.metadata;\n    }\n\n    return isMeta;\n  }()\n  /**\n   * @returns {boolean}\n   */\n  ;\n\n  _proto.isSingle = function () {\n    function isSingle() {\n      if (this.isVirtual()) {\n        return this.linkConfig.relatedLinker.isSingle();\n      }\n\n      return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    return isSingle;\n  }()\n  /**\n   * @returns {boolean}\n   */\n  ;\n\n  _proto.isVirtual = function () {\n    function isVirtual() {\n      return !!this.linkConfig.inversedBy;\n    }\n\n    return isVirtual;\n  }()\n  /**\n   * Should return a single result.\n   */\n  ;\n\n  _proto.isOneResult = function () {\n    function isOneResult() {\n      return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n    }\n\n    return isOneResult;\n  }()\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n  ;\n\n  _proto.createLink = function () {\n    function createLink(object) {\n      var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var helperClass = this._getHelperClass();\n\n      return new helperClass(this, object, collection);\n    }\n\n    return createLink;\n  }()\n  /**\n   * @returns {*}\n   * @private\n   */\n  ;\n\n  _proto._validateAndClean = function () {\n    function _validateAndClean() {\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-config', \"For the link \" + this.linkName + \" you did not provide a collection.\");\n      }\n\n      if (typeof this.linkConfig.collection === 'string') {\n        var collectionName = this.linkConfig.collection;\n        this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n        if (!this.linkConfig.collection) {\n          throw new Meteor.Error('invalid-collection', \"Could not find a collection with the name: \" + collectionName);\n        }\n      }\n\n      if (this.isVirtual()) {\n        return this._prepareVirtual();\n      } else {\n        if (!this.linkConfig.type) {\n          this.linkConfig.type = 'one';\n        }\n\n        if (!this.linkConfig.field) {\n          this.linkConfig.field = this._generateFieldName();\n        } else {\n          if (this.linkConfig.field == this.linkName) {\n            throw new Meteor.Error('invalid-config', \"For the link \" + this.linkName + \" you must not use the same name for the field, otherwise it will cause conflicts when fetching data\");\n          }\n        }\n      }\n\n      check(this.linkConfig, LinkConfigSchema);\n    }\n\n    return _validateAndClean;\n  }()\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n  ;\n\n  _proto._prepareVirtual = function () {\n    function _prepareVirtual() {\n      var _this = this;\n\n      var _this$linkConfig = this.linkConfig,\n          collection = _this$linkConfig.collection,\n          inversedBy = _this$linkConfig.inversedBy;\n      var linker = collection.getLinker(inversedBy);\n\n      if (!linker) {\n        // it is possible that the collection doesn't have a linker created yet.\n        // so we will create it on startup after all links have been defined\n        Meteor.startup(function () {\n          linker = collection.getLinker(inversedBy);\n\n          if (!linker) {\n            throw new Meteor.Error(\"You tried setting up an inversed link in \\\"\" + _this.mainCollection._name + \"\\\" pointing to collection: \\\"\" + collection._name + \"\\\" link: \\\"\" + inversedBy + \"\\\", but no such link was found. Maybe a typo ?\");\n          } else {\n            _this._setupVirtualConfig(linker);\n          }\n        });\n      } else {\n        this._setupVirtualConfig(linker);\n      }\n    }\n\n    return _prepareVirtual;\n  }()\n  /**\n   * @param linker\n   * @private\n   */\n  ;\n\n  _proto._setupVirtualConfig = function () {\n    function _setupVirtualConfig(linker) {\n      var virtualLinkConfig = linker.linkConfig;\n\n      if (!virtualLinkConfig) {\n        throw new Meteor.Error(\"There is no link-config for the related collection on \" + inversedBy + \". Make sure you added the direct links before specifying virtual ones.\");\n      }\n\n      _.extend(this.linkConfig, {\n        metadata: virtualLinkConfig.metadata,\n        relatedLinker: linker\n      });\n    }\n\n    return _setupVirtualConfig;\n  }()\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n  ;\n\n  _proto._getHelperClass = function () {\n    function _getHelperClass() {\n      switch (this.strategy) {\n        case 'many-meta':\n          return LinkManyMeta;\n\n        case 'many':\n          return LinkMany;\n\n        case 'one-meta':\n          return LinkOneMeta;\n\n        case 'one':\n          return LinkOne;\n      }\n\n      throw new Meteor.Error('invalid-strategy', this.strategy + \" is not a valid strategy\");\n    }\n\n    return _getHelperClass;\n  }()\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n  ;\n\n  _proto._generateFieldName = function () {\n    function _generateFieldName() {\n      var cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n      var defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n      switch (this.strategy) {\n        case 'many-meta':\n          return defaultFieldPrefix + \"_metas\";\n\n        case 'many':\n          return defaultFieldPrefix + \"_ids\";\n\n        case 'one-meta':\n          return defaultFieldPrefix + \"_meta\";\n\n        case 'one':\n          return defaultFieldPrefix + \"_id\";\n      }\n    }\n\n    return _generateFieldName;\n  }()\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n  ;\n\n  _proto._handleReferenceRemovalForVirtualLinks = function () {\n    function _handleReferenceRemovalForVirtualLinks() {\n      var _this2 = this;\n\n      this.mainCollection.after.remove(function (userId, doc) {\n        // this problem may occur when you do a .remove() before Meteor.startup()\n        if (!_this2.linkConfig.relatedLinker) {\n          console.warn(\"There was an error finding the link for removal for collection: \\\"\" + _this2.mainCollection._name + \"\\\" with link: \\\"\" + _this2.linkName + \"\\\". This may occur when you do a .remove() before Meteor.startup()\");\n          return;\n        }\n\n        var accessor = _this2.createLink(doc);\n\n        _.each(accessor.fetchAsArray(), function (linkedObj) {\n          var relatedLinker = _this2.linkConfig.relatedLinker; // We do this check, to avoid self-referencing hell when defining virtual links\n          // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n          // if a removal happens before Meteor.startup this may fail\n\n          if (relatedLinker) {\n            var link = relatedLinker.createLink(linkedObj);\n\n            if (relatedLinker.isSingle()) {\n              link.unset();\n            } else {\n              link.remove(doc);\n            }\n          }\n        });\n      });\n    }\n\n    return _handleReferenceRemovalForVirtualLinks;\n  }();\n\n  _proto._initIndex = function () {\n    function _initIndex() {\n      if (Meteor.isServer) {\n        var field = this.linkConfig.field;\n\n        if (this.linkConfig.metadata) {\n          field = field + '._id';\n        }\n\n        if (this.linkConfig.index) {\n          var _this$mainCollection$;\n\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set index on an inversed link.');\n          }\n\n          var options;\n\n          if (this.linkConfig.unique) {\n            options = {\n              unique: true\n            };\n          }\n\n          this.mainCollection._ensureIndex((_this$mainCollection$ = {}, _this$mainCollection$[field] = 1, _this$mainCollection$), options);\n        } else {\n          if (this.linkConfig.unique) {\n            var _this$mainCollection$2;\n\n            if (this.isVirtual()) {\n              throw new Meteor.Error('You cannot set unique property on an inversed link.');\n            }\n\n            this.mainCollection._ensureIndex((_this$mainCollection$2 = {}, _this$mainCollection$2[field] = 1, _this$mainCollection$2), {\n              unique: true,\n              sparse: true\n            });\n          }\n        }\n      }\n    }\n\n    return _initIndex;\n  }();\n\n  _proto._initAutoremove = function () {\n    function _initAutoremove() {\n      var _this3 = this;\n\n      if (!this.linkConfig.autoremove) {\n        return;\n      }\n\n      if (!this.isVirtual()) {\n        this.mainCollection.after.remove(function (userId, doc) {\n          _this3.getLinkedCollection().remove({\n            _id: {\n              $in: smartArguments.getIds(doc[_this3.linkStorageField])\n            }\n          });\n        });\n      } else {\n        this.mainCollection.after.remove(function (userId, doc) {\n          var linker = _this3.mainCollection.getLink(doc, _this3.linkName);\n\n          var ids = linker.find({}, {\n            fields: {\n              _id: 1\n            }\n          }).fetch().map(function (item) {\n            return item._id;\n          });\n\n          _this3.getLinkedCollection().remove({\n            _id: {\n              $in: ids\n            }\n          });\n        });\n      }\n    }\n\n    return _initAutoremove;\n  }()\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n  ;\n\n  _proto._initDenormalization = function () {\n    function _initDenormalization() {\n      var _this4 = this;\n\n      if (!this.linkConfig.denormalize || !Meteor.isServer) {\n        return;\n      }\n\n      var packageExists = !!Package['herteby:denormalize'];\n\n      if (!packageExists) {\n        throw new Meteor.Error('missing-package', \"Please add the herteby:denormalize package to your Meteor application in order to make caching work\");\n      }\n\n      var _this$linkConfig$deno = this.linkConfig.denormalize,\n          field = _this$linkConfig$deno.field,\n          body = _this$linkConfig$deno.body,\n          bypassSchema = _this$linkConfig$deno.bypassSchema;\n      var cacheConfig;\n      var referenceFieldSuffix = '';\n\n      if (this.isMeta()) {\n        referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n      }\n\n      if (this.isVirtual()) {\n        var inversedLink = this.linkConfig.relatedLinker.linkConfig;\n        var type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n        cacheConfig = {\n          type: type,\n          collection: this.linkConfig.collection,\n          fields: body,\n          referenceField: inversedLink.field + referenceFieldSuffix,\n          cacheField: field,\n          bypassSchema: !!bypassSchema\n        };\n      } else {\n        cacheConfig = {\n          type: this.linkConfig.type,\n          collection: this.linkConfig.collection,\n          fields: body,\n          referenceField: this.linkConfig.field + referenceFieldSuffix,\n          cacheField: field,\n          bypassSchema: !!bypassSchema\n        };\n      }\n\n      if (this.isVirtual()) {\n        Meteor.startup(function () {\n          _this4.mainCollection.cache(cacheConfig);\n        });\n      } else {\n        this.mainCollection.cache(cacheConfig);\n      }\n    }\n\n    return _initDenormalization;\n  }()\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isDenormalized = function () {\n    function isDenormalized() {\n      return !!this.linkConfig.denormalize;\n    }\n\n    return isDenormalized;\n  }()\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isSubBodyDenormalized = function () {\n    function isSubBodyDenormalized(body) {\n      var cacheBody = this.linkConfig.denormalize.body;\n\n      var cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n      var bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n      return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n\n    return isSubBodyDenormalized;\n  }();\n\n  (0, _createClass2.default)(Linker, [{\n    key: \"oneTypes\",\n    get: function () {\n      return ['one', '1'];\n    }\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n\n  }, {\n    key: \"strategy\",\n    get: function () {\n      var strategy = this.isMany() ? 'many' : 'one';\n\n      if (this.linkConfig.metadata) {\n        strategy += '-meta';\n      }\n\n      return strategy;\n    }\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n\n  }, {\n    key: \"linkStorageField\",\n    get: function () {\n      if (this.isVirtual()) {\n        return this.linkConfig.relatedLinker.linkStorageField;\n      }\n\n      return this.linkConfig.field;\n    }\n  }]);\n  return Linker;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linker.js"],"names":["module","export","Linker","LinkMany","link","v","LinkManyMeta","LinkOne","LinkOneMeta","LinkConfigSchema","LinkConfigDefaults","smartArguments","dot","check","_","access","mainCollection","linkName","linkConfig","Object","assign","_validateAndClean","_initAutoremove","_initDenormalization","isVirtual","autoremove","_handleReferenceRemovalForVirtualLinks","_initIndex","getLinkedCollection","collection","isMany","isSingle","isMeta","relatedLinker","metadata","contains","oneTypes","type","inversedBy","isOneResult","unique","createLink","object","helperClass","_getHelperClass","Meteor","Error","collectionName","Mongo","Collection","get","_prepareVirtual","field","_generateFieldName","linker","getLinker","startup","_name","_setupVirtualConfig","virtualLinkConfig","extend","strategy","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","console","warn","accessor","each","fetchAsArray","linkedObj","unset","isServer","index","options","_ensureIndex","sparse","_id","$in","getIds","linkStorageField","getLink","ids","find","fields","fetch","map","item","denormalize","packageExists","Package","body","bypassSchema","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","keys","bodyFields","omit","difference","length"],"mappings":"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","sourcesContent":["import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport { LinkConfigSchema, LinkConfigDefaults } from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport { check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\nimport { access } from 'fs';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() &&\n                this.linkConfig.relatedLinker.linkConfig.unique) ||\n            (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error(\n                'invalid-config',\n                `For the link ${\n                    this.linkName\n                } you did not provide a collection.`\n            );\n        }\n\n        if (typeof this.linkConfig.collection === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error(\n                    'invalid-collection',\n                    `Could not find a collection with the name: ${collectionName}`\n                );\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error(\n                        'invalid-config',\n                        `For the link ${\n                            this.linkName\n                        } you must not use the same name for the field, otherwise it will cause conflicts when fetching data`\n                    );\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const { collection, inversedBy } = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(\n                        `You tried setting up an inversed link in \"${\n                            this.mainCollection._name\n                        }\" pointing to collection: \"${\n                            collection._name\n                        }\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`\n                    );\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            });\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(\n                `There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`\n            );\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker,\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error(\n            'invalid-strategy',\n            `${this.strategy} is not a valid strategy`\n        );\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(\n            /\\./g,\n            '_'\n        );\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(\n                    `There was an error finding the link for removal for collection: \"${\n                        this.mainCollection._name\n                    }\" with link: \"${\n                        this.linkName\n                    }\". This may occur when you do a .remove() before Meteor.startup()`\n                );\n                return;\n            }\n\n            const accessor = this.createLink(doc);\n\n            _.each(accessor.fetchAsArray(), linkedObj => {\n                const { relatedLinker } = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        });\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error(\n                        'You cannot set index on an inversed link.'\n                    );\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    options = { unique: true };\n                }\n\n                this.mainCollection._ensureIndex({ [field]: 1 }, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error(\n                            'You cannot set unique property on an inversed link.'\n                        );\n                    }\n\n                    this.mainCollection._ensureIndex(\n                        {\n                            [field]: 1,\n                        },\n                        { unique: true, sparse: true }\n                    );\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField]),\n                    },\n                });\n            });\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker\n                    .find({}, { fields: { _id: 1 } })\n                    .fetch()\n                    .map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: { $in: ids },\n                });\n            });\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error(\n                'missing-package',\n                `Please add the herteby:denormalize package to your Meteor application in order to make caching work`\n            );\n        }\n\n        const { field, body, bypassSchema } = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type =\n                inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            });\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}\n"]},"sourceType":"script","hash":"67953ca39ce3b65af33015d67d44223049e7cac6"}
