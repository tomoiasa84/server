{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/herteby:denormalize/cacheCount.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/herteby:denormalize/cacheCount.js","filename":"/Users/simiontomoiaga/git/server/packages/herteby:denormalize/cacheCount.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/herteby:denormalize/cacheCount.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/herteby:denormalize/cacheCount.js"}},"code":"let _;\n\nmodule.link(\"lodash\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet addMigration;\nmodule.link(\"./migrations.js\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 1);\n\nMongo.Collection.prototype.cacheCount = function (options) {\n  check(options, {\n    collection: Mongo.Collection,\n    cacheField: String,\n    referenceField: String,\n    selector: Match.Optional(Object),\n    bypassSchema: Match.Optional(Boolean)\n  });\n  let parentCollection = options.bypassSchema && Package['aldeed:collection2'] ? this._collection : this;\n  let childCollection = options.collection;\n  let selector = options.selector || {};\n  let cacheField = options.cacheField;\n  let referenceField = options.referenceField;\n\n  let watchedFields = _.union([referenceField], _.keys(selector));\n\n  if (referenceField.split(/[.:]/)[0] == cacheField.split(/[.:]/)[0]) {\n    throw new Error('referenceField and cacheField must not share the same top field');\n  }\n\n  function update(child) {\n    let ref = _.get(child, referenceField);\n\n    if (ref) {\n      let select = _.merge(selector, {\n        [referenceField]: ref\n      });\n\n      parentCollection.update({\n        _id: ref\n      }, {\n        $set: {\n          [cacheField]: childCollection.find(select).count()\n        }\n      });\n    }\n  }\n\n  function insert(userId, parent) {\n    let select = _.merge(selector, {\n      [referenceField]: parent._id\n    });\n\n    parentCollection.update(parent._id, {\n      $set: {\n        [cacheField]: childCollection.find(select).count()\n      }\n    });\n  }\n\n  addMigration(parentCollection, insert, options);\n  parentCollection.after.insert(insert);\n  childCollection.after.insert((userId, child) => {\n    update(child);\n  });\n  childCollection.after.update((userId, child, changedFields) => {\n    if (_.intersection(changedFields, watchedFields).length) {\n      update(child);\n      update(this.previous);\n    }\n  });\n  childCollection.after.remove((userId, child) => {\n    update(child);\n  });\n};","map":{"version":3,"sources":["packages/herteby:denormalize/cacheCount.js"],"names":["_","module","link","default","v","addMigration","Mongo","Collection","prototype","cacheCount","options","check","collection","cacheField","String","referenceField","selector","Match","Optional","Object","bypassSchema","Boolean","parentCollection","Package","_collection","childCollection","watchedFields","union","keys","split","Error","update","child","ref","get","select","merge","_id","$set","find","count","insert","userId","parent","after","changedFields","intersection","length","previous","remove"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport {addMigration} from './migrations.js'\n\nMongo.Collection.prototype.cacheCount = function(options) {\n  check(options, {\n    collection:Mongo.Collection,\n    cacheField:String,\n    referenceField:String,\n    selector:Match.Optional(Object),\n    bypassSchema:Match.Optional(Boolean)\n  })\n\n  let parentCollection = options.bypassSchema && Package['aldeed:collection2'] ? this._collection : this\n  let childCollection = options.collection\n  let selector = options.selector || {}\n  let cacheField = options.cacheField\n  let referenceField = options.referenceField\n  let watchedFields = _.union([referenceField], _.keys(selector))\n\n  if(referenceField.split(/[.:]/)[0] == cacheField.split(/[.:]/)[0]){\n    throw new Error('referenceField and cacheField must not share the same top field')\n  }\n\n  function update(child){\n    let ref = _.get(child, referenceField)\n    if(ref){\n      let select = _.merge(selector, {[referenceField]:ref})\n      parentCollection.update({_id:ref}, {$set:{[cacheField]:childCollection.find(select).count()}})\n    }\n  }\n\n  function insert(userId, parent){\n    let select = _.merge(selector, {[referenceField]:parent._id})\n    parentCollection.update(parent._id, {$set:{[cacheField]:childCollection.find(select).count()}})\n  }\n\n  addMigration(parentCollection, insert, options)\n\n  parentCollection.after.insert(insert)\n  \n  childCollection.after.insert((userId, child) => {\n    update(child)\n  })\n\n  childCollection.after.update((userId, child, changedFields) => {\n    if(_.intersection(changedFields, watchedFields).length){\n      update(child)\n      update(this.previous)\n    }\n  })\n\n  childCollection.after.remove((userId, child) => {\n    update(child)\n  })\n}"]},"sourceType":"script","hash":"85f3f896abec81c9b1b834ca8802f3a278bdcb7e"}
