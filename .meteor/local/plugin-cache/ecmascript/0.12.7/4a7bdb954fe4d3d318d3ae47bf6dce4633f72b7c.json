{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return LinkMany;\n  }\n});\nvar Link;\nmodule.link(\"./base.js\", {\n  \"default\": function (v) {\n    Link = v;\n  }\n}, 0);\nvar SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  \"default\": function (v) {\n    SmartArgs = v;\n  }\n}, 1);\n\nvar LinkMany =\n/*#__PURE__*/\nfunction (_Link) {\n  (0, _inheritsLoose2.default)(LinkMany, _Link);\n\n  function LinkMany() {\n    return _Link.apply(this, arguments) || this;\n  }\n\n  var _proto = LinkMany.prototype;\n\n  _proto.clean = function () {\n    function clean() {\n      if (!this.object[this.linkStorageField]) {\n        this.object[this.linkStorageField] = [];\n      }\n    }\n\n    return clean;\n  }()\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n  ;\n\n  _proto.add = function () {\n    function add(what) {\n      var _$addToSet;\n\n      if (this.isVirtual) {\n        this._virtualAction('add', what);\n\n        return this;\n      } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n      this.clean();\n\n      var _ids = this.identifyIds(what, true);\n\n      this._validateIds(_ids);\n\n      var field = this.linkStorageField; // update the field\n\n      this.object[field] = _.union(this.object[field], _ids); // update the db\n\n      var modifier = {\n        $addToSet: (_$addToSet = {}, _$addToSet[field] = {\n          $each: _ids\n        }, _$addToSet)\n      };\n      this.linker.mainCollection.update(this.object._id, modifier);\n      return this;\n    }\n\n    return add;\n  }()\n  /**\n   * @param what\n   */\n  ;\n\n  _proto.remove = function () {\n    function remove(what) {\n      var _$pullAll;\n\n      if (this.isVirtual) {\n        this._virtualAction('remove', what);\n\n        return this;\n      }\n\n      if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n      this.clean();\n      var field = this.linkStorageField;\n\n      var _ids = this.identifyIds(what); // update the field\n\n\n      this.object[field] = _.filter(this.object[field], function (_id) {\n        return !_.contains(_ids, _id);\n      }); // update the db\n\n      var modifier = {\n        $pullAll: (_$pullAll = {}, _$pullAll[field] = _ids, _$pullAll)\n      };\n      this.linker.mainCollection.update(this.object._id, modifier);\n      return this;\n    }\n\n    return remove;\n  }();\n\n  _proto.set = function () {\n    function set(what) {\n      if (this.isVirtual) {\n        this._virtualAction('set', what);\n\n        return this;\n      }\n\n      throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    return set;\n  }();\n\n  _proto.unset = function () {\n    function unset(what) {\n      if (this.isVirtual) {\n        this._virtualAction('unset', what);\n\n        return this;\n      }\n\n      throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    return unset;\n  }();\n\n  return LinkMany;\n}(Link);","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js"],"names":["module","export","LinkMany","Link","link","v","SmartArgs","clean","object","linkStorageField","add","what","isVirtual","_virtualAction","_ids","identifyIds","_validateIds","field","_","union","modifier","$addToSet","$each","linker","mainCollection","update","_id","remove","Meteor","Error","filter","contains","$pullAll","set","unset"],"mappings":";;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,QAAJ;AAAA;AAAT,CAAd;AAAsC,IAAIC,IAAJ;AAASH,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAAA,uBAASC,CAAT,EAAW;AAACF,IAAAA,IAAI,GAACE,CAAL;AAAO;AAAnB,CAAxB,EAA6C,CAA7C;AAAgD,IAAIC,SAAJ;AAAcN,MAAM,CAACI,IAAP,CAAY,yBAAZ,EAAsC;AAAA,uBAASC,CAAT,EAAW;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;AAAxB,CAAtC,EAAgE,CAAhE;;IAGxFH,Q;;;;;;;;;;;SACjBK,K;AAAA,qBAAQ;AACJ,UAAI,CAAC,KAAKC,MAAL,CAAY,KAAKC,gBAAjB,CAAL,EAAyC;AACrC,aAAKD,MAAL,CAAY,KAAKC,gBAAjB,IAAqC,EAArC;AACH;AACJ;;;;AAED;;;;;;SAIAC,G;AAAA,iBAAIC,IAAJ,EAAU;AAAA;;AACN,UAAI,KAAKC,SAAT,EAAoB;AAChB,aAAKC,cAAL,CAAoB,KAApB,EAA2BF,IAA3B;;AACA,eAAO,IAAP;AACH,OAJK,CAMN;;;AAEA,WAAKJ,KAAL;;AAEA,UAAMO,IAAI,GAAG,KAAKC,WAAL,CAAiBJ,IAAjB,EAAuB,IAAvB,CAAb;;AACA,WAAKK,YAAL,CAAkBF,IAAlB;;AAEA,UAAMG,KAAK,GAAG,KAAKR,gBAAnB,CAbM,CAeN;;AACA,WAAKD,MAAL,CAAYS,KAAZ,IAAqBC,CAAC,CAACC,KAAF,CAAQ,KAAKX,MAAL,CAAYS,KAAZ,CAAR,EAA4BH,IAA5B,CAArB,CAhBM,CAkBN;;AACA,UAAIM,QAAQ,GAAG;AACXC,QAAAA,SAAS,+BACJJ,KADI,IACI;AAACK,UAAAA,KAAK,EAAER;AAAR,SADJ;AADE,OAAf;AAMA,WAAKS,MAAL,CAAYC,cAAZ,CAA2BC,MAA3B,CAAkC,KAAKjB,MAAL,CAAYkB,GAA9C,EAAmDN,QAAnD;AAEA,aAAO,IAAP;AACH;;;;AAED;;;;;SAGAO,M;AAAA,oBAAOhB,IAAP,EAAa;AAAA;;AACT,UAAI,KAAKC,SAAT,EAAoB;AAChB,aAAKC,cAAL,CAAoB,QAApB,EAA8BF,IAA9B;;AACA,eAAO,IAAP;AACH;;AAED,UAAI,KAAKC,SAAT,EAAoB,MAAM,IAAIgB,MAAM,CAACC,KAAX,CAAiB,aAAjB,EAAgC,yEAAhC,CAAN;AAEpB,WAAKtB,KAAL;AACA,UAAMU,KAAK,GAAG,KAAKR,gBAAnB;;AAEA,UAAMK,IAAI,GAAG,KAAKC,WAAL,CAAiBJ,IAAjB,CAAb,CAXS,CAaT;;;AACA,WAAKH,MAAL,CAAYS,KAAZ,IAAqBC,CAAC,CAACY,MAAF,CAAS,KAAKtB,MAAL,CAAYS,KAAZ,CAAT,EAA6B,UAAAS,GAAG;AAAA,eAAI,CAACR,CAAC,CAACa,QAAF,CAAWjB,IAAX,EAAiBY,GAAjB,CAAL;AAAA,OAAhC,CAArB,CAdS,CAgBT;;AACA,UAAIN,QAAQ,GAAG;AACXY,QAAAA,QAAQ,6BACHf,KADG,IACKH,IADL;AADG,OAAf;AAMA,WAAKS,MAAL,CAAYC,cAAZ,CAA2BC,MAA3B,CAAkC,KAAKjB,MAAL,CAAYkB,GAA9C,EAAmDN,QAAnD;AAEA,aAAO,IAAP;AACH;;;;;SAEDa,G;AAAA,iBAAItB,IAAJ,EAAU;AACN,UAAI,KAAKC,SAAT,EAAoB;AAChB,aAAKC,cAAL,CAAoB,KAApB,EAA2BF,IAA3B;;AACA,eAAO,IAAP;AACH;;AAED,YAAM,IAAIiB,MAAM,CAACC,KAAX,CAAiB,iBAAjB,EAAoC,0GAApC,CAAN;AACH;;;;;SAEDK,K;AAAA,mBAAMvB,IAAN,EAAY;AACR,UAAI,KAAKC,SAAT,EAAoB;AAChB,aAAKC,cAAL,CAAoB,OAApB,EAA6BF,IAA7B;;AACA,eAAO,IAAP;AACH;;AAED,YAAM,IAAIiB,MAAM,CAACC,KAAX,CAAiB,iBAAjB,EAAoC,4GAApC,CAAN;AACH;;;;;;EAxFiC1B,I","sourcesContent":["import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}"]},"sourceType":"script","hash":"4a7bdb954fe4d3d318d3ae47bf6dce4633f72b7c"}
