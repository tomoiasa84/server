{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js"}},"code":"let check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 1);\n\nfunction defaultFilterFunction(_ref) {\n  let {\n    filters,\n    options,\n    params\n  } = _ref;\n\n  if (params.filters) {\n    Object.assign(filters, params.filters);\n  }\n\n  if (params.options) {\n    Object.assign(options, params.options);\n  }\n}\n\nfunction applyFilterRecursive(data) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (isRoot && !_.isFunction(data.$filter)) {\n    data.$filter = defaultFilterFunction;\n  }\n\n  if (data.$filter) {\n    check(data.$filter, Match.OneOf(Function, [Function]));\n    data.$filters = data.$filters || {};\n    data.$options = data.$options || {};\n\n    if (_.isArray(data.$filter)) {\n      data.$filter.forEach(filter => {\n        filter.call(null, {\n          filters: data.$filters,\n          options: data.$options,\n          params: params\n        });\n      });\n    } else {\n      data.$filter({\n        filters: data.$filters,\n        options: data.$options,\n        params: params\n      });\n    }\n\n    data.$filter = null;\n    delete data.$filter;\n  }\n\n  _.each(data, (value, key) => {\n    if (_.isObject(value)) {\n      return applyFilterRecursive(value, params);\n    }\n  });\n}\n\nfunction applyPagination(body, _params) {\n  if (body['$paginate'] && _params) {\n    if (!body.$options) {\n      body.$options = {};\n    }\n\n    if (_params.limit) {\n      _.extend(body.$options, {\n        limit: _params.limit\n      });\n    }\n\n    if (_params.skip) {\n      _.extend(body.$options, {\n        skip: _params.skip\n      });\n    }\n\n    delete body['$paginate'];\n  }\n}\n\nmodule.exportDefault(function (_body) {\n  let _params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let body = deepClone(_body);\n  let params = deepClone(_params);\n  applyPagination(body, params);\n  applyFilterRecursive(body, params, true);\n  return body;\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js"],"names":["check","Match","module","link","v","deepClone","default","defaultFilterFunction","filters","options","params","Object","assign","applyFilterRecursive","data","isRoot","_","isFunction","$filter","OneOf","Function","$filters","$options","isArray","forEach","filter","call","each","value","key","isObject","applyPagination","body","_params","limit","extend","skip","exportDefault","_body"],"mappings":"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","sourcesContent":["import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n"]},"sourceType":"script","hash":"f4aab0c6abb77d956832ab99b35da3beae07d3e1"}
