{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"}},"code":"module.export({\n  \"default\": function () {\n    return cleanReducerLeftovers;\n  }\n});\nvar dot;\nmodule.link(\"dot-object\", {\n  \"default\": function (v) {\n    dot = v;\n  }\n}, 0);\n\nfunction cleanReducerLeftovers(root, results) {\n  _.each(root.collectionNodes, function (node) {\n    if (node.scheduledForDeletion) {\n      results.forEach(function (result) {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, function (node) {\n    var childResults;\n\n    if (node.isOneResult) {\n      childResults = results.map(function (result) {\n        return result[node.linkName];\n      }).filter(function (element) {\n        return !!element;\n      });\n    } else {\n      childResults = _.flatten(results.map(function (result) {\n        return result[node.linkName];\n      }).filter(function (element) {\n        return !!element;\n      }));\n    }\n\n    cleanReducerLeftovers(node, childResults);\n  });\n\n  _.each(root.fieldNodes, function (node) {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, function (node) {\n    if (node.scheduledForDeletion) {\n      results.forEach(function (result) {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  var snapCacheField = root.snapCaches[parts[0]];\n  var fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(function (result) {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.filter(function (result) {\n    return !!result[fieldName];\n  }).map(function (result) {\n    return result[fieldName];\n  }), root);\n  results.forEach(function (result) {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js"],"names":["module","export","cleanReducerLeftovers","dot","link","v","root","results","_","each","collectionNodes","node","scheduledForDeletion","forEach","result","linkName","childResults","isOneResult","map","filter","element","flatten","fieldNodes","cleanNestedFields","name","split","reducerNodes","parts","snapCacheField","snapCaches","fieldName","length","isObject","shift","keys"],"mappings":"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","sourcesContent":["import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root, results) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        let childResults;\n        if (node.isOneResult) {\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n        } else {\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n        }\n\n        cleanReducerLeftovers(node, childResults);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), results, root);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(\n        parts, \n        results\n            .filter(result => !!result[fieldName])\n            .map(result => result[fieldName]),\n        root\n    );\n    \n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n"]},"sourceType":"script","hash":"2e153947a2bc8d560bb9d227b8a89f26eb247947"}
