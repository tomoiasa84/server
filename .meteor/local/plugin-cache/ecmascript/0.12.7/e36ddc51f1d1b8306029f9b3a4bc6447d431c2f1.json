{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","passPerPreset":false,"envName":"development","cwd":"/Users/simiontomoiaga/git/server","root":"/Users/simiontomoiaga/git/server","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/simiontomoiaga/git/server/packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js"}},"code":"module.export({\n  default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n  _.each(root.collectionNodes, node => {\n    applyReducers(node, params);\n  });\n\n  const processedReducers = [];\n  let reducersQueue = [...root.reducerNodes]; // TODO: find out if there's an infinite reducer inter-deendency\n\n  while (reducersQueue.length) {\n    const reducerNode = reducersQueue.shift(); // If this reducer depends on other reducers\n\n    if (reducerNode.dependencies.length) {\n      // If there is an unprocessed reducer, move it at the end of the queue\n      const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n\n      if (allDependenciesComputed) {\n        root.results.forEach(result => {\n          reducerNode.compute(result, params);\n        });\n        processedReducers.push(reducerNode.name);\n      } else {\n        // Move it at the end of the queue\n        reducersQueue.push(reducerNode);\n      }\n    } else {\n      root.results.forEach(result => {\n        reducerNode.compute(result, params);\n      });\n      processedReducers.push(reducerNode.name);\n    }\n  }\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js"],"names":["module","export","default","applyReducers","root","params","_","each","collectionNodes","node","processedReducers","reducersQueue","reducerNodes","length","reducerNode","shift","dependencies","allDependenciesComputed","all","dep","includes","results","forEach","result","compute","push","name"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;;AAAe,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AAChDC,EAAAA,CAAC,CAACC,IAAF,CAAOH,IAAI,CAACI,eAAZ,EAA6BC,IAAI,IAAI;AACjCN,IAAAA,aAAa,CAACM,IAAD,EAAOJ,MAAP,CAAb;AACH,GAFD;;AAIA,QAAMK,iBAAiB,GAAG,EAA1B;AACA,MAAIC,aAAa,GAAG,CAAC,GAAGP,IAAI,CAACQ,YAAT,CAApB,CANgD,CAQhD;;AAEA,SAAOD,aAAa,CAACE,MAArB,EAA6B;AACzB,UAAMC,WAAW,GAAGH,aAAa,CAACI,KAAd,EAApB,CADyB,CAGzB;;AACA,QAAID,WAAW,CAACE,YAAZ,CAAyBH,MAA7B,EAAqC;AACjC;AACA,YAAMI,uBAAuB,GAAGX,CAAC,CAACY,GAAF,CAAMJ,WAAW,CAACE,YAAlB,EAAgCG,GAAG,IAAIT,iBAAiB,CAACU,QAAlB,CAA2BD,GAA3B,CAAvC,CAAhC;;AACA,UAAIF,uBAAJ,EAA6B;AACzBb,QAAAA,IAAI,CAACiB,OAAL,CAAaC,OAAb,CAAqBC,MAAM,IAAI;AAC3BT,UAAAA,WAAW,CAACU,OAAZ,CAAoBD,MAApB,EAA4BlB,MAA5B;AACH,SAFD;AAGAK,QAAAA,iBAAiB,CAACe,IAAlB,CAAuBX,WAAW,CAACY,IAAnC;AACH,OALD,MAKO;AACH;AACAf,QAAAA,aAAa,CAACc,IAAd,CAAmBX,WAAnB;AACH;AACJ,KAZD,MAYO;AACHV,MAAAA,IAAI,CAACiB,OAAL,CAAaC,OAAb,CAAqBC,MAAM,IAAI;AAC3BT,QAAAA,WAAW,CAACU,OAAZ,CAAoBD,MAApB,EAA4BlB,MAA5B;AACH,OAFD;AAIAK,MAAAA,iBAAiB,CAACe,IAAlB,CAAuBX,WAAW,CAACY,IAAnC;AACH;AACJ;AACJ","sourcesContent":["export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    const processedReducers = [];\n    let reducersQueue = [...root.reducerNodes];\n\n    // TODO: find out if there's an infinite reducer inter-deendency\n\n    while (reducersQueue.length) {\n        const reducerNode = reducersQueue.shift();\n\n        // If this reducer depends on other reducers\n        if (reducerNode.dependencies.length) {\n            // If there is an unprocessed reducer, move it at the end of the queue\n            const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n            if (allDependenciesComputed) {\n                root.results.forEach(result => {\n                    reducerNode.compute(result, params);\n                });\n                processedReducers.push(reducerNode.name);\n            } else {\n                // Move it at the end of the queue\n                reducersQueue.push(reducerNode);\n            }\n        } else {\n            root.results.forEach(result => {\n                reducerNode.compute(result, params);\n            });\n\n            processedReducers.push(reducerNode.name);\n        }\n    }\n}\n"]},"sourceType":"script","hash":"e36ddc51f1d1b8306029f9b3a4bc6447d431c2f1"}
