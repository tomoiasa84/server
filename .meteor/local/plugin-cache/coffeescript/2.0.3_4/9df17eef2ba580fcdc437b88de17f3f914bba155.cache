{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nextendPublish(function (name, func, options) {\n  var newFunc;\n\n  newFunc = function () {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = \"_sub_\" + publish._subscriptionId;\n    enabled = false;\n\n    publish.enableScope = function () {\n      return enabled = true;\n    };\n\n    originalAdded = publish.added;\n\n    publish.added = function (collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n\n    originalChanged = publish.changed;\n\n    publish.changed = function (collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return func.apply(publish, args);\n  };\n\n  return [name, newFunc, options];\n});","sourceMap":{"version":3,"sources":["/packages/peerlibrary_subscription-scope/server.coffee","/server.coffee"],"names":["extendPublish","name","func","options","newFunc","enabled","originalAdded","originalChanged","publish","scopeFieldName","_subscriptionId","enableScope","added","collectionName","id","fields","_","clone","call","changed","args","apply"],"mappings":";AAAAA,cAAc,UAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAA;AACZ,MAAAC,OAAA;;AAAAA,YAAU,YAAA;AACR,QAAAC,OAAA,EAAAC,aAAA,EAAAC,eAAA,EAAAC,OAAA,EAAAC,cAAA;AAAAD,cAAU,IAAV;AAEAC,+BAAyBD,QAAQE,eAAjC;AAEAL,cAAU,KAAV;;AAEAG,YAAQG,WAAR,GAAsB,YAAA;ACApB,aDCAN,UAAU,ICDV;ADAoB,KAAtB;;AAGAC,oBAAgBE,QAAQI,KAAxB;;AACAJ,YAAQI,KAAR,GAAgB,UAACC,cAAD,EAAiBC,EAAjB,EAAqBC,MAArB,EAAA;ACAd;ADEA,UAAGV,OAAH,EAAA;AACEU,iBAASC,EAAEC,KAAF,CAAQF,MAAR,CAAT;AACAA,eAAON,cAAP,IAAyB,CAAzB;ACAD;;AACD,aDCAH,cAAcY,IAAd,CAAmB,IAAnB,EAAsBL,cAAtB,EAAsCC,EAAtC,EAA0CC,MAA1C,CCDA;ADLc,KAAhB;;AAQAR,sBAAkBC,QAAQW,OAA1B;;AACAX,YAAQW,OAAR,GAAkB,UAACN,cAAD,EAAiBC,EAAjB,EAAqBC,MAArB,EAAA;ACAhB;ADEA,UAAGV,WAAYI,kBAAkBM,MAAjC,EAAA;AACEA,iBAASC,EAAEC,KAAF,CAAQF,MAAR,CAAT;AACA,eAAOA,OAAON,cAAP,CAAP;ACAD;;AACD,aDCAF,gBAAgBW,IAAhB,CAAqB,IAArB,EAAwBL,cAAxB,EAAwCC,EAAxC,EAA4CC,MAA5C,CCDA;ADLgB,KAAlB;;AApBQ,sCAACK,IAAD;AAACA,UAAD;AAAA;;AC2BR,WDCAlB,KAAKmB,KAAL,CAAWb,OAAX,EAAoBY,IAApB,CCDA;AD3BQ,GAAV;;AC6BA,SDCA,CAACnB,IAAD,EAAOG,OAAP,EAAgBD,OAAhB,CCDA;AD9BF,CAAA","file":"packages/peerlibrary:subscription-scope/server.coffee.map","sourcesContent":["extendPublish (name, func, options) ->\n  newFunc = (args...) ->\n    publish = @\n\n    scopeFieldName = \"_sub_#{publish._subscriptionId}\"\n\n    enabled = false\n\n    publish.enableScope = ->\n      enabled = true\n\n    originalAdded = publish.added\n    publish.added = (collectionName, id, fields) ->\n      # Add our scoping field.\n      if enabled\n        fields = _.clone fields\n        fields[scopeFieldName] = 1\n\n      originalAdded.call @, collectionName, id, fields\n\n    originalChanged = publish.changed\n    publish.changed = (collectionName, id, fields) ->\n      # We do not allow changes to our scoping field.\n      if enabled and scopeFieldName of fields\n        fields = _.clone fields\n        delete fields[scopeFieldName]\n\n      originalChanged.call @, collectionName, id, fields\n\n    func.apply publish, args\n\n  [name, newFunc, options]\n","extendPublish(function(name, func, options) {\n  var newFunc;\n  newFunc = function(...args) {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = `_sub_${publish._subscriptionId}`;\n    enabled = false;\n    publish.enableScope = function() {\n      return enabled = true;\n    };\n    originalAdded = publish.added;\n    publish.added = function(collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n    originalChanged = publish.changed;\n    publish.changed = function(collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n    return func.apply(publish, args);\n  };\n  return [name, newFunc, options];\n});\n"]}}