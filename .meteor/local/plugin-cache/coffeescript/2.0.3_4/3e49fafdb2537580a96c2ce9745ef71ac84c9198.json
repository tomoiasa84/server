{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/peerlibrary:subscription-scope/client.coffee","filenameRelative":"packages/peerlibrary:subscription-scope/client.coffee","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/peerlibrary:subscription-scope/client.coffee.map","sourceFileName":"packages/peerlibrary:subscription-scope/client.coffee","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"client"},"ignored":false,"code":"var Connection, originalCompileProjection, originalSubscribe;\nConnection = Meteor.connection.constructor;\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function (...args) {\n  var handle;\n  handle = originalSubscribe.apply(this, args);\n\n  handle.scopeQuery = function () {\n    var query;\n    query = {};\n    query[`_sub_${handle.subscriptionId}`] = {\n      $exists: true\n    };\n    return query;\n  };\n\n  return handle;\n}; // Recreate the convenience method.\n\n\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function (fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function (obj) {\n    var field, res;\n    res = fun(obj);\n\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n\n    return res;\n  };\n};","map":{"version":3,"sources":["packages/peerlibrary:subscription-scope/client.coffee"],"names":["Connection","originalCompileProjection","originalSubscribe","Meteor","connection","constructor","prototype","subscribe","args","handle","apply","scopeQuery","query","subscriptionId","$exists","_","bind","LocalCollection","_compileProjection","fields","fun","obj","field","res","lastIndexOf"],"mappings":"AAAA,IAAIA,UAAJ,EAAgBC,yBAAhB,EAA2CC,iBAA3C;AAEAF,aAAaG,OAAOC,UAAP,CAAkBC,WAA/B;AAEAH,oBAAoBF,WAAWM,SAAX,CAAqBC,SAAzC;;AAEAP,WAAWM,SAAX,CAAqBC,SAArB,GAAiC,UAAS,GAAGC,IAAZ,EAAkB;AACjD,MAAIC,MAAJ;AACAA,WAASP,kBAAkBQ,KAAlB,CAAwB,IAAxB,EAA8BF,IAA9B,CAAT;;AACAC,SAAOE,UAAP,GAAoB,YAAW;AAC7B,QAAIC,KAAJ;AACAA,YAAQ,EAAR;AACAA,UAAO,QAAOH,OAAOI,cAAe,EAApC,IAAyC;AACvCC,eAAS;AAD8B,KAAzC;AAGA,WAAOF,KAAP;AACD,GAPD;;AAQA,SAAOH,MAAP;AACD,CAZD,C,CAcA;;;AACAN,OAAOI,SAAP,GAAmBQ,EAAEC,IAAF,CAAOb,OAAOC,UAAP,CAAkBG,SAAzB,EAAoCJ,OAAOC,UAA3C,CAAnB;AAEAH,4BAA4BgB,gBAAgBC,kBAA5C;;AAEAD,gBAAgBC,kBAAhB,GAAqC,UAASC,MAAT,EAAiB;AACpD,MAAIC,GAAJ;AACAA,QAAMnB,0BAA0BkB,MAA1B,CAAN;AACA,SAAO,UAASE,GAAT,EAAc;AACnB,QAAIC,KAAJ,EAAWC,GAAX;AACAA,UAAMH,IAAIC,GAAJ,CAAN;;AACA,SAAKC,KAAL,IAAcC,GAAd,EAAmB;AACjB,UAAID,MAAME,WAAN,CAAkB,OAAlB,EAA2B,CAA3B,MAAkC,CAAtC,EAAyC;AACvC,eAAOD,IAAID,KAAJ,CAAP;AACD;AACF;;AACD,WAAOC,GAAP;AACD,GATD;AAUD,CAbD","file":"packages/peerlibrary:subscription-scope/client.coffee.map","sourcesContent":["var Connection, originalCompileProjection, originalSubscribe;\n\nConnection = Meteor.connection.constructor;\n\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function(...args) {\n  var handle;\n  handle = originalSubscribe.apply(this, args);\n  handle.scopeQuery = function() {\n    var query;\n    query = {};\n    query[`_sub_${handle.subscriptionId}`] = {\n      $exists: true\n    };\n    return query;\n  };\n  return handle;\n};\n\n// Recreate the convenience method.\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\n\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function(fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function(obj) {\n    var field, res;\n    res = fun(obj);\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n    return res;\n  };\n};\n"]},"hash":"3e49fafdb2537580a96c2ce9745ef71ac84c9198"}
