{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/peerlibrary:subscription-scope/server.coffee","filenameRelative":"packages/peerlibrary:subscription-scope/server.coffee","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/peerlibrary:subscription-scope/server.coffee.map","sourceFileName":"packages/peerlibrary:subscription-scope/server.coffee","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"extendPublish(function (name, func, options) {\n  var newFunc;\n\n  newFunc = function (...args) {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = `_sub_${publish._subscriptionId}`;\n    enabled = false;\n\n    publish.enableScope = function () {\n      return enabled = true;\n    };\n\n    originalAdded = publish.added;\n\n    publish.added = function (collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n\n    originalChanged = publish.changed;\n\n    publish.changed = function (collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n\n    return func.apply(publish, args);\n  };\n\n  return [name, newFunc, options];\n});","map":{"version":3,"sources":["packages/peerlibrary:subscription-scope/server.coffee"],"names":["extendPublish","name","func","options","newFunc","args","enabled","originalAdded","originalChanged","publish","scopeFieldName","_subscriptionId","enableScope","added","collectionName","id","fields","_","clone","call","changed","apply"],"mappings":"AAAAA,cAAc,UAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1C,MAAIC,OAAJ;;AACAA,YAAU,UAAS,GAAGC,IAAZ,EAAkB;AAC1B,QAAIC,OAAJ,EAAaC,aAAb,EAA4BC,eAA5B,EAA6CC,OAA7C,EAAsDC,cAAtD;AACAD,cAAU,IAAV;AACAC,qBAAkB,QAAOD,QAAQE,eAAgB,EAAjD;AACAL,cAAU,KAAV;;AACAG,YAAQG,WAAR,GAAsB,YAAW;AAC/B,aAAON,UAAU,IAAjB;AACD,KAFD;;AAGAC,oBAAgBE,QAAQI,KAAxB;;AACAJ,YAAQI,KAAR,GAAgB,UAASC,cAAT,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqC;AACnD;AACA,UAAIV,OAAJ,EAAa;AACXU,iBAASC,EAAEC,KAAF,CAAQF,MAAR,CAAT;AACAA,eAAON,cAAP,IAAyB,CAAzB;AACD;;AACD,aAAOH,cAAcY,IAAd,CAAmB,IAAnB,EAAyBL,cAAzB,EAAyCC,EAAzC,EAA6CC,MAA7C,CAAP;AACD,KAPD;;AAQAR,sBAAkBC,QAAQW,OAA1B;;AACAX,YAAQW,OAAR,GAAkB,UAASN,cAAT,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqC;AACrD;AACA,UAAIV,WAAWI,kBAAkBM,MAAjC,EAAyC;AACvCA,iBAASC,EAAEC,KAAF,CAAQF,MAAR,CAAT;AACA,eAAOA,OAAON,cAAP,CAAP;AACD;;AACD,aAAOF,gBAAgBW,IAAhB,CAAqB,IAArB,EAA2BL,cAA3B,EAA2CC,EAA3C,EAA+CC,MAA/C,CAAP;AACD,KAPD;;AAQA,WAAOd,KAAKmB,KAAL,CAAWZ,OAAX,EAAoBJ,IAApB,CAAP;AACD,GA3BD;;AA4BA,SAAO,CAACJ,IAAD,EAAOG,OAAP,EAAgBD,OAAhB,CAAP;AACD,CA/BD","file":"packages/peerlibrary:subscription-scope/server.coffee.map","sourcesContent":["extendPublish(function(name, func, options) {\n  var newFunc;\n  newFunc = function(...args) {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = `_sub_${publish._subscriptionId}`;\n    enabled = false;\n    publish.enableScope = function() {\n      return enabled = true;\n    };\n    originalAdded = publish.added;\n    publish.added = function(collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n    originalChanged = publish.changed;\n    publish.changed = function(collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n    return func.apply(publish, args);\n  };\n  return [name, newFunc, options];\n});\n"]},"hash":"4616706c375ced6b5a794e1c2d80b7735aac11c0"}
