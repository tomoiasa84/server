{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Connection, originalCompileProjection, originalSubscribe;\nConnection = Meteor.connection.constructor;\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function (...args) {\n  var handle;\n  handle = originalSubscribe.apply(this, args);\n\n  handle.scopeQuery = function () {\n    var query;\n    query = {};\n    query[`_sub_${handle.subscriptionId}`] = {\n      $exists: true\n    };\n    return query;\n  };\n\n  return handle;\n}; // Recreate the convenience method.\n\n\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function (fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function (obj) {\n    var field, res;\n    res = fun(obj);\n\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n\n    return res;\n  };\n};","sourceMap":{"version":3,"sources":["/packages/peerlibrary_subscription-scope/client.coffee","/client.coffee"],"names":["Connection","originalCompileProjection","originalSubscribe","Meteor","connection","constructor","prototype","subscribe","args","handle","apply","scopeQuery","query","subscriptionId","$exists","_","bind","LocalCollection","_compileProjection","fields","fun","obj","field","res","lastIndexOf"],"mappings":";AAAA,IAAAA,UAAA,EAAAC,yBAAA,EAAAC,iBAAA;AAAAF,aAAaG,OAAOC,UAAP,CAAkBC,WAA/B;AAEAH,oBAAoBF,WAAUM,SAAV,CAAYC,SAAhC;;AACAP,WAAUM,SAAV,CAAYC,SAAZ,GAAwB,UAAA,GAACC,IAAD,EAAA;AACtB,MAAAC,MAAA;AAAAA,WAASP,kBAAkBQ,KAAlB,CAAwB,IAAxB,EAA2BF,IAA3B,CAAT;;AAEAC,SAAOE,UAAP,GAAoB,YAAA;AAClB,QAAAC,KAAA;AAAAA,YAAQ,EAAR;AACAA,UAAM,QAAQH,OAAOI,cAAf,EAAN,IACE;AAAAC,eAAS;AAAT,KADF;ACOA,WDLAF,KCKA;ADTkB,GAApB;;ACWA,SDLAH,MCKA;ADdsB,CAAxB,C,CCiBA;;;ADLAN,OAAOI,SAAP,GAAmBQ,EAAEC,IAAF,CAAOb,OAAOC,UAAP,CAAkBG,SAAzB,EAAoCJ,OAAOC,UAA3C,CAAnB;AAEAH,4BAA4BgB,gBAAgBC,kBAA5C;;AACAD,gBAAgBC,kBAAhB,GAAqC,UAACC,MAAD,EAAA;AACnC,MAAAC,GAAA;AAAAA,QAAMnB,0BAA0BkB,MAA1B,CAAN;ACSA,SDPA,UAACE,GAAD,EAAA;AACE,QAAAC,KAAA,EAAAC,GAAA;AAAAA,UAAMH,IAAIC,GAAJ,CAAN;;AAEA,SAAAC,KAAA,IAAAC,GAAA,EAAA;ACQE,UDRoBD,MAAME,WAAN,CAAkB,OAAlB,EAA2B,CAA3B,MAAiC,CCQrD,EDRqD;AACrD,eAAOD,IAAID,KAAJ,CAAP;ACSC;ADVH;;ACYA,WDTAC,GCSA;ADfF,GCOA;ADVmC,CAArC","file":"packages/peerlibrary:subscription-scope/client.coffee.map","sourcesContent":["Connection = Meteor.connection.constructor\n\noriginalSubscribe = Connection::subscribe\nConnection::subscribe = (args...) ->\n  handle = originalSubscribe.apply @, args\n\n  handle.scopeQuery = ->\n    query = {}\n    query[\"_sub_#{handle.subscriptionId}\"] =\n      $exists: true\n    query\n\n  handle\n\n# Recreate the convenience method.\nMeteor.subscribe = _.bind Meteor.connection.subscribe, Meteor.connection\n\noriginalCompileProjection = LocalCollection._compileProjection\nLocalCollection._compileProjection = (fields) ->\n  fun = originalCompileProjection fields\n\n  (obj) ->\n    res = fun obj\n\n    for field of res when field.lastIndexOf('_sub_', 0) is 0\n      delete res[field]\n\n    res\n","var Connection, originalCompileProjection, originalSubscribe;\n\nConnection = Meteor.connection.constructor;\n\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function(...args) {\n  var handle;\n  handle = originalSubscribe.apply(this, args);\n  handle.scopeQuery = function() {\n    var query;\n    query = {};\n    query[`_sub_${handle.subscriptionId}`] = {\n      $exists: true\n    };\n    return query;\n  };\n  return handle;\n};\n\n// Recreate the convenience method.\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\n\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function(fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function(obj) {\n    var field, res;\n    res = fun(obj);\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n    return res;\n  };\n};\n"]}}