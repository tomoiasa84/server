{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":["extendPublish"],"specifiers":[{"kind":"local","local":"extendPublish","exported":"extendPublish"}]}}},"options":{"filename":"packages/peerlibrary:extend-publish/server.coffee","filenameRelative":"packages/peerlibrary:extend-publish/server.coffee","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/peerlibrary:extend-publish/server.coffee.map","sourceFileName":"packages/peerlibrary:extend-publish/server.coffee","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"module.export({\n  extendPublish: () => extendPublish\n});\n\nvar extendPublish = function (newPublishArguments) {\n  var Server, originalMeteorPublish, originalPublish; // DDP Server constructor.\n\n  Server = Object.getPrototypeOf(Meteor.server).constructor;\n  originalPublish = Server.prototype.publish;\n\n  Server.prototype.publish = function (...args) {\n    var newArgs; // If the first argument is an object, we let the original publish function to traverse it.\n\n    if (_.isObject(args[0])) {\n      originalPublish.apply(this, args);\n      return;\n    }\n\n    newArgs = newPublishArguments.apply(this, args);\n    return originalPublish.apply(this, newArgs);\n  }; // Because Meteor.publish is a bound function it remembers old\n  // prototype method so we have wrap it to directly as well.\n\n\n  originalMeteorPublish = Meteor.publish;\n  return Meteor.publish = function (...args) {\n    var newArgs; // If the first argument is an object, we let the original publish function to traverse it.\n\n    if (_.isObject(args[0])) {\n      originalMeteorPublish.apply(this, args);\n      return;\n    }\n\n    newArgs = newPublishArguments.apply(this, args);\n    return originalMeteorPublish.apply(this, newArgs);\n  };\n};","map":{"version":3,"sources":["packages/peerlibrary:extend-publish/server.coffee"],"names":["module","export","extendPublish","newPublishArguments","Server","originalMeteorPublish","originalPublish","Object","getPrototypeOf","Meteor","server","constructor","prototype","publish","args","newArgs","_","isObject","apply"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,iBAAc,MAAIA;AAAnB,CAAd;;AAAO,IAAIA,gBAAgB,UAASC,mBAAT,EAA8B;AACvD,MAAIC,MAAJ,EAAYC,qBAAZ,EAAmCC,eAAnC,CADuD,CAEvD;;AACAF,WAASG,OAAOC,cAAP,CAAsBC,OAAOC,MAA7B,EAAqCC,WAA9C;AACAL,oBAAkBF,OAAOQ,SAAP,CAAiBC,OAAnC;;AACAT,SAAOQ,SAAP,CAAiBC,OAAjB,GAA2B,UAAS,GAAGC,IAAZ,EAAkB;AAC3C,QAAIC,OAAJ,CAD2C,CAE3C;;AACA,QAAIC,EAAEC,QAAF,CAAWH,KAAK,CAAL,CAAX,CAAJ,EAAyB;AACvBR,sBAAgBY,KAAhB,CAAsB,IAAtB,EAA4BJ,IAA5B;AACA;AACD;;AACDC,cAAUZ,oBAAoBe,KAApB,CAA0B,IAA1B,EAAgCJ,IAAhC,CAAV;AACA,WAAOR,gBAAgBY,KAAhB,CAAsB,IAAtB,EAA4BH,OAA5B,CAAP;AACD,GATD,CALuD,CAevD;AACA;;;AACAV,0BAAwBI,OAAOI,OAA/B;AACA,SAAOJ,OAAOI,OAAP,GAAiB,UAAS,GAAGC,IAAZ,EAAkB;AACxC,QAAIC,OAAJ,CADwC,CAExC;;AACA,QAAIC,EAAEC,QAAF,CAAWH,KAAK,CAAL,CAAX,CAAJ,EAAyB;AACvBT,4BAAsBa,KAAtB,CAA4B,IAA5B,EAAkCJ,IAAlC;AACA;AACD;;AACDC,cAAUZ,oBAAoBe,KAApB,CAA0B,IAA1B,EAAgCJ,IAAhC,CAAV;AACA,WAAOT,sBAAsBa,KAAtB,CAA4B,IAA5B,EAAkCH,OAAlC,CAAP;AACD,GATD;AAUD,CA5BM","file":"packages/peerlibrary:extend-publish/server.coffee.map","sourcesContent":["export var extendPublish = function(newPublishArguments) {\n  var Server, originalMeteorPublish, originalPublish;\n  // DDP Server constructor.\n  Server = Object.getPrototypeOf(Meteor.server).constructor;\n  originalPublish = Server.prototype.publish;\n  Server.prototype.publish = function(...args) {\n    var newArgs;\n    // If the first argument is an object, we let the original publish function to traverse it.\n    if (_.isObject(args[0])) {\n      originalPublish.apply(this, args);\n      return;\n    }\n    newArgs = newPublishArguments.apply(this, args);\n    return originalPublish.apply(this, newArgs);\n  };\n  // Because Meteor.publish is a bound function it remembers old\n  // prototype method so we have wrap it to directly as well.\n  originalMeteorPublish = Meteor.publish;\n  return Meteor.publish = function(...args) {\n    var newArgs;\n    // If the first argument is an object, we let the original publish function to traverse it.\n    if (_.isObject(args[0])) {\n      originalMeteorPublish.apply(this, args);\n      return;\n    }\n    newArgs = newPublishArguments.apply(this, args);\n    return originalMeteorPublish.apply(this, newArgs);\n  };\n};\n"]},"hash":"d5a0ff49e43def1e439a5978d397d5000ea0adf2"}
